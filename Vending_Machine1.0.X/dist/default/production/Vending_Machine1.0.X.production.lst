

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Dec 14 23:37:14 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK1
    95  006053                     __pidataBANK1:
    96                           	callstack 0
    97                           
    98                           ;initializer for _keypad
    99  006053  37                 	db	55
   100  006054  38                 	db	56
   101  006055  39                 	db	57
   102  006056  2F                 	db	47
   103  006057  34                 	db	52
   104  006058  35                 	db	53
   105  006059  36                 	db	54
   106  00605A  2A                 	db	42
   107  00605B  31                 	db	49
   108  00605C  32                 	db	50
   109  00605D  33                 	db	51
   110  00605E  2D                 	db	45
   111  00605F  20                 	db	32
   112  006060  30                 	db	48
   113  006061  3D                 	db	61
   114  006062  2B                 	db	43
   115                           
   116                           ;initializer for main@F3722
   117  006063  03E8               	dw	1000
   118  006065  0DAC               	dw	3500
   119  006067  01F4               	dw	500
   120  006069  07D0               	dw	2000
   121                           
   122                           ;initializer for main@F3720
   123  00606B  0002               	dw	2
   124  00606D  0003               	dw	3
   125  00606F  0001               	dw	1
   126  006071  0001               	dw	1
   127                           
   128                           ;initializer for Rtc@F3747
   129  006073  53                 	db	83
   130  006074  4D                 	db	77
   131  006075  54                 	db	84
   132  006076  57                 	db	87
   133  006077  74                 	db	116
   134  006078  46                 	db	70
   135  006079  73                 	db	115
   136                           
   137                           	psect	nvBANK1
   138  000159                     __pnvBANK1:
   139                           	callstack 0
   140  000159                     _saldo:
   141                           	callstack 0
   142  000159                     	ds	2
   143  0000                     _SSPCON2	set	4037
   144  0000                     _SSPCON1	set	4038
   145  0000                     _SSPSTAT	set	4039
   146  0000                     _LATC	set	3979
   147  0000                     _TRISC	set	3988
   148  0000                     _SSPSTATbits	set	4039
   149  0000                     _SSPBUF	set	4041
   150  0000                     _SSPCON2bits	set	4037
   151  0000                     _SSPADD	set	4040
   152  0000                     _SSPCON1bits	set	4038
   153  0000                     _TRISB	set	3987
   154  0000                     _OSCCONbits	set	4051
   155  0000                     _OSCCON	set	4051
   156  0000                     _TRISA	set	3986
   157  0000                     _PORTD	set	3971
   158  0000                     _LATD	set	3980
   159  0000                     _TRISD	set	3989
   160  0000                     _ACKEN	set	32300
   161  0000                     _ACKDT	set	32301
   162  0000                     _PEN	set	32298
   163  0000                     _RSEN	set	32297
   164  0000                     _ACKSTAT	set	32302
   165  0000                     _SSPIF	set	31987
   166  0000                     _SSPIE	set	31979
   167  0000                     _TRISB1	set	31897
   168  0000                     _TRISB0	set	31896
   169  0000                     _RCEN	set	32299
   170  0000                     _LATC1	set	31833
   171  0000                     _LATC0	set	31832
   172  0000                     _LATA0	set	31816
   173  0000                     _LATA1	set	31817
   174  0000                     _LATA2	set	31818
   175  0000                     _RDPU	set	31783
   176                           
   177                           	psect	mediumconst
   178  007E9E                     __pmediumconst:
   179                           	callstack 0
   180  007E9E  00                 	db	0
   181  007E9F                     STR_2:
   182  007E9F  50                 	db	80	;'P'
   183  007EA0  72                 	db	114	;'r'
   184  007EA1  65                 	db	101	;'e'
   185  007EA2  73                 	db	115	;'s'
   186  007EA3  69                 	db	105	;'i'
   187  007EA4  6F                 	db	111	;'o'
   188  007EA5  6E                 	db	110	;'n'
   189  007EA6  65                 	db	101	;'e'
   190  007EA7  20                 	db	32
   191  007EA8  75                 	db	117	;'u'
   192  007EA9  6E                 	db	110	;'n'
   193  007EAA  61                 	db	97	;'a'
   194  007EAB  20                 	db	32
   195  007EAC  74                 	db	116	;'t'
   196  007EAD  65                 	db	101	;'e'
   197  007EAE  63                 	db	99	;'c'
   198  007EAF  6C                 	db	108	;'l'
   199  007EB0  61                 	db	97	;'a'
   200  007EB1  2E                 	db	46
   201  007EB2  2E                 	db	46
   202  007EB3  00                 	db	0
   203  007EB4                     STR_26:
   204  007EB4  47                 	db	71	;'G'
   205  007EB5  52                 	db	82	;'R'
   206  007EB6  41                 	db	65	;'A'
   207  007EB7  43                 	db	67	;'C'
   208  007EB8  49                 	db	73	;'I'
   209  007EB9  41                 	db	65	;'A'
   210  007EBA  53                 	db	83	;'S'
   211  007EBB  20                 	db	32
   212  007EBC  50                 	db	80	;'P'
   213  007EBD  4F                 	db	79	;'O'
   214  007EBE  52                 	db	82	;'R'
   215  007EBF  20                 	db	32
   216  007EC0  43                 	db	67	;'C'
   217  007EC1  4F                 	db	79	;'O'
   218  007EC2  4D                 	db	77	;'M'
   219  007EC3  50                 	db	80	;'P'
   220  007EC4  52                 	db	82	;'R'
   221  007EC5  41                 	db	65	;'A'
   222  007EC6  52                 	db	82	;'R'
   223  007EC7  00                 	db	0
   224  007EC8                     STR_21:
   225  007EC8  53                 	db	83	;'S'
   226  007EC9  61                 	db	97	;'a'
   227  007ECA  6C                 	db	108	;'l'
   228  007ECB  64                 	db	100	;'d'
   229  007ECC  6F                 	db	111	;'o'
   230  007ECD  20                 	db	32
   231  007ECE  69                 	db	105	;'i'
   232  007ECF  6E                 	db	110	;'n'
   233  007ED0  73                 	db	115	;'s'
   234  007ED1  75                 	db	117	;'u'
   235  007ED2  66                 	db	102	;'f'
   236  007ED3  69                 	db	105	;'i'
   237  007ED4  63                 	db	99	;'c'
   238  007ED5  69                 	db	105	;'i'
   239  007ED6  6E                 	db	110	;'n'
   240  007ED7  74                 	db	116	;'t'
   241  007ED8  65                 	db	101	;'e'
   242  007ED9  20                 	db	32
   243  007EDA  00                 	db	0
   244  007EDB                     STR_4:
   245  007EDB  32                 	db	50	;'2'
   246  007EDC  2E                 	db	46
   247  007EDD  47                 	db	71	;'G'
   248  007EDE  61                 	db	97	;'a'
   249  007EDF  73                 	db	115	;'s'
   250  007EE0  65                 	db	101	;'e'
   251  007EE1  6F                 	db	111	;'o'
   252  007EE2  73                 	db	115	;'s'
   253  007EE3  61                 	db	97	;'a'
   254  007EE4  20                 	db	32
   255  007EE5  33                 	db	51	;'3'
   256  007EE6  4C                 	db	76	;'L'
   257  007EE7  20                 	db	32
   258  007EE8  24                 	db	36
   259  007EE9  33                 	db	51	;'3'
   260  007EEA  35                 	db	53	;'5'
   261  007EEB  30                 	db	48	;'0'
   262  007EEC  30                 	db	48	;'0'
   263  007EED  00                 	db	0
   264  007EEE                     STR_11:
   265  007EEE  53                 	db	83	;'S'
   266  007EEF  65                 	db	101	;'e'
   267  007EF0  20                 	db	32
   268  007EF1  61                 	db	97	;'a'
   269  007EF2  67                 	db	103	;'g'
   270  007EF3  72                 	db	114	;'r'
   271  007EF4  65                 	db	101	;'e'
   272  007EF5  67                 	db	103	;'g'
   273  007EF6  6F                 	db	111	;'o'
   274  007EF7  20                 	db	32
   275  007EF8  62                 	db	98	;'b'
   276  007EF9  6F                 	db	111	;'o'
   277  007EFA  6D                 	db	109	;'m'
   278  007EFB  62                 	db	98	;'b'
   279  007EFC  6F                 	db	111	;'o'
   280  007EFD  6E                 	db	110	;'n'
   281  007EFE  65                 	db	101	;'e'
   282  007EFF  73                 	db	115	;'s'
   283  007F00  00                 	db	0
   284  007F01                     STR_9:
   285  007F01  53                 	db	83	;'S'
   286  007F02  65                 	db	101	;'e'
   287  007F03  20                 	db	32
   288  007F04  61                 	db	97	;'a'
   289  007F05  67                 	db	103	;'g'
   290  007F06  72                 	db	114	;'r'
   291  007F07  65                 	db	101	;'e'
   292  007F08  67                 	db	103	;'g'
   293  007F09  6F                 	db	111	;'o'
   294  007F0A  20                 	db	32
   295  007F0B  47                 	db	71	;'G'
   296  007F0C  61                 	db	97	;'a'
   297  007F0D  73                 	db	115	;'s'
   298  007F0E  65                 	db	101	;'e'
   299  007F0F  6F                 	db	111	;'o'
   300  007F10  73                 	db	115	;'s'
   301  007F11  61                 	db	97	;'a'
   302  007F12  00                 	db	0
   303  007F13                     STR_5:
   304  007F13  33                 	db	51	;'3'
   305  007F14  2E                 	db	46
   306  007F15  42                 	db	66	;'B'
   307  007F16  6F                 	db	111	;'o'
   308  007F17  6D                 	db	109	;'m'
   309  007F18  62                 	db	98	;'b'
   310  007F19  6F                 	db	111	;'o'
   311  007F1A  6E                 	db	110	;'n'
   312  007F1B  65                 	db	101	;'e'
   313  007F1C  73                 	db	115	;'s'
   314  007F1D  20                 	db	32
   315  007F1E  24                 	db	36
   316  007F1F  35                 	db	53	;'5'
   317  007F20  30                 	db	48	;'0'
   318  007F21  30                 	db	48	;'0'
   319  007F22  00                 	db	0
   320  007F23                     STR_13:
   321  007F23  53                 	db	83	;'S'
   322  007F24  65                 	db	101	;'e'
   323  007F25  20                 	db	32
   324  007F26  61                 	db	97	;'a'
   325  007F27  67                 	db	103	;'g'
   326  007F28  72                 	db	114	;'r'
   327  007F29  65                 	db	101	;'e'
   328  007F2A  67                 	db	103	;'g'
   329  007F2B  6F                 	db	111	;'o'
   330  007F2C  20                 	db	32
   331  007F2D  50                 	db	80	;'P'
   332  007F2E  61                 	db	97	;'a'
   333  007F2F  70                 	db	112	;'p'
   334  007F30  61                 	db	97	;'a'
   335  007F31  73                 	db	115	;'s'
   336  007F32  00                 	db	0
   337  007F33                     STR_23:
   338  007F33  53                 	db	83	;'S'
   339  007F34  75                 	db	117	;'u'
   340  007F35  20                 	db	32
   341  007F36  63                 	db	99	;'c'
   342  007F37  61                 	db	97	;'a'
   343  007F38  6D                 	db	109	;'m'
   344  007F39  62                 	db	98	;'b'
   345  007F3A  69                 	db	105	;'i'
   346  007F3B  6F                 	db	111	;'o'
   347  007F3C  20                 	db	32
   348  007F3D  65                 	db	101	;'e'
   349  007F3E  73                 	db	115	;'s'
   350  007F3F  3A                 	db	58	;':'
   351  007F40  20                 	db	32
   352  007F41  00                 	db	0
   353  007F42                     STR_7:
   354  007F42  53                 	db	83	;'S'
   355  007F43  65                 	db	101	;'e'
   356  007F44  20                 	db	32
   357  007F45  61                 	db	97	;'a'
   358  007F46  67                 	db	103	;'g'
   359  007F47  72                 	db	114	;'r'
   360  007F48  65                 	db	101	;'e'
   361  007F49  67                 	db	103	;'g'
   362  007F4A  6F                 	db	111	;'o'
   363  007F4B  20                 	db	32
   364  007F4C  43                 	db	67	;'C'
   365  007F4D  61                 	db	97	;'a'
   366  007F4E  66                 	db	102	;'f'
   367  007F4F  65                 	db	101	;'e'
   368  007F50  00                 	db	0
   369  007F51                     STR_6:
   370  007F51  34                 	db	52	;'4'
   371  007F52  2E                 	db	46
   372  007F53  50                 	db	80	;'P'
   373  007F54  61                 	db	97	;'a'
   374  007F55  70                 	db	112	;'p'
   375  007F56  61                 	db	97	;'a'
   376  007F57  73                 	db	115	;'s'
   377  007F58  20                 	db	32
   378  007F59  24                 	db	36
   379  007F5A  32                 	db	50	;'2'
   380  007F5B  30                 	db	48	;'0'
   381  007F5C  30                 	db	48	;'0'
   382  007F5D  30                 	db	48	;'0'
   383  007F5E  00                 	db	0
   384  007F5F                     STR_8:
   385  007F5F  4E                 	db	78	;'N'
   386  007F60  6F                 	db	111	;'o'
   387  007F61  20                 	db	32
   388  007F62  64                 	db	100	;'d'
   389  007F63  69                 	db	105	;'i'
   390  007F64  73                 	db	115	;'s'
   391  007F65  70                 	db	112	;'p'
   392  007F66  6F                 	db	111	;'o'
   393  007F67  6E                 	db	110	;'n'
   394  007F68  69                 	db	105	;'i'
   395  007F69  62                 	db	98	;'b'
   396  007F6A  6C                 	db	108	;'l'
   397  007F6B  65                 	db	101	;'e'
   398  007F6C  00                 	db	0
   399  007F6D                     STR_16:
   400  007F6D  6F                 	db	111	;'o'
   401  007F6E  74                 	db	116	;'t'
   402  007F6F  72                 	db	114	;'r'
   403  007F70  6F                 	db	111	;'o'
   404  007F71  20                 	db	32
   405  007F72  70                 	db	112	;'p'
   406  007F73  72                 	db	114	;'r'
   407  007F74  6F                 	db	111	;'o'
   408  007F75  64                 	db	100	;'d'
   409  007F76  75                 	db	117	;'u'
   410  007F77  63                 	db	99	;'c'
   411  007F78  74                 	db	116	;'t'
   412  007F79  6F                 	db	111	;'o'
   413  007F7A  00                 	db	0
   414  007F7B                     STR_15:
   415  007F7B  44                 	db	68	;'D'
   416  007F7C  65                 	db	101	;'e'
   417  007F7D  73                 	db	115	;'s'
   418  007F7E  65                 	db	101	;'e'
   419  007F7F  61                 	db	97	;'a'
   420  007F80  20                 	db	32
   421  007F81  61                 	db	97	;'a'
   422  007F82  6E                 	db	110	;'n'
   423  007F83  69                 	db	105	;'i'
   424  007F84  61                 	db	97	;'a'
   425  007F85  64                 	db	100	;'d'
   426  007F86  69                 	db	105	;'i'
   427  007F87  72                 	db	114	;'r'
   428  007F88  00                 	db	0
   429  007F89                     STR_1:
   430  007F89  2D                 	db	45
   431  007F8A  42                 	db	66	;'B'
   432  007F8B  69                 	db	105	;'i'
   433  007F8C  65                 	db	101	;'e'
   434  007F8D  6E                 	db	110	;'n'
   435  007F8E  76                 	db	118	;'v'
   436  007F8F  65                 	db	101	;'e'
   437  007F90  6E                 	db	110	;'n'
   438  007F91  69                 	db	105	;'i'
   439  007F92  64                 	db	100	;'d'
   440  007F93  6F                 	db	111	;'o'
   441  007F94  2D                 	db	45
   442  007F95  00                 	db	0
   443  007F96                     STR_3:
   444  007F96  31                 	db	49	;'1'
   445  007F97  2E                 	db	46
   446  007F98  43                 	db	67	;'C'
   447  007F99  61                 	db	97	;'a'
   448  007F9A  66                 	db	102	;'f'
   449  007F9B  65                 	db	101	;'e'
   450  007F9C  20                 	db	32
   451  007F9D  24                 	db	36
   452  007F9E  31                 	db	49	;'1'
   453  007F9F  30                 	db	48	;'0'
   454  007FA0  30                 	db	48	;'0'
   455  007FA1  30                 	db	48	;'0'
   456  007FA2  00                 	db	0
   457  007FA3                     STR_35:
   458  007FA3  44                 	db	68	;'D'
   459  007FA4  61                 	db	97	;'a'
   460  007FA5  74                 	db	116	;'t'
   461  007FA6  65                 	db	101	;'e'
   462  007FA7  3A                 	db	58	;':'
   463  007FA8  20                 	db	32
   464  007FA9  25                 	db	37
   465  007FAA  78                 	db	120	;'x'
   466  007FAB  2D                 	db	45
   467  007FAC  00                 	db	0
   468  007FAD                     STR_31:
   469  007FAD  48                 	db	72	;'H'
   470  007FAE  6F                 	db	111	;'o'
   471  007FAF  72                 	db	114	;'r'
   472  007FB0  61                 	db	97	;'a'
   473  007FB1  3A                 	db	58	;':'
   474  007FB2  25                 	db	37
   475  007FB3  78                 	db	120	;'x'
   476  007FB4  3A                 	db	58	;':'
   477  007FB5  00                 	db	0
   478  007FB6                     STR_34:
   479  007FB6  54                 	db	84	;'T'
   480  007FB7  69                 	db	105	;'i'
   481  007FB8  6D                 	db	109	;'m'
   482  007FB9  65                 	db	101	;'e'
   483  007FBA  3A                 	db	58	;':'
   484  007FBB  25                 	db	37
   485  007FBC  78                 	db	120	;'x'
   486  007FBD  3A                 	db	58	;':'
   487  007FBE  00                 	db	0
   488  007FBF                     STR_20:
   489  007FBF  54                 	db	84	;'T'
   490  007FC0  4F                 	db	79	;'O'
   491  007FC1  54                 	db	84	;'T'
   492  007FC2  41                 	db	65	;'A'
   493  007FC3  4C                 	db	76	;'L'
   494  007FC4  20                 	db	32
   495  007FC5  3A                 	db	58	;':'
   496  007FC6  00                 	db	0
   497  007FC7                     STR_17:
   498  007FC7  2B                 	db	43
   499  007FC8  2E                 	db	46
   500  007FC9  53                 	db	83	;'S'
   501  007FCA  69                 	db	105	;'i'
   502  007FCB  00                 	db	0
   503  007FCC                     STR_18:
   504  007FCC  3D                 	db	61	;'='
   505  007FCD  2E                 	db	46
   506  007FCE  4E                 	db	78	;'N'
   507  007FCF  6F                 	db	111	;'o'
   508  007FD0  00                 	db	0
   509  007FD1                     STR_29:
   510  007FD1  25                 	db	37
   511  007FD2  78                 	db	120	;'x'
   512  007FD3  20                 	db	32
   513  007FD4  00                 	db	0
   514  007FD5                     STR_41:
   515  007FD5  57                 	db	87	;'W'
   516  007FD6  65                 	db	101	;'e'
   517  007FD7  64                 	db	100	;'d'
   518  007FD8  00                 	db	0
   519  007FD9                     STR_40:
   520  007FD9  54                 	db	84	;'T'
   521  007FDA  75                 	db	117	;'u'
   522  007FDB  65                 	db	101	;'e'
   523  007FDC  00                 	db	0
   524  007FDD                     STR_43:
   525  007FDD  46                 	db	70	;'F'
   526  007FDE  72                 	db	114	;'r'
   527  007FDF  69                 	db	105	;'i'
   528  007FE0  00                 	db	0
   529  007FE1                     STR_39:
   530  007FE1  4D                 	db	77	;'M'
   531  007FE2  6F                 	db	111	;'o'
   532  007FE3  6E                 	db	110	;'n'
   533  007FE4  00                 	db	0
   534  007FE5                     STR_38:
   535  007FE5  53                 	db	83	;'S'
   536  007FE6  75                 	db	117	;'u'
   537  007FE7  6E                 	db	110	;'n'
   538  007FE8  00                 	db	0
   539  007FE9                     STR_44:
   540  007FE9  53                 	db	83	;'S'
   541  007FEA  61                 	db	97	;'a'
   542  007FEB  74                 	db	116	;'t'
   543  007FEC  00                 	db	0
   544  007FED                     STR_42:
   545  007FED  54                 	db	84	;'T'
   546  007FEE  68                 	db	104	;'h'
   547  007FEF  75                 	db	117	;'u'
   548  007FF0  00                 	db	0
   549  007FF1                     STR_28:
   550  007FF1  41                 	db	65	;'A'
   551  007FF2  4D                 	db	77	;'M'
   552  007FF3  00                 	db	0
   553  007FF4                     STR_27:
   554  007FF4  50                 	db	80	;'P'
   555  007FF5  4D                 	db	77	;'M'
   556  007FF6  00                 	db	0
   557  007FF7                     STR_19:
   558  007FF7  25                 	db	37
   559  007FF8  64                 	db	100	;'d'
   560  007FF9  00                 	db	0
   561  007FFA                     STR_33:
   562  007FFA  25                 	db	37
   563  007FFB  78                 	db	120	;'x'
   564  007FFC  00                 	db	0
   565  007FFD                     STR_45:
   566  007FFD  32                 	db	50	;'2'
   567  007FFE  00                 	db	0
   568  007FFF  00                 	db	0	; dummy byte at the end
   569  0000                     
   570                           ; #config settings
   571                           
   572                           	psect	cinit
   573  006262                     __pcinit:
   574                           	callstack 0
   575  006262                     start_initialization:
   576                           	callstack 0
   577  006262                     __initialization:
   578                           	callstack 0
   579                           
   580                           ; Initialize objects allocated to BANK1 (39 bytes)
   581                           ; load TBLPTR registers with __pidataBANK1
   582  006262  0E53               	movlw	low __pidataBANK1
   583  006264  6EF6               	movwf	tblptrl,c
   584  006266  0E60               	movlw	high __pidataBANK1
   585  006268  6EF7               	movwf	tblptrh,c
   586  00626A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   587  00626C  6EF8               	movwf	tblptru,c
   588  00626E  EE01  F032         	lfsr	0,__pdataBANK1
   589  006272  EE10 F027          	lfsr	1,39
   590  006276                     copy_data0:
   591  006276  0009               	tblrd		*+
   592  006278  CFF5 FFEE          	movff	tablat,postinc0
   593  00627C  50E5               	movf	postdec1,w,c
   594  00627E  50E1               	movf	fsr1l,w,c
   595  006280  E1FA               	bnz	copy_data0
   596                           
   597                           ; Clear objects allocated to BANK1 (50 bytes)
   598  006282  EE01  F000         	lfsr	0,__pbssBANK1
   599  006286  0E32               	movlw	50
   600  006288                     clear_0:
   601  006288  6AEE               	clrf	postinc0,c
   602  00628A  06E8               	decf	wreg,f,c
   603  00628C  E1FD               	bnz	clear_0
   604                           
   605                           ; Clear objects allocated to BANK0 (14 bytes)
   606  00628E  EE00  F0F0         	lfsr	0,__pbssBANK0
   607  006292  0E0E               	movlw	14
   608  006294                     clear_1:
   609  006294  6AEE               	clrf	postinc0,c
   610  006296  06E8               	decf	wreg,f,c
   611  006298  E1FD               	bnz	clear_1
   612  00629A                     end_of_initialization:
   613                           	callstack 0
   614  00629A                     __end_of__initialization:
   615                           	callstack 0
   616  00629A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   617  00629C  6EF8               	movwf	tblptru,c
   618  00629E  0100               	movlb	0
   619  0062A0  EF7E  F03C         	goto	_main	;jump to C main() function
   620                           
   621                           	psect	bssBANK0
   622  0000F0                     __pbssBANK0:
   623                           	callstack 0
   624  0000F0                     _prec:
   625                           	callstack 0
   626  0000F0                     	ds	2
   627  0000F2                     _flags:
   628                           	callstack 0
   629  0000F2                     	ds	2
   630  0000F4                     _hour:
   631                           	callstack 0
   632  0000F4                     	ds	2
   633  0000F6                     _min:
   634                           	callstack 0
   635  0000F6                     	ds	2
   636  0000F8                     _sec:
   637                           	callstack 0
   638  0000F8                     	ds	2
   639  0000FA                     _Data_read:
   640                           	callstack 0
   641  0000FA                     	ds	1
   642  0000FB                     _temp_col:
   643                           	callstack 0
   644  0000FB                     	ds	1
   645  0000FC                     _rowloc:
   646                           	callstack 0
   647  0000FC                     	ds	1
   648  0000FD                     _col_loc:
   649                           	callstack 0
   650  0000FD                     	ds	1
   651                           
   652                           	psect	bssBANK1
   653  000100                     __pbssBANK1:
   654                           	callstack 0
   655  000100                     _v_proentregar:
   656                           	callstack 0
   657  000100                     	ds	6
   658  000106                     _nout:
   659                           	callstack 0
   660  000106                     	ds	2
   661  000108                     _width:
   662                           	callstack 0
   663  000108                     	ds	2
   664  00010A                     _Year:
   665                           	callstack 0
   666  00010A                     	ds	2
   667  00010C                     _Month:
   668                           	callstack 0
   669  00010C                     	ds	2
   670  00010E                     _Date:
   671                           	callstack 0
   672  00010E                     	ds	2
   673  000110                     _Day:
   674                           	callstack 0
   675  000110                     	ds	2
   676  000112                     _dbuf:
   677                           	callstack 0
   678  000112                     	ds	32
   679                           
   680                           	psect	dataBANK1
   681  000132                     __pdataBANK1:
   682                           	callstack 0
   683  000132                     _keypad:
   684                           	callstack 0
   685  000132                     	ds	16
   686  000142                     main@F3722:
   687                           	callstack 0
   688  000142                     	ds	8
   689  00014A                     main@F3720:
   690                           	callstack 0
   691  00014A                     	ds	8
   692  000152                     Rtc@F3747:
   693                           	callstack 0
   694  000152                     	ds	7
   695                           
   696                           	psect	cstackBANK0
   697  000060                     __pcstackBANK0:
   698                           	callstack 0
   699  000060                     ?_vfprintf:
   700                           	callstack 0
   701  000060                     vfprintf@fp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x0
   705  000060                     	ds	2
   706  000062                     vfprintf@fmt:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x2
   710  000062                     	ds	2
   711  000064                     vfprintf@ap:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x4
   715  000064                     	ds	2
   716  000066                     ?_sprintf:
   717                           	callstack 0
   718  000066                     sprintf@s:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x6
   722  000066                     	ds	2
   723  000068                     sprintf@fmt:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x8
   727  000068                     	ds	6
   728  00006E                     sprintf@ap:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xE
   732  00006E                     	ds	2
   733  000070                     sprintf@f:
   734                           	callstack 0
   735                           
   736                           ; 6 bytes @ 0x10
   737  000070                     	ds	6
   738  000076                     ??_Rtc:
   739                           
   740                           ; 1 bytes @ 0x16
   741  000076                     	ds	2
   742  000078                     Rtc@days:
   743                           	callstack 0
   744                           
   745                           ; 7 bytes @ 0x18
   746  000078                     	ds	7
   747  00007F                     Rtc@date:
   748                           	callstack 0
   749                           
   750                           ; 10 bytes @ 0x1F
   751  00007F                     	ds	10
   752  000089                     Rtc@month:
   753                           	callstack 0
   754                           
   755                           ; 10 bytes @ 0x29
   756  000089                     	ds	10
   757  000093                     Rtc@year:
   758                           	callstack 0
   759                           
   760                           ; 10 bytes @ 0x33
   761  000093                     	ds	10
   762  00009D                     Rtc@secs:
   763                           	callstack 0
   764                           
   765                           ; 10 bytes @ 0x3D
   766  00009D                     	ds	10
   767  0000A7                     Rtc@mins:
   768                           	callstack 0
   769                           
   770                           ; 10 bytes @ 0x47
   771  0000A7                     	ds	10
   772  0000B1                     Rtc@hours:
   773                           	callstack 0
   774                           
   775                           ; 10 bytes @ 0x51
   776  0000B1                     	ds	11
   777  0000BC                     Rtc@AM_PM:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x5C
   781  0000BC                     	ds	1
   782  0000BD                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x5D
   785  0000BD                     	ds	3
   786  0000C0                     main@c:
   787                           	callstack 0
   788                           
   789                           ; 6 bytes @ 0x60
   790  0000C0                     	ds	6
   791  0000C6                     main@c1:
   792                           	callstack 0
   793                           
   794                           ; 6 bytes @ 0x66
   795  0000C6                     	ds	6
   796  0000CC                     main@c1_402:
   797                           	callstack 0
   798                           
   799                           ; 6 bytes @ 0x6C
   800  0000CC                     	ds	7
   801  0000D3                     main@v_proprecios:
   802                           	callstack 0
   803                           
   804                           ; 8 bytes @ 0x73
   805  0000D3                     	ds	8
   806  0000DB                     main@a:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x7B
   810  0000DB                     	ds	2
   811  0000DD                     main@a1:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x7D
   815  0000DD                     	ds	2
   816  0000DF                     main@a1_401:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x7F
   820  0000DF                     	ds	2
   821  0000E1                     main@z:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x81
   825  0000E1                     	ds	2
   826  0000E3                     main@v_prodisponibles:
   827                           	callstack 0
   828                           
   829                           ; 8 bytes @ 0x83
   830  0000E3                     	ds	8
   831  0000EB                     main@key:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x8B
   835  0000EB                     	ds	1
   836  0000EC                     main@compra:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x8C
   840  0000EC                     	ds	2
   841  0000EE                     main@i:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x8E
   845  0000EE                     	ds	2
   846                           
   847                           	psect	cstackCOMRAM
   848  000001                     __pcstackCOMRAM:
   849                           	callstack 0
   850  000001                     ?_strlen:
   851                           	callstack 0
   852  000001                     ?_isupper:
   853                           	callstack 0
   854  000001                     ?_isalpha:
   855                           	callstack 0
   856  000001                     ?_islower:
   857                           	callstack 0
   858  000001                     ?___aodiv:
   859                           	callstack 0
   860  000001                     ?___aomod:
   861                           	callstack 0
   862  000001                     I2C_Read@flag:
   863                           	callstack 0
   864  000001                     I2C_Write@data:
   865                           	callstack 0
   866  000001                     MSdelay@val:
   867                           	callstack 0
   868  000001                     isalpha@c:
   869                           	callstack 0
   870  000001                     isupper@c:
   871                           	callstack 0
   872  000001                     fputc@c:
   873                           	callstack 0
   874  000001                     strlen@s:
   875                           	callstack 0
   876  000001                     islower@c:
   877                           	callstack 0
   878  000001                     ___aodiv@dividend:
   879                           	callstack 0
   880  000001                     ___aomod@dividend:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x0
   884  000001                     	ds	1
   885  000002                     I2C_Read@buffer:
   886                           	callstack 0
   887  000002                     I2C_Start@slave_write_address:
   888                           	callstack 0
   889  000002                     I2C_Repeated_Start@slave_read_address:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x1
   893  000002                     	ds	1
   894  000003                     ??_isupper:
   895  000003                     ??_isalpha:
   896  000003                     ??_islower:
   897  000003                     ??_RTC_Read_Clock:
   898  000003                     ??_RTC_Read_Calendar:
   899  000003                     MSdelay@i:
   900                           	callstack 0
   901  000003                     fputc@fp:
   902                           	callstack 0
   903  000003                     strlen@a:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     RTC_Read_Clock@read_clock_address:
   909                           	callstack 0
   910  000004                     RTC_Read_Calendar@read_calendar_address:
   911                           	callstack 0
   912                           
   913                           ; 1 bytes @ 0x3
   914  000004                     	ds	1
   915  000005                     ??_fputc:
   916  000005                     MSdelay@j:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x4
   920  000005                     	ds	2
   921  000007                     ??_LCD_Command:
   922  000007                     ??_LCD_Char:
   923  000007                     ?_toupper:
   924                           	callstack 0
   925  000007                     entregarproducto@a:
   926                           	callstack 0
   927  000007                     toupper@c:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x6
   931  000007                     	ds	1
   932  000008                     LCD_Command@cmd:
   933                           	callstack 0
   934  000008                     LCD_Char@dat:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x7
   938  000008                     	ds	1
   939  000009                     ??_toupper:
   940  000009                     entregarproductos@i:
   941                           	callstack 0
   942  000009                     LCD_String@msg:
   943                           	callstack 0
   944  000009                     ___aodiv@divisor:
   945                           	callstack 0
   946  000009                     ___aomod@divisor:
   947                           	callstack 0
   948                           
   949                           ; 8 bytes @ 0x8
   950  000009                     	ds	1
   951  00000A                     fputs@s:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x9
   955  00000A                     	ds	1
   956  00000B                     LCD_String_xy@pos:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0xA
   960  00000B                     	ds	1
   961  00000C                     LCD_String_xy@msg:
   962                           	callstack 0
   963  00000C                     fputs@fp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0xB
   967  00000C                     	ds	1
   968  00000D                     _toupper$1273:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0xC
   972  00000D                     	ds	1
   973  00000E                     LCD_String_xy@row:
   974                           	callstack 0
   975  00000E                     fputs@c:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0xD
   979  00000E                     	ds	1
   980  00000F                     fputs@i:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0xE
   984  00000F                     	ds	2
   985  000011                     ?_pad:
   986                           	callstack 0
   987  000011                     ___aodiv@counter:
   988                           	callstack 0
   989  000011                     ___aomod@counter:
   990                           	callstack 0
   991  000011                     pad@fp:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x10
   995  000011                     	ds	1
   996  000012                     ___aodiv@sign:
   997                           	callstack 0
   998  000012                     ___aomod@sign:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x11
  1002  000012                     	ds	1
  1003  000013                     ?_abs:
  1004                           	callstack 0
  1005  000013                     pad@buf:
  1006                           	callstack 0
  1007  000013                     abs@a:
  1008                           	callstack 0
  1009  000013                     ___aodiv@quotient:
  1010                           	callstack 0
  1011                           
  1012                           ; 8 bytes @ 0x12
  1013  000013                     	ds	2
  1014  000015                     ??_abs:
  1015  000015                     pad@p:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x14
  1019  000015                     	ds	2
  1020  000017                     ??_pad:
  1021                           
  1022                           ; 1 bytes @ 0x16
  1023  000017                     	ds	1
  1024  000018                     pad@i:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x17
  1028  000018                     	ds	2
  1029  00001A                     pad@w:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x19
  1033  00001A                     	ds	2
  1034  00001C                     ?_dtoa:
  1035                           	callstack 0
  1036  00001C                     ?_xtoa:
  1037                           	callstack 0
  1038  00001C                     dtoa@fp:
  1039                           	callstack 0
  1040  00001C                     xtoa@fp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x1B
  1044  00001C                     	ds	2
  1045  00001E                     dtoa@d:
  1046                           	callstack 0
  1047  00001E                     xtoa@d:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x1D
  1051  00001E                     	ds	8
  1052  000026                     ??_dtoa:
  1053  000026                     xtoa@x:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x25
  1057  000026                     	ds	1
  1058  000027                     ??_xtoa:
  1059                           
  1060                           ; 1 bytes @ 0x26
  1061  000027                     	ds	7
  1062  00002E                     _dtoa$1177:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x2D
  1066  00002E                     	ds	1
  1067  00002F                     _xtoa$1188:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2E
  1071  00002F                     	ds	1
  1072  000030                     dtoa@p:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x2F
  1076  000030                     	ds	1
  1077  000031                     _xtoa$1189:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x30
  1081  000031                     	ds	1
  1082  000032                     dtoa@w:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x31
  1086  000032                     	ds	1
  1087  000033                     xtoa@p:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x32
  1091  000033                     	ds	1
  1092  000034                     dtoa@s:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x33
  1096  000034                     	ds	1
  1097  000035                     xtoa@w:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x34
  1101  000035                     	ds	1
  1102  000036                     dtoa@n:
  1103                           	callstack 0
  1104                           
  1105                           ; 8 bytes @ 0x35
  1106  000036                     	ds	1
  1107  000037                     xtoa@n:
  1108                           	callstack 0
  1109                           
  1110                           ; 8 bytes @ 0x36
  1111  000037                     	ds	7
  1112  00003E                     dtoa@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x3D
  1116  00003E                     	ds	1
  1117  00003F                     xtoa@i:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x3E
  1121  00003F                     	ds	2
  1122  000041                     xtoa@c:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x40
  1126  000041                     	ds	2
  1127  000043                     ?_vfpfcnvrt:
  1128                           	callstack 0
  1129  000043                     vfpfcnvrt@fp:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x42
  1133  000043                     	ds	2
  1134  000045                     vfpfcnvrt@fmt:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x44
  1138  000045                     	ds	2
  1139  000047                     vfpfcnvrt@ap:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x46
  1143  000047                     	ds	2
  1144  000049                     ??_vfpfcnvrt:
  1145                           
  1146                           ; 1 bytes @ 0x48
  1147  000049                     	ds	4
  1148  00004D                     vfpfcnvrt@ll:
  1149                           	callstack 0
  1150                           
  1151                           ; 8 bytes @ 0x4C
  1152  00004D                     	ds	8
  1153  000055                     vfpfcnvrt@llu:
  1154                           	callstack 0
  1155                           
  1156                           ; 8 bytes @ 0x54
  1157  000055                     	ds	8
  1158  00005D                     vfpfcnvrt@c:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x5C
  1162  00005D                     	ds	1
  1163  00005E                     vfprintf@cfmt:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x5D
  1167  00005E                     	ds	2
  1168  000060                     
  1169                           ; 1 bytes @ 0x5F
  1170 ;;
  1171 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1172 ;;
  1173 ;; *************** function _main *****************
  1174 ;; Defined at:
  1175 ;;		line 59 in file "Vending_Machine.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  c1              6  108[BANK0 ] unsigned char [6]
  1180 ;;  a1              2  127[BANK0 ] int 
  1181 ;;  c1              6  102[BANK0 ] unsigned char [6]
  1182 ;;  a1              2  125[BANK0 ] int 
  1183 ;;  z               2  129[BANK0 ] int 
  1184 ;;  c               6   96[BANK0 ] unsigned char [6]
  1185 ;;  i               2  142[BANK0 ] int 
  1186 ;;  compra          2  140[BANK0 ] int 
  1187 ;;  a               2  123[BANK0 ] int 
  1188 ;;  v_prodisponi    8  131[BANK0 ] int [4]
  1189 ;;  v_proprecios    8  115[BANK0 ] int [4]
  1190 ;;  p               2    0        int 
  1191 ;;  x               2    0        int 
  1192 ;;  key             1  139[BANK0 ] unsigned char 
  1193 ;;  op              1    0        unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0
  1204 ;;      Locals:         0      52       0       0       0       0       0       0       0
  1205 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1206 ;;      Totals:         0      53       0       0       0       0       0       0       0
  1207 ;;Total ram usage:       53 bytes
  1208 ;; Hardware stack levels required when called:    9
  1209 ;; This function calls:
  1210 ;;		_I2C_Init
  1211 ;;		_LCD_Clear
  1212 ;;		_LCD_Init
  1213 ;;		_LCD_String
  1214 ;;		_LCD_String_xy
  1215 ;;		_MSdelay
  1216 ;;		_Rtc
  1217 ;;		_entregarproductos
  1218 ;;		_keyfind
  1219 ;;		_sprintf
  1220 ;; This function is called by:
  1221 ;;		Startup code after reset
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text0
  1226  0078FC                     __ptext0:
  1227                           	callstack 0
  1228  0078FC                     _main:
  1229                           	callstack 22
  1230  0078FC                     
  1231                           ;Vending_Machine.c: 63:     TRISA=0X00;
  1232  0078FC  0E00               	movlw	0
  1233  0078FE  6E92               	movwf	146,c	;volatile
  1234                           
  1235                           ;Vending_Machine.c: 66:     saldo = 5000;
  1236  007900  0E13               	movlw	19
  1237  007902  0101               	movlb	1	; () banked
  1238  007904  6F5A               	movwf	(_saldo+1)& (0+255),b
  1239  007906  0E88               	movlw	136
  1240  007908  6F59               	movwf	_saldo& (0+255),b
  1241  00790A                     
  1242                           ; BSR set to: 1
  1243                           ;Vending_Machine.c: 67:     char key;;Vending_Machine.c: 68:     int v_prodisponibles[] 
      +                          = {2,3,1,1};
  1244  00790A  EE21  F04A         	lfsr	2,main@F3720
  1245  00790E  EE10  F0E3         	lfsr	1,main@v_prodisponibles
  1246  007912  0E07               	movlw	7
  1247  007914                     u2751:
  1248  007914  CFDB FFE3          	movff	plusw2,plusw1
  1249  007918  06E8               	decf	wreg,f,c
  1250  00791A  E2FC               	bc	u2751
  1251  00791C                     
  1252                           ; BSR set to: 1
  1253                           ;Vending_Machine.c: 69:     int v_proprecios[] = {1000,3500,500,2000};
  1254  00791C  EE21  F042         	lfsr	2,main@F3722
  1255  007920  EE10  F0D3         	lfsr	1,main@v_proprecios
  1256  007924  0E07               	movlw	7
  1257  007926                     u2761:
  1258  007926  CFDB FFE3          	movff	plusw2,plusw1
  1259  00792A  06E8               	decf	wreg,f,c
  1260  00792C  E2FC               	bc	u2761
  1261  00792E                     
  1262                           ; BSR set to: 1
  1263                           ;Vending_Machine.c: 77:     RDPU = 0;
  1264  00792E  9E84               	bcf	3972,7,c	;volatile
  1265  007930                     
  1266                           ; BSR set to: 1
  1267                           ;Vending_Machine.c: 78:     I2C_Init();
  1268  007930  EC0B  F030         	call	_I2C_Init	;wreg free
  1269  007934                     
  1270                           ;Vending_Machine.c: 79:     LCD_Init();
  1271  007934  EC6B  F030         	call	_LCD_Init	;wreg free
  1272  007938                     
  1273                           ;Vending_Machine.c: 80:     LATA2=0XFF;
  1274  007938  8489               	bsf	3977,2,c	;volatile
  1275  00793A                     
  1276                           ;Vending_Machine.c: 81:     LCD_Clear();
  1277  00793A  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1278  00793E                     
  1279                           ;Vending_Machine.c: 82:     MSdelay(10);
  1280  00793E  0E00               	movlw	0
  1281  007940  6E02               	movwf	(MSdelay@val+1)^0,c
  1282  007942  0E0A               	movlw	10
  1283  007944  6E01               	movwf	MSdelay@val^0,c
  1284  007946  EC98  F031         	call	_MSdelay	;wreg free
  1285  00794A                     l3153:
  1286                           
  1287                           ;Vending_Machine.c: 84:         int i=0;
  1288  00794A  0E00               	movlw	0
  1289  00794C  0100               	movlb	0	; () banked
  1290  00794E  6FEF               	movwf	(main@i+1)& (0+255),b
  1291  007950  0E00               	movlw	0
  1292  007952  6FEE               	movwf	main@i& (0+255),b
  1293  007954                     
  1294                           ; BSR set to: 0
  1295                           ;Vending_Machine.c: 85:         for(int z=0;z<3;z++){
  1296  007954  0E00               	movlw	0
  1297  007956  6FE2               	movwf	(main@z+1)& (0+255),b
  1298  007958  0E00               	movlw	0
  1299  00795A  6FE1               	movwf	main@z& (0+255),b
  1300  00795C                     l3159:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Vending_Machine.c: 86:             v_proentregar[z]=0;
  1304  00795C  90D8               	bcf	status,0,c
  1305  00795E  35E1               	rlcf	main@z& (0+255),w,b
  1306  007960  6ED9               	movwf	fsr2l,c
  1307  007962  35E2               	rlcf	(main@z+1)& (0+255),w,b
  1308  007964  6EDA               	movwf	fsr2h,c
  1309  007966  0E00               	movlw	low _v_proentregar
  1310  007968  26D9               	addwf	fsr2l,f,c
  1311  00796A  0E01               	movlw	high _v_proentregar
  1312  00796C  22DA               	addwfc	fsr2h,f,c
  1313  00796E  0E00               	movlw	0
  1314  007970  6EDE               	movwf	postinc2,c
  1315  007972  0E00               	movlw	0
  1316  007974  6EDD               	movwf	postdec2,c
  1317  007976                     
  1318                           ; BSR set to: 0
  1319                           ;Vending_Machine.c: 87:         }
  1320  007976  4BE1               	infsnz	main@z& (0+255),f,b
  1321  007978  2BE2               	incf	(main@z+1)& (0+255),f,b
  1322  00797A                     
  1323                           ; BSR set to: 0
  1324  00797A  BFE2               	btfsc	(main@z+1)& (0+255),7,b
  1325  00797C  EFC9  F03C         	goto	u2771
  1326  007980  51E2               	movf	(main@z+1)& (0+255),w,b
  1327  007982  E109               	bnz	u2770
  1328  007984  0E03               	movlw	3
  1329  007986  5DE1               	subwf	main@z& (0+255),w,b
  1330  007988  A0D8               	btfss	status,0,c
  1331  00798A  EFC9  F03C         	goto	u2771
  1332  00798E  EFCB  F03C         	goto	u2770
  1333  007992                     u2771:
  1334  007992  EFAE  F03C         	goto	l3159
  1335  007996                     u2770:
  1336  007996                     
  1337                           ; BSR set to: 0
  1338                           ;Vending_Machine.c: 88:         int compra = 0;
  1339  007996  0E00               	movlw	0
  1340  007998  6FED               	movwf	(main@compra+1)& (0+255),b
  1341  00799A  0E00               	movlw	0
  1342  00799C  6FEC               	movwf	main@compra& (0+255),b
  1343  00799E                     l3167:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;Vending_Machine.c: 91:             LCD_Clear();
  1347  00799E  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1348  0079A2                     
  1349                           ;Vending_Machine.c: 92:             Rtc();
  1350  0079A2  EC9E  F039         	call	_Rtc	;wreg free
  1351  0079A6                     
  1352                           ;Vending_Machine.c: 93:             MSdelay(1000);
  1353  0079A6  0E03               	movlw	3
  1354  0079A8  6E02               	movwf	(MSdelay@val+1)^0,c
  1355  0079AA  0EE8               	movlw	232
  1356  0079AC  6E01               	movwf	MSdelay@val^0,c
  1357  0079AE  EC98  F031         	call	_MSdelay	;wreg free
  1358  0079B2                     
  1359                           ;Vending_Machine.c: 94:             LCD_String_xy(3, 7, "-Bienvenido-");
  1360  0079B2  0E07               	movlw	7
  1361  0079B4  6E0B               	movwf	LCD_String_xy@pos^0,c
  1362  0079B6  0E89               	movlw	low STR_1
  1363  0079B8  6E0C               	movwf	LCD_String_xy@msg^0,c
  1364  0079BA  0E7F               	movlw	high STR_1
  1365  0079BC  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1366  0079BE  0E03               	movlw	3
  1367  0079C0  EC4B  F033         	call	_LCD_String_xy
  1368  0079C4                     
  1369                           ;Vending_Machine.c: 95:             LCD_String_xy(4, 0, "Presione una tecla..");
  1370  0079C4  0E00               	movlw	0
  1371  0079C6  6E0B               	movwf	LCD_String_xy@pos^0,c
  1372  0079C8  0E9F               	movlw	low STR_2
  1373  0079CA  6E0C               	movwf	LCD_String_xy@msg^0,c
  1374  0079CC  0E7E               	movlw	high STR_2
  1375  0079CE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1376  0079D0  0E04               	movlw	4
  1377  0079D2  EC4B  F033         	call	_LCD_String_xy
  1378  0079D6                     
  1379                           ;Vending_Machine.c: 96:             key = keyfind();
  1380  0079D6  ECD0  F035         	call	_keyfind	;wreg free
  1381  0079DA  0100               	movlb	0	; () banked
  1382  0079DC  6FEB               	movwf	main@key& (0+255),b
  1383  0079DE                     
  1384                           ; BSR set to: 0
  1385                           ;Vending_Machine.c: 97:         } while (key == '1' && (key == '2'));
  1386  0079DE  0E31               	movlw	49
  1387  0079E0  19EB               	xorwf	main@key& (0+255),w,b
  1388  0079E2  A4D8               	btfss	status,2,c
  1389  0079E4  EFF6  F03C         	goto	u2781
  1390  0079E8  EFF8  F03C         	goto	u2780
  1391  0079EC                     u2781:
  1392  0079EC  EF01  F03D         	goto	l3183
  1393  0079F0                     u2780:
  1394  0079F0                     
  1395                           ; BSR set to: 0
  1396  0079F0  0E32               	movlw	50
  1397  0079F2  19EB               	xorwf	main@key& (0+255),w,b
  1398  0079F4  B4D8               	btfsc	status,2,c
  1399  0079F6  EFFF  F03C         	goto	u2791
  1400  0079FA  EF01  F03D         	goto	u2790
  1401  0079FE                     u2791:
  1402  0079FE  EFCF  F03C         	goto	l3167
  1403  007A02                     u2790:
  1404  007A02                     l3183:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;Vending_Machine.c: 99:         MSdelay(20);
  1408  007A02  0E00               	movlw	0
  1409  007A04  6E02               	movwf	(MSdelay@val+1)^0,c
  1410  007A06  0E14               	movlw	20
  1411  007A08  6E01               	movwf	MSdelay@val^0,c
  1412  007A0A  EC98  F031         	call	_MSdelay	;wreg free
  1413  007A0E                     l159:
  1414                           
  1415                           ;Vending_Machine.c: 101:             LCD_Clear();
  1416  007A0E  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1417  007A12                     
  1418                           ;Vending_Machine.c: 102:             LCD_String_xy(1, 0, "1.Cafe $1000");
  1419  007A12  0E00               	movlw	0
  1420  007A14  6E0B               	movwf	LCD_String_xy@pos^0,c
  1421  007A16  0E96               	movlw	low STR_3
  1422  007A18  6E0C               	movwf	LCD_String_xy@msg^0,c
  1423  007A1A  0E7F               	movlw	high STR_3
  1424  007A1C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1425  007A1E  0E01               	movlw	1
  1426  007A20  EC4B  F033         	call	_LCD_String_xy
  1427  007A24                     
  1428                           ;Vending_Machine.c: 103:             LCD_String_xy(2, 0, "2.Gaseosa 3L $3500");
  1429  007A24  0E00               	movlw	0
  1430  007A26  6E0B               	movwf	LCD_String_xy@pos^0,c
  1431  007A28  0EDB               	movlw	low STR_4
  1432  007A2A  6E0C               	movwf	LCD_String_xy@msg^0,c
  1433  007A2C  0E7E               	movlw	high STR_4
  1434  007A2E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1435  007A30  0E02               	movlw	2
  1436  007A32  EC4B  F033         	call	_LCD_String_xy
  1437  007A36                     
  1438                           ;Vending_Machine.c: 104:             LCD_String_xy(3, 0, "3.Bombones $500");
  1439  007A36  0E00               	movlw	0
  1440  007A38  6E0B               	movwf	LCD_String_xy@pos^0,c
  1441  007A3A  0E13               	movlw	low STR_5
  1442  007A3C  6E0C               	movwf	LCD_String_xy@msg^0,c
  1443  007A3E  0E7F               	movlw	high STR_5
  1444  007A40  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1445  007A42  0E03               	movlw	3
  1446  007A44  EC4B  F033         	call	_LCD_String_xy
  1447  007A48                     
  1448                           ;Vending_Machine.c: 105:             LCD_String_xy(4, 0, "4.Papas $2000");
  1449  007A48  0E00               	movlw	0
  1450  007A4A  6E0B               	movwf	LCD_String_xy@pos^0,c
  1451  007A4C  0E51               	movlw	low STR_6
  1452  007A4E  6E0C               	movwf	LCD_String_xy@msg^0,c
  1453  007A50  0E7F               	movlw	high STR_6
  1454  007A52  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1455  007A54  0E04               	movlw	4
  1456  007A56  EC4B  F033         	call	_LCD_String_xy
  1457  007A5A                     
  1458                           ;Vending_Machine.c: 106:             key = keyfind();
  1459  007A5A  ECD0  F035         	call	_keyfind	;wreg free
  1460  007A5E  0100               	movlb	0	; () banked
  1461  007A60  6FEB               	movwf	main@key& (0+255),b
  1462  007A62                     
  1463                           ; BSR set to: 0
  1464                           ;Vending_Machine.c: 108:             if (key == '1') {
  1465  007A62  0E31               	movlw	49
  1466  007A64  19EB               	xorwf	main@key& (0+255),w,b
  1467  007A66  A4D8               	btfss	status,2,c
  1468  007A68  EF38  F03D         	goto	u2801
  1469  007A6C  EF3A  F03D         	goto	u2800
  1470  007A70                     u2801:
  1471  007A70  EF79  F03D         	goto	l3217
  1472  007A74                     u2800:
  1473  007A74                     
  1474                           ; BSR set to: 0
  1475                           ;Vending_Machine.c: 112:                 if (v_prodisponibles[p] > 0) {
  1476  007A74  BFE4               	btfsc	(main@v_prodisponibles+1)& (0+255),7,b
  1477  007A76  EF45  F03D         	goto	u2811
  1478  007A7A  51E4               	movf	(main@v_prodisponibles+1)& (0+255),w,b
  1479  007A7C  E108               	bnz	u2810
  1480  007A7E  05E3               	decf	main@v_prodisponibles& (0+255),w,b
  1481  007A80  A0D8               	btfss	status,0,c
  1482  007A82  EF45  F03D         	goto	u2811
  1483  007A86  EF47  F03D         	goto	u2810
  1484  007A8A                     u2811:
  1485  007A8A  EF71  F03D         	goto	l3213
  1486  007A8E                     u2810:
  1487  007A8E                     
  1488                           ; BSR set to: 0
  1489                           ;Vending_Machine.c: 113:                     v_prodisponibles[p] =v_prodisponibles[p] - 
      +                          1;
  1490  007A8E  0EFF               	movlw	255
  1491  007A90  25E3               	addwf	main@v_prodisponibles& (0+255),w,b
  1492  007A92  6FE3               	movwf	main@v_prodisponibles& (0+255),b
  1493  007A94  0EFF               	movlw	255
  1494  007A96  21E4               	addwfc	(main@v_prodisponibles+1)& (0+255),w,b
  1495  007A98  6FE4               	movwf	(main@v_prodisponibles+1)& (0+255),b
  1496  007A9A                     
  1497                           ; BSR set to: 0
  1498                           ;Vending_Machine.c: 117:                     LCD_Clear();
  1499  007A9A  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1500  007A9E                     
  1501                           ;Vending_Machine.c: 118:                     LCD_String("Se agrego Cafe");
  1502  007A9E  0E42               	movlw	low STR_7
  1503  007AA0  6E09               	movwf	LCD_String@msg^0,c
  1504  007AA2  0E7F               	movlw	high STR_7
  1505  007AA4  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1506  007AA6  EC84  F032         	call	_LCD_String	;wreg free
  1507  007AAA                     
  1508                           ;Vending_Machine.c: 119:                     compra = compra + v_proprecios[p];
  1509  007AAA  0100               	movlb	0	; () banked
  1510  007AAC  51EC               	movf	main@compra& (0+255),w,b
  1511  007AAE  25D3               	addwf	main@v_proprecios& (0+255),w,b
  1512  007AB0  6FEC               	movwf	main@compra& (0+255),b
  1513  007AB2  51ED               	movf	(main@compra+1)& (0+255),w,b
  1514  007AB4  21D4               	addwfc	(main@v_proprecios+1)& (0+255),w,b
  1515  007AB6  6FED               	movwf	(main@compra+1)& (0+255),b
  1516  007AB8                     
  1517                           ; BSR set to: 0
  1518                           ;Vending_Machine.c: 120:                     i = i + 1;
  1519  007AB8  0E01               	movlw	1
  1520  007ABA  25EE               	addwf	main@i& (0+255),w,b
  1521  007ABC  6FEE               	movwf	main@i& (0+255),b
  1522  007ABE  0E00               	movlw	0
  1523  007AC0  21EF               	addwfc	(main@i+1)& (0+255),w,b
  1524  007AC2  6FEF               	movwf	(main@i+1)& (0+255),b
  1525  007AC4                     
  1526                           ; BSR set to: 0
  1527                           ;Vending_Machine.c: 121:                     v_proentregar[i-1]=p+1;
  1528  007AC4  90D8               	bcf	status,0,c
  1529  007AC6  35EE               	rlcf	main@i& (0+255),w,b
  1530  007AC8  6ED9               	movwf	fsr2l,c
  1531  007ACA  35EF               	rlcf	(main@i+1)& (0+255),w,b
  1532  007ACC  6EDA               	movwf	fsr2h,c
  1533  007ACE  0EFE               	movlw	low (_v_proentregar+65534)
  1534  007AD0  26D9               	addwf	fsr2l,f,c
  1535  007AD2  0E00               	movlw	high (_v_proentregar+65534)
  1536  007AD4  22DA               	addwfc	fsr2h,f,c
  1537  007AD6  0E01               	movlw	1
  1538  007AD8  6EDE               	movwf	postinc2,c
  1539  007ADA  0E00               	movlw	0
  1540  007ADC  6EDD               	movwf	postdec2,c
  1541                           
  1542                           ;Vending_Machine.c: 123:                 } else {
  1543  007ADE  EF79  F03D         	goto	l3217
  1544  007AE2                     l3213:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;Vending_Machine.c: 125:                     LCD_Clear();
  1548  007AE2  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1549  007AE6                     
  1550                           ;Vending_Machine.c: 126:                     LCD_String("No disponible");
  1551  007AE6  0E5F               	movlw	low STR_8
  1552  007AE8  6E09               	movwf	LCD_String@msg^0,c
  1553  007AEA  0E7F               	movlw	high STR_8
  1554  007AEC  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1555  007AEE  EC84  F032         	call	_LCD_String	;wreg free
  1556  007AF2                     l3217:
  1557                           
  1558                           ;Vending_Machine.c: 130:             if (key == '2') {
  1559  007AF2  0E32               	movlw	50
  1560  007AF4  0100               	movlb	0	; () banked
  1561  007AF6  19EB               	xorwf	main@key& (0+255),w,b
  1562  007AF8  A4D8               	btfss	status,2,c
  1563  007AFA  EF81  F03D         	goto	u2821
  1564  007AFE  EF83  F03D         	goto	u2820
  1565  007B02                     u2821:
  1566  007B02  EFC2  F03D         	goto	l3239
  1567  007B06                     u2820:
  1568  007B06                     
  1569                           ; BSR set to: 0
  1570                           ;Vending_Machine.c: 132:                 if (v_prodisponibles[p] > 0) {
  1571  007B06  BFE6               	btfsc	(main@v_prodisponibles+3)& (0+255),7,b
  1572  007B08  EF8E  F03D         	goto	u2831
  1573  007B0C  51E6               	movf	(main@v_prodisponibles+3)& (0+255),w,b
  1574  007B0E  E108               	bnz	u2830
  1575  007B10  05E5               	decf	(main@v_prodisponibles+2)& (0+255),w,b
  1576  007B12  A0D8               	btfss	status,0,c
  1577  007B14  EF8E  F03D         	goto	u2831
  1578  007B18  EF90  F03D         	goto	u2830
  1579  007B1C                     u2831:
  1580  007B1C  EFBA  F03D         	goto	l3235
  1581  007B20                     u2830:
  1582  007B20                     
  1583                           ; BSR set to: 0
  1584                           ;Vending_Machine.c: 133:                     v_prodisponibles[p] =v_prodisponibles[p] - 
      +                          1;
  1585  007B20  0EFF               	movlw	255
  1586  007B22  25E5               	addwf	(main@v_prodisponibles+2)& (0+255),w,b
  1587  007B24  6FE5               	movwf	(main@v_prodisponibles+2)& (0+255),b
  1588  007B26  0EFF               	movlw	255
  1589  007B28  21E6               	addwfc	(main@v_prodisponibles+3)& (0+255),w,b
  1590  007B2A  6FE6               	movwf	(main@v_prodisponibles+3)& (0+255),b
  1591  007B2C                     
  1592                           ; BSR set to: 0
  1593                           ;Vending_Machine.c: 134:                     LCD_Clear();
  1594  007B2C  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1595  007B30                     
  1596                           ;Vending_Machine.c: 135:                             LCD_String("Se agrego Gaseosa");
  1597  007B30  0E01               	movlw	low STR_9
  1598  007B32  6E09               	movwf	LCD_String@msg^0,c
  1599  007B34  0E7F               	movlw	high STR_9
  1600  007B36  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1601  007B38  EC84  F032         	call	_LCD_String	;wreg free
  1602  007B3C                     
  1603                           ;Vending_Machine.c: 136:                     compra = compra + v_proprecios[p];
  1604  007B3C  0100               	movlb	0	; () banked
  1605  007B3E  51EC               	movf	main@compra& (0+255),w,b
  1606  007B40  25D5               	addwf	(main@v_proprecios+2)& (0+255),w,b
  1607  007B42  6FEC               	movwf	main@compra& (0+255),b
  1608  007B44  51ED               	movf	(main@compra+1)& (0+255),w,b
  1609  007B46  21D6               	addwfc	(main@v_proprecios+3)& (0+255),w,b
  1610  007B48  6FED               	movwf	(main@compra+1)& (0+255),b
  1611  007B4A                     
  1612                           ; BSR set to: 0
  1613                           ;Vending_Machine.c: 137:                     i = i + 1;
  1614  007B4A  0E01               	movlw	1
  1615  007B4C  25EE               	addwf	main@i& (0+255),w,b
  1616  007B4E  6FEE               	movwf	main@i& (0+255),b
  1617  007B50  0E00               	movlw	0
  1618  007B52  21EF               	addwfc	(main@i+1)& (0+255),w,b
  1619  007B54  6FEF               	movwf	(main@i+1)& (0+255),b
  1620  007B56                     
  1621                           ; BSR set to: 0
  1622                           ;Vending_Machine.c: 138:                     v_proentregar[i-1]=p+1;
  1623  007B56  90D8               	bcf	status,0,c
  1624  007B58  35EE               	rlcf	main@i& (0+255),w,b
  1625  007B5A  6ED9               	movwf	fsr2l,c
  1626  007B5C  35EF               	rlcf	(main@i+1)& (0+255),w,b
  1627  007B5E  6EDA               	movwf	fsr2h,c
  1628  007B60  0EFE               	movlw	low (_v_proentregar+65534)
  1629  007B62  26D9               	addwf	fsr2l,f,c
  1630  007B64  0E00               	movlw	high (_v_proentregar+65534)
  1631  007B66  22DA               	addwfc	fsr2h,f,c
  1632  007B68  0E02               	movlw	2
  1633  007B6A  6EDE               	movwf	postinc2,c
  1634  007B6C  0E00               	movlw	0
  1635  007B6E  6EDD               	movwf	postdec2,c
  1636                           
  1637                           ;Vending_Machine.c: 140:                 } else {
  1638  007B70  EFC2  F03D         	goto	l3239
  1639  007B74                     l3235:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;Vending_Machine.c: 141:                     LCD_Clear();
  1643  007B74  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1644  007B78                     
  1645                           ;Vending_Machine.c: 142:                     LCD_String("No disponible");
  1646  007B78  0E5F               	movlw	low STR_8
  1647  007B7A  6E09               	movwf	LCD_String@msg^0,c
  1648  007B7C  0E7F               	movlw	high STR_8
  1649  007B7E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1650  007B80  EC84  F032         	call	_LCD_String	;wreg free
  1651  007B84                     l3239:
  1652                           
  1653                           ;Vending_Machine.c: 146:             if (key == '3') {
  1654  007B84  0E33               	movlw	51
  1655  007B86  0100               	movlb	0	; () banked
  1656  007B88  19EB               	xorwf	main@key& (0+255),w,b
  1657  007B8A  A4D8               	btfss	status,2,c
  1658  007B8C  EFCA  F03D         	goto	u2841
  1659  007B90  EFCC  F03D         	goto	u2840
  1660  007B94                     u2841:
  1661  007B94  EF0B  F03E         	goto	l3261
  1662  007B98                     u2840:
  1663  007B98                     
  1664                           ; BSR set to: 0
  1665                           ;Vending_Machine.c: 148:                 if (v_prodisponibles[p] > 0) {
  1666  007B98  BFE8               	btfsc	(main@v_prodisponibles+5)& (0+255),7,b
  1667  007B9A  EFD7  F03D         	goto	u2851
  1668  007B9E  51E8               	movf	(main@v_prodisponibles+5)& (0+255),w,b
  1669  007BA0  E108               	bnz	u2850
  1670  007BA2  05E7               	decf	(main@v_prodisponibles+4)& (0+255),w,b
  1671  007BA4  A0D8               	btfss	status,0,c
  1672  007BA6  EFD7  F03D         	goto	u2851
  1673  007BAA  EFD9  F03D         	goto	u2850
  1674  007BAE                     u2851:
  1675  007BAE  EF03  F03E         	goto	l3257
  1676  007BB2                     u2850:
  1677  007BB2                     
  1678                           ; BSR set to: 0
  1679                           ;Vending_Machine.c: 149:                     v_prodisponibles[p] =v_prodisponibles[p] - 
      +                          1;
  1680  007BB2  0EFF               	movlw	255
  1681  007BB4  25E7               	addwf	(main@v_prodisponibles+4)& (0+255),w,b
  1682  007BB6  6FE7               	movwf	(main@v_prodisponibles+4)& (0+255),b
  1683  007BB8  0EFF               	movlw	255
  1684  007BBA  21E8               	addwfc	(main@v_prodisponibles+5)& (0+255),w,b
  1685  007BBC  6FE8               	movwf	(main@v_prodisponibles+5)& (0+255),b
  1686  007BBE                     
  1687                           ; BSR set to: 0
  1688                           ;Vending_Machine.c: 150:                     LCD_Clear();
  1689  007BBE  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1690  007BC2                     
  1691                           ;Vending_Machine.c: 151:                             LCD_String("Se agrego bombones");
  1692  007BC2  0EEE               	movlw	low STR_11
  1693  007BC4  6E09               	movwf	LCD_String@msg^0,c
  1694  007BC6  0E7E               	movlw	high STR_11
  1695  007BC8  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1696  007BCA  EC84  F032         	call	_LCD_String	;wreg free
  1697  007BCE                     
  1698                           ;Vending_Machine.c: 152:                     compra = compra + v_proprecios[p];
  1699  007BCE  0100               	movlb	0	; () banked
  1700  007BD0  51EC               	movf	main@compra& (0+255),w,b
  1701  007BD2  25D7               	addwf	(main@v_proprecios+4)& (0+255),w,b
  1702  007BD4  6FEC               	movwf	main@compra& (0+255),b
  1703  007BD6  51ED               	movf	(main@compra+1)& (0+255),w,b
  1704  007BD8  21D8               	addwfc	(main@v_proprecios+5)& (0+255),w,b
  1705  007BDA  6FED               	movwf	(main@compra+1)& (0+255),b
  1706  007BDC                     
  1707                           ; BSR set to: 0
  1708                           ;Vending_Machine.c: 153:                     i = i + 1;
  1709  007BDC  0E01               	movlw	1
  1710  007BDE  25EE               	addwf	main@i& (0+255),w,b
  1711  007BE0  6FEE               	movwf	main@i& (0+255),b
  1712  007BE2  0E00               	movlw	0
  1713  007BE4  21EF               	addwfc	(main@i+1)& (0+255),w,b
  1714  007BE6  6FEF               	movwf	(main@i+1)& (0+255),b
  1715  007BE8                     
  1716                           ; BSR set to: 0
  1717                           ;Vending_Machine.c: 154:                     v_proentregar[i-1]=p+1;
  1718  007BE8  90D8               	bcf	status,0,c
  1719  007BEA  35EE               	rlcf	main@i& (0+255),w,b
  1720  007BEC  6ED9               	movwf	fsr2l,c
  1721  007BEE  35EF               	rlcf	(main@i+1)& (0+255),w,b
  1722  007BF0  6EDA               	movwf	fsr2h,c
  1723  007BF2  0EFE               	movlw	low (_v_proentregar+65534)
  1724  007BF4  26D9               	addwf	fsr2l,f,c
  1725  007BF6  0E00               	movlw	high (_v_proentregar+65534)
  1726  007BF8  22DA               	addwfc	fsr2h,f,c
  1727  007BFA  0E03               	movlw	3
  1728  007BFC  6EDE               	movwf	postinc2,c
  1729  007BFE  0E00               	movlw	0
  1730  007C00  6EDD               	movwf	postdec2,c
  1731                           
  1732                           ;Vending_Machine.c: 155:                 } else {
  1733  007C02  EF0B  F03E         	goto	l3261
  1734  007C06                     l3257:
  1735                           
  1736                           ; BSR set to: 0
  1737                           ;Vending_Machine.c: 156:                     LCD_Clear();
  1738  007C06  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1739  007C0A                     
  1740                           ;Vending_Machine.c: 157:                     LCD_String("No disponible");
  1741  007C0A  0E5F               	movlw	low STR_8
  1742  007C0C  6E09               	movwf	LCD_String@msg^0,c
  1743  007C0E  0E7F               	movlw	high STR_8
  1744  007C10  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1745  007C12  EC84  F032         	call	_LCD_String	;wreg free
  1746  007C16                     l3261:
  1747                           
  1748                           ;Vending_Machine.c: 160:             if (key == '4') {
  1749  007C16  0E34               	movlw	52
  1750  007C18  0100               	movlb	0	; () banked
  1751  007C1A  19EB               	xorwf	main@key& (0+255),w,b
  1752  007C1C  A4D8               	btfss	status,2,c
  1753  007C1E  EF13  F03E         	goto	u2861
  1754  007C22  EF15  F03E         	goto	u2860
  1755  007C26                     u2861:
  1756  007C26  EF54  F03E         	goto	l3283
  1757  007C2A                     u2860:
  1758  007C2A                     
  1759                           ; BSR set to: 0
  1760                           ;Vending_Machine.c: 162:                 if (v_prodisponibles[p] > 0) {
  1761  007C2A  BFEA               	btfsc	(main@v_prodisponibles+7)& (0+255),7,b
  1762  007C2C  EF20  F03E         	goto	u2871
  1763  007C30  51EA               	movf	(main@v_prodisponibles+7)& (0+255),w,b
  1764  007C32  E108               	bnz	u2870
  1765  007C34  05E9               	decf	(main@v_prodisponibles+6)& (0+255),w,b
  1766  007C36  A0D8               	btfss	status,0,c
  1767  007C38  EF20  F03E         	goto	u2871
  1768  007C3C  EF22  F03E         	goto	u2870
  1769  007C40                     u2871:
  1770  007C40  EF4C  F03E         	goto	l3279
  1771  007C44                     u2870:
  1772  007C44                     
  1773                           ; BSR set to: 0
  1774                           ;Vending_Machine.c: 163:                     v_prodisponibles[p] =v_prodisponibles[p] - 
      +                          1;
  1775  007C44  0EFF               	movlw	255
  1776  007C46  25E9               	addwf	(main@v_prodisponibles+6)& (0+255),w,b
  1777  007C48  6FE9               	movwf	(main@v_prodisponibles+6)& (0+255),b
  1778  007C4A  0EFF               	movlw	255
  1779  007C4C  21EA               	addwfc	(main@v_prodisponibles+7)& (0+255),w,b
  1780  007C4E  6FEA               	movwf	(main@v_prodisponibles+7)& (0+255),b
  1781  007C50                     
  1782                           ; BSR set to: 0
  1783                           ;Vending_Machine.c: 164:                     LCD_Clear();
  1784  007C50  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1785  007C54                     
  1786                           ;Vending_Machine.c: 165:                             LCD_String("Se agrego Papas");
  1787  007C54  0E23               	movlw	low STR_13
  1788  007C56  6E09               	movwf	LCD_String@msg^0,c
  1789  007C58  0E7F               	movlw	high STR_13
  1790  007C5A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1791  007C5C  EC84  F032         	call	_LCD_String	;wreg free
  1792  007C60                     
  1793                           ;Vending_Machine.c: 166:                     compra = compra + v_proprecios[p];
  1794  007C60  0100               	movlb	0	; () banked
  1795  007C62  51EC               	movf	main@compra& (0+255),w,b
  1796  007C64  25D9               	addwf	(main@v_proprecios+6)& (0+255),w,b
  1797  007C66  6FEC               	movwf	main@compra& (0+255),b
  1798  007C68  51ED               	movf	(main@compra+1)& (0+255),w,b
  1799  007C6A  21DA               	addwfc	(main@v_proprecios+7)& (0+255),w,b
  1800  007C6C  6FED               	movwf	(main@compra+1)& (0+255),b
  1801  007C6E                     
  1802                           ; BSR set to: 0
  1803                           ;Vending_Machine.c: 167:                     i = i + 1;
  1804  007C6E  0E01               	movlw	1
  1805  007C70  25EE               	addwf	main@i& (0+255),w,b
  1806  007C72  6FEE               	movwf	main@i& (0+255),b
  1807  007C74  0E00               	movlw	0
  1808  007C76  21EF               	addwfc	(main@i+1)& (0+255),w,b
  1809  007C78  6FEF               	movwf	(main@i+1)& (0+255),b
  1810  007C7A                     
  1811                           ; BSR set to: 0
  1812                           ;Vending_Machine.c: 168:                     v_proentregar[i-1]=p+1;
  1813  007C7A  90D8               	bcf	status,0,c
  1814  007C7C  35EE               	rlcf	main@i& (0+255),w,b
  1815  007C7E  6ED9               	movwf	fsr2l,c
  1816  007C80  35EF               	rlcf	(main@i+1)& (0+255),w,b
  1817  007C82  6EDA               	movwf	fsr2h,c
  1818  007C84  0EFE               	movlw	low (_v_proentregar+65534)
  1819  007C86  26D9               	addwf	fsr2l,f,c
  1820  007C88  0E00               	movlw	high (_v_proentregar+65534)
  1821  007C8A  22DA               	addwfc	fsr2h,f,c
  1822  007C8C  0E04               	movlw	4
  1823  007C8E  6EDE               	movwf	postinc2,c
  1824  007C90  0E00               	movlw	0
  1825  007C92  6EDD               	movwf	postdec2,c
  1826                           
  1827                           ;Vending_Machine.c: 169:                 } else {
  1828  007C94  EF54  F03E         	goto	l3283
  1829  007C98                     l3279:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;Vending_Machine.c: 170:                     LCD_Clear();
  1833  007C98  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1834  007C9C                     
  1835                           ;Vending_Machine.c: 171:                     LCD_String("No disponible");
  1836  007C9C  0E5F               	movlw	low STR_8
  1837  007C9E  6E09               	movwf	LCD_String@msg^0,c
  1838  007CA0  0E7F               	movlw	high STR_8
  1839  007CA2  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1840  007CA4  EC84  F032         	call	_LCD_String	;wreg free
  1841  007CA8                     l3283:
  1842                           
  1843                           ;Vending_Machine.c: 174:             MSdelay(700);
  1844  007CA8  0E02               	movlw	2
  1845  007CAA  6E02               	movwf	(MSdelay@val+1)^0,c
  1846  007CAC  0EBC               	movlw	188
  1847  007CAE  6E01               	movwf	MSdelay@val^0,c
  1848  007CB0  EC98  F031         	call	_MSdelay	;wreg free
  1849  007CB4                     
  1850                           ;Vending_Machine.c: 175:             LCD_Clear();
  1851  007CB4  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1852  007CB8                     
  1853                           ;Vending_Machine.c: 177:             LCD_String("Desea aniadir");
  1854  007CB8  0E7B               	movlw	low STR_15
  1855  007CBA  6E09               	movwf	LCD_String@msg^0,c
  1856  007CBC  0E7F               	movlw	high STR_15
  1857  007CBE  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1858  007CC0  EC84  F032         	call	_LCD_String	;wreg free
  1859  007CC4                     
  1860                           ;Vending_Machine.c: 178:             LCD_String_xy(2, 0, "otro producto");
  1861  007CC4  0E00               	movlw	0
  1862  007CC6  6E0B               	movwf	LCD_String_xy@pos^0,c
  1863  007CC8  0E6D               	movlw	low STR_16
  1864  007CCA  6E0C               	movwf	LCD_String_xy@msg^0,c
  1865  007CCC  0E7F               	movlw	high STR_16
  1866  007CCE  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1867  007CD0  0E02               	movlw	2
  1868  007CD2  EC4B  F033         	call	_LCD_String_xy
  1869  007CD6                     
  1870                           ;Vending_Machine.c: 179:             LCD_String_xy(3, 0, "+.Si");
  1871  007CD6  0E00               	movlw	0
  1872  007CD8  6E0B               	movwf	LCD_String_xy@pos^0,c
  1873  007CDA  0EC7               	movlw	low STR_17
  1874  007CDC  6E0C               	movwf	LCD_String_xy@msg^0,c
  1875  007CDE  0E7F               	movlw	high STR_17
  1876  007CE0  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1877  007CE2  0E03               	movlw	3
  1878  007CE4  EC4B  F033         	call	_LCD_String_xy
  1879  007CE8                     
  1880                           ;Vending_Machine.c: 180:             LCD_String_xy(4, 0, "=.No");
  1881  007CE8  0E00               	movlw	0
  1882  007CEA  6E0B               	movwf	LCD_String_xy@pos^0,c
  1883  007CEC  0ECC               	movlw	low STR_18
  1884  007CEE  6E0C               	movwf	LCD_String_xy@msg^0,c
  1885  007CF0  0E7F               	movlw	high STR_18
  1886  007CF2  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1887  007CF4  0E04               	movlw	4
  1888  007CF6  EC4B  F033         	call	_LCD_String_xy
  1889  007CFA                     
  1890                           ;Vending_Machine.c: 182:             key = keyfind();
  1891  007CFA  ECD0  F035         	call	_keyfind	;wreg free
  1892  007CFE  0100               	movlb	0	; () banked
  1893  007D00  6FEB               	movwf	main@key& (0+255),b
  1894  007D02                     
  1895                           ; BSR set to: 0
  1896                           ;Vending_Machine.c: 185:             MSdelay(100);
  1897  007D02  0E00               	movlw	0
  1898  007D04  6E02               	movwf	(MSdelay@val+1)^0,c
  1899  007D06  0E64               	movlw	100
  1900  007D08  6E01               	movwf	MSdelay@val^0,c
  1901  007D0A  EC98  F031         	call	_MSdelay	;wreg free
  1902  007D0E                     
  1903                           ;Vending_Machine.c: 189:         } while (key == '+' && i < 3);
  1904  007D0E  0E2B               	movlw	43
  1905  007D10  0100               	movlb	0	; () banked
  1906  007D12  19EB               	xorwf	main@key& (0+255),w,b
  1907  007D14  A4D8               	btfss	status,2,c
  1908  007D16  EF8F  F03E         	goto	u2881
  1909  007D1A  EF91  F03E         	goto	u2880
  1910  007D1E                     u2881:
  1911  007D1E  EF9F  F03E         	goto	l3303
  1912  007D22                     u2880:
  1913  007D22                     
  1914                           ; BSR set to: 0
  1915  007D22  BFEF               	btfsc	(main@i+1)& (0+255),7,b
  1916  007D24  EF9D  F03E         	goto	u2891
  1917  007D28  51EF               	movf	(main@i+1)& (0+255),w,b
  1918  007D2A  E109               	bnz	u2890
  1919  007D2C  0E03               	movlw	3
  1920  007D2E  5DEE               	subwf	main@i& (0+255),w,b
  1921  007D30  A0D8               	btfss	status,0,c
  1922  007D32  EF9D  F03E         	goto	u2891
  1923  007D36  EF9F  F03E         	goto	u2890
  1924  007D3A                     u2891:
  1925  007D3A  EF07  F03D         	goto	l159
  1926  007D3E                     u2890:
  1927  007D3E                     l3303:
  1928                           
  1929                           ; BSR set to: 0
  1930                           ;Vending_Machine.c: 192:             MSdelay(1000);
  1931  007D3E  0E03               	movlw	3
  1932  007D40  6E02               	movwf	(MSdelay@val+1)^0,c
  1933  007D42  0EE8               	movlw	232
  1934  007D44  6E01               	movwf	MSdelay@val^0,c
  1935  007D46  EC98  F031         	call	_MSdelay	;wreg free
  1936                           
  1937                           ;Vending_Machine.c: 193:             LCD_Clear();
  1938  007D4A  ECE3  F02F         	call	_LCD_Clear	;wreg free
  1939  007D4E                     
  1940                           ;Vending_Machine.c: 194:             char c[6];;Vending_Machine.c: 195:             int 
      +                          a = compra;
  1941  007D4E  C0EC  F0DB         	movff	main@compra,main@a
  1942  007D52  C0ED  F0DC         	movff	main@compra+1,main@a+1
  1943  007D56                     
  1944                           ;Vending_Machine.c: 196:             sprintf(c, "%d", a);
  1945  007D56  0EC0               	movlw	low main@c
  1946  007D58  0100               	movlb	0	; () banked
  1947  007D5A  6F66               	movwf	sprintf@s& (0+255),b
  1948  007D5C  0E00               	movlw	high main@c
  1949  007D5E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  1950  007D60  0EF7               	movlw	low STR_19
  1951  007D62  6F68               	movwf	sprintf@fmt& (0+255),b
  1952  007D64  0E7F               	movlw	high STR_19
  1953  007D66  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  1954  007D68  C0DB  F06A         	movff	main@a,?_sprintf+4
  1955  007D6C  C0DC  F06B         	movff	main@a+1,?_sprintf+5
  1956  007D70  EC2E  F032         	call	_sprintf	;wreg free
  1957  007D74                     
  1958                           ;Vending_Machine.c: 197:             LCD_String("TOTAL :");
  1959  007D74  0EBF               	movlw	low STR_20
  1960  007D76  6E09               	movwf	LCD_String@msg^0,c
  1961  007D78  0E7F               	movlw	high STR_20
  1962  007D7A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  1963  007D7C  EC84  F032         	call	_LCD_String	;wreg free
  1964  007D80                     
  1965                           ;Vending_Machine.c: 198:             LCD_String_xy(2, 0, c);
  1966  007D80  0E00               	movlw	0
  1967  007D82  6E0B               	movwf	LCD_String_xy@pos^0,c
  1968  007D84  0EC0               	movlw	low main@c
  1969  007D86  6E0C               	movwf	LCD_String_xy@msg^0,c
  1970  007D88  0E00               	movlw	high main@c
  1971  007D8A  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  1972  007D8C  0E02               	movlw	2
  1973  007D8E  EC4B  F033         	call	_LCD_String_xy
  1974  007D92                     
  1975                           ;Vending_Machine.c: 199:             MSdelay(1000);
  1976  007D92  0E03               	movlw	3
  1977  007D94  6E02               	movwf	(MSdelay@val+1)^0,c
  1978  007D96  0EE8               	movlw	232
  1979  007D98  6E01               	movwf	MSdelay@val^0,c
  1980  007D9A  EC98  F031         	call	_MSdelay	;wreg free
  1981  007D9E                     
  1982                           ;Vending_Machine.c: 200:             if (saldo < compra) {
  1983  007D9E  0100               	movlb	0	; () banked
  1984  007DA0  51EC               	movf	main@compra& (0+255),w,b
  1985  007DA2  0101               	movlb	1	; () banked
  1986  007DA4  5D59               	subwf	_saldo& (0+255),w,b
  1987  007DA6  515A               	movf	(_saldo+1)& (0+255),w,b
  1988  007DA8  0A80               	xorlw	128
  1989  007DAA  0100               	movlb	0	; () banked
  1990  007DAC  6FBD               	movwf	??_main& (0+255),b
  1991  007DAE  51ED               	movf	(main@compra+1)& (0+255),w,b
  1992  007DB0  0A80               	xorlw	128
  1993  007DB2  59BD               	subwfb	??_main& (0+255),w,b
  1994  007DB4  B0D8               	btfsc	status,0,c
  1995  007DB6  EFDF  F03E         	goto	u2901
  1996  007DBA  EFE1  F03E         	goto	u2900
  1997  007DBE                     u2901:
  1998  007DBE  EF16  F03F         	goto	l3331
  1999  007DC2                     u2900:
  2000  007DC2                     
  2001                           ; BSR set to: 0
  2002                           ;Vending_Machine.c: 201:                 LCD_Clear();
  2003  007DC2  ECE3  F02F         	call	_LCD_Clear	;wreg free
  2004  007DC6                     
  2005                           ;Vending_Machine.c: 202:                 LCD_String("Saldo insuficinte ");
  2006  007DC6  0EC8               	movlw	low STR_21
  2007  007DC8  6E09               	movwf	LCD_String@msg^0,c
  2008  007DCA  0E7E               	movlw	high STR_21
  2009  007DCC  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2010  007DCE  EC84  F032         	call	_LCD_String	;wreg free
  2011  007DD2                     
  2012                           ;Vending_Machine.c: 203:                 int a1=saldo;
  2013  007DD2  C159  F0DD         	movff	_saldo,main@a1
  2014  007DD6  C15A  F0DE         	movff	_saldo+1,main@a1+1
  2015  007DDA                     
  2016                           ;Vending_Machine.c: 204:                 char c1[6];;Vending_Machine.c: 205:            
      +                               sprintf(c1, "%d", a1);
  2017  007DDA  0EC6               	movlw	low main@c1
  2018  007DDC  0100               	movlb	0	; () banked
  2019  007DDE  6F66               	movwf	sprintf@s& (0+255),b
  2020  007DE0  0E00               	movlw	high main@c1
  2021  007DE2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2022  007DE4  0EF7               	movlw	low STR_19
  2023  007DE6  6F68               	movwf	sprintf@fmt& (0+255),b
  2024  007DE8  0E7F               	movlw	high STR_19
  2025  007DEA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2026  007DEC  C0DD  F06A         	movff	main@a1,?_sprintf+4
  2027  007DF0  C0DE  F06B         	movff	main@a1+1,?_sprintf+5
  2028  007DF4  EC2E  F032         	call	_sprintf	;wreg free
  2029  007DF8                     
  2030                           ;Vending_Machine.c: 206:                 LCD_String_xy(3,0,"Su cambio es: ");
  2031  007DF8  0E00               	movlw	0
  2032  007DFA  6E0B               	movwf	LCD_String_xy@pos^0,c
  2033  007DFC  0E33               	movlw	low STR_23
  2034  007DFE  6E0C               	movwf	LCD_String_xy@msg^0,c
  2035  007E00  0E7F               	movlw	high STR_23
  2036  007E02  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2037  007E04  0E03               	movlw	3
  2038  007E06  EC4B  F033         	call	_LCD_String_xy
  2039  007E0A                     
  2040                           ;Vending_Machine.c: 207:                 LCD_String_xy(4, 0, c1);
  2041  007E0A  0E00               	movlw	0
  2042  007E0C  6E0B               	movwf	LCD_String_xy@pos^0,c
  2043  007E0E  0EC6               	movlw	low main@c1
  2044  007E10  6E0C               	movwf	LCD_String_xy@msg^0,c
  2045  007E12  0E00               	movlw	high main@c1
  2046  007E14  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2047  007E16  0E04               	movlw	4
  2048  007E18  EC4B  F033         	call	_LCD_String_xy
  2049  007E1C                     l3329:
  2050                           
  2051                           ;Vending_Machine.c: 208:                 MSdelay(1000);
  2052  007E1C  0E03               	movlw	3
  2053  007E1E  6E02               	movwf	(MSdelay@val+1)^0,c
  2054  007E20  0EE8               	movlw	232
  2055  007E22  6E01               	movwf	MSdelay@val^0,c
  2056  007E24  EC98  F031         	call	_MSdelay	;wreg free
  2057                           
  2058                           ;Vending_Machine.c: 209:             } else {
  2059  007E28  EFA5  F03C         	goto	l3153
  2060  007E2C                     l3331:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;Vending_Machine.c: 210:                 entregarproductos();
  2064  007E2C  EC74  F031         	call	_entregarproductos	;wreg free
  2065  007E30                     
  2066                           ;Vending_Machine.c: 211:                 LCD_Clear();
  2067  007E30  ECE3  F02F         	call	_LCD_Clear	;wreg free
  2068  007E34                     
  2069                           ;Vending_Machine.c: 212:                 int a1 = saldo - compra;
  2070  007E34  0100               	movlb	0	; () banked
  2071  007E36  51EC               	movf	main@compra& (0+255),w,b
  2072  007E38  0101               	movlb	1	; () banked
  2073  007E3A  5D59               	subwf	_saldo& (0+255),w,b
  2074  007E3C  0100               	movlb	0	; () banked
  2075  007E3E  6FDF               	movwf	main@a1_401& (0+255),b
  2076  007E40  51ED               	movf	(main@compra+1)& (0+255),w,b
  2077  007E42  0101               	movlb	1	; () banked
  2078  007E44  595A               	subwfb	(_saldo+1)& (0+255),w,b
  2079  007E46  0100               	movlb	0	; () banked
  2080  007E48  6FE0               	movwf	(main@a1_401+1)& (0+255),b
  2081  007E4A                     
  2082                           ; BSR set to: 0
  2083                           ;Vending_Machine.c: 213:                 char c1[6];;Vending_Machine.c: 214:            
      +                               sprintf(c1, "%d", a1);
  2084  007E4A  0ECC               	movlw	low main@c1_402
  2085  007E4C  6F66               	movwf	sprintf@s& (0+255),b
  2086  007E4E  0E00               	movlw	high main@c1_402
  2087  007E50  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2088  007E52  0EF7               	movlw	low STR_19
  2089  007E54  6F68               	movwf	sprintf@fmt& (0+255),b
  2090  007E56  0E7F               	movlw	high STR_19
  2091  007E58  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2092  007E5A  C0DF  F06A         	movff	main@a1_401,?_sprintf+4
  2093  007E5E  C0E0  F06B         	movff	main@a1_401+1,?_sprintf+5
  2094  007E62  EC2E  F032         	call	_sprintf	;wreg free
  2095  007E66                     
  2096                           ;Vending_Machine.c: 215:                 LCD_String("Su cambio es: ");
  2097  007E66  0E33               	movlw	low STR_23
  2098  007E68  6E09               	movwf	LCD_String@msg^0,c
  2099  007E6A  0E7F               	movlw	high STR_23
  2100  007E6C  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2101  007E6E  EC84  F032         	call	_LCD_String	;wreg free
  2102  007E72                     
  2103                           ;Vending_Machine.c: 216:                 LCD_String_xy(2, 0, c1);
  2104  007E72  0E00               	movlw	0
  2105  007E74  6E0B               	movwf	LCD_String_xy@pos^0,c
  2106  007E76  0ECC               	movlw	low main@c1_402
  2107  007E78  6E0C               	movwf	LCD_String_xy@msg^0,c
  2108  007E7A  0E00               	movlw	high main@c1_402
  2109  007E7C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2110  007E7E  0E02               	movlw	2
  2111  007E80  EC4B  F033         	call	_LCD_String_xy
  2112  007E84                     
  2113                           ;Vending_Machine.c: 217:                 LCD_String_xy(3, 0, "GRACIAS POR COMPRAR");
  2114  007E84  0E00               	movlw	0
  2115  007E86  6E0B               	movwf	LCD_String_xy@pos^0,c
  2116  007E88  0EB4               	movlw	low STR_26
  2117  007E8A  6E0C               	movwf	LCD_String_xy@msg^0,c
  2118  007E8C  0E7E               	movlw	high STR_26
  2119  007E8E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2120  007E90  0E03               	movlw	3
  2121  007E92  EC4B  F033         	call	_LCD_String_xy
  2122  007E96  EF0E  F03F         	goto	l3329
  2123  007E9A  EF00  F000         	goto	start
  2124  007E9E                     __end_of_main:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _keyfind *****************
  2128 ;; Defined at:
  2129 ;;		line 27 in file "4x4_Keypad.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    1
  2150 ;; This function calls:
  2151 ;;		_MSdelay
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text1
  2158  006BA0                     __ptext1:
  2159                           	callstack 0
  2160  006BA0                     _keyfind:
  2161                           	callstack 29
  2162  006BA0  0EF0               	movlw	240
  2163  006BA2  6E95               	movwf	149,c	;volatile
  2164  006BA4  0EF0               	movlw	240
  2165  006BA6  6E8C               	movwf	140,c	;volatile
  2166  006BA8                     l2921:
  2167  006BA8  5083               	movf	131,w,c	;volatile
  2168  006BAA  0BF0               	andlw	240
  2169  006BAC  0100               	movlb	0	; () banked
  2170  006BAE  6FFD               	movwf	_col_loc& (0+255),b
  2171  006BB0                     
  2172                           ; BSR set to: 0
  2173  006BB0  0EF0               	movlw	240
  2174  006BB2  19FD               	xorwf	_col_loc& (0+255),w,b
  2175  006BB4  A4D8               	btfss	status,2,c
  2176  006BB6  EFDF  F035         	goto	u2561
  2177  006BBA  EFE1  F035         	goto	u2560
  2178  006BBE                     u2561:
  2179  006BBE  EFD4  F035         	goto	l2921
  2180  006BC2                     u2560:
  2181  006BC2                     
  2182                           ; BSR set to: 0
  2183  006BC2  5083               	movf	131,w,c	;volatile
  2184  006BC4  0BF0               	andlw	240
  2185  006BC6  6FFD               	movwf	_col_loc& (0+255),b
  2186  006BC8  0EF0               	movlw	240
  2187  006BCA  19FD               	xorwf	_col_loc& (0+255),w,b
  2188  006BCC  A4D8               	btfss	status,2,c
  2189  006BCE  EFEB  F035         	goto	u2571
  2190  006BD2  EFED  F035         	goto	u2570
  2191  006BD6                     u2571:
  2192  006BD6  EFD4  F035         	goto	l2921
  2193  006BDA                     u2570:
  2194  006BDA                     
  2195                           ; BSR set to: 0
  2196  006BDA  0E00               	movlw	0
  2197  006BDC  6E02               	movwf	(MSdelay@val+1)^0,c
  2198  006BDE  0E32               	movlw	50
  2199  006BE0  6E01               	movwf	MSdelay@val^0,c
  2200  006BE2  EC98  F031         	call	_MSdelay	;wreg free
  2201  006BE6  0EF0               	movlw	240
  2202  006BE8  6E8C               	movwf	140,c	;volatile
  2203  006BEA                     l2931:
  2204  006BEA  5083               	movf	131,w,c	;volatile
  2205  006BEC  0BF0               	andlw	240
  2206  006BEE  0100               	movlb	0	; () banked
  2207  006BF0  6FFD               	movwf	_col_loc& (0+255),b
  2208  006BF2                     
  2209                           ; BSR set to: 0
  2210  006BF2  0EF0               	movlw	240
  2211  006BF4  19FD               	xorwf	_col_loc& (0+255),w,b
  2212  006BF6  B4D8               	btfsc	status,2,c
  2213  006BF8  EF00  F036         	goto	u2581
  2214  006BFC  EF02  F036         	goto	u2580
  2215  006C00                     u2581:
  2216  006C00  EFF5  F035         	goto	l2931
  2217  006C04                     u2580:
  2218  006C04                     
  2219                           ; BSR set to: 0
  2220  006C04  5083               	movf	131,w,c	;volatile
  2221  006C06  0BF0               	andlw	240
  2222  006C08  6FFD               	movwf	_col_loc& (0+255),b
  2223  006C0A  0EF0               	movlw	240
  2224  006C0C  19FD               	xorwf	_col_loc& (0+255),w,b
  2225  006C0E  B4D8               	btfsc	status,2,c
  2226  006C10  EF0C  F036         	goto	u2591
  2227  006C14  EF0E  F036         	goto	u2590
  2228  006C18                     u2591:
  2229  006C18  EFF5  F035         	goto	l2931
  2230  006C1C                     u2590:
  2231  006C1C                     
  2232                           ; BSR set to: 0
  2233  006C1C  0E00               	movlw	0
  2234  006C1E  6E02               	movwf	(MSdelay@val+1)^0,c
  2235  006C20  0E14               	movlw	20
  2236  006C22  6E01               	movwf	MSdelay@val^0,c
  2237  006C24  EC98  F031         	call	_MSdelay	;wreg free
  2238  006C28  5083               	movf	131,w,c	;volatile
  2239  006C2A  0BF0               	andlw	240
  2240  006C2C  0100               	movlb	0	; () banked
  2241  006C2E  6FFD               	movwf	_col_loc& (0+255),b
  2242  006C30                     l2941:
  2243                           
  2244                           ; BSR set to: 0
  2245  006C30  0EFE               	movlw	254
  2246  006C32  6E8C               	movwf	140,c	;volatile
  2247  006C34                     
  2248                           ; BSR set to: 0
  2249  006C34  5083               	movf	131,w,c	;volatile
  2250  006C36  0BF0               	andlw	240
  2251  006C38  6FFD               	movwf	_col_loc& (0+255),b
  2252  006C3A                     
  2253                           ; BSR set to: 0
  2254  006C3A  C0FD  F0FB         	movff	_col_loc,_temp_col
  2255  006C3E                     
  2256                           ; BSR set to: 0
  2257  006C3E  0EF0               	movlw	240
  2258  006C40  19FD               	xorwf	_col_loc& (0+255),w,b
  2259  006C42  B4D8               	btfsc	status,2,c
  2260  006C44  EF26  F036         	goto	u2601
  2261  006C48  EF28  F036         	goto	u2600
  2262  006C4C                     u2601:
  2263  006C4C  EF3A  F036         	goto	l2953
  2264  006C50                     u2600:
  2265  006C50                     
  2266                           ; BSR set to: 0
  2267  006C50  0E00               	movlw	0
  2268  006C52  6FFC               	movwf	_rowloc& (0+255),b
  2269  006C54  EF2F  F036         	goto	l29
  2270  006C58                     l2951:
  2271                           
  2272                           ; BSR set to: 0
  2273  006C58  5083               	movf	131,w,c	;volatile
  2274  006C5A  0BF0               	andlw	240
  2275  006C5C  6FFB               	movwf	_temp_col& (0+255),b
  2276  006C5E                     l29:
  2277                           
  2278                           ; BSR set to: 0
  2279  006C5E  0EF0               	movlw	240
  2280  006C60  19FB               	xorwf	_temp_col& (0+255),w,b
  2281  006C62  A4D8               	btfss	status,2,c
  2282  006C64  EF36  F036         	goto	u2611
  2283  006C68  EF38  F036         	goto	u2610
  2284  006C6C                     u2611:
  2285  006C6C  EF2C  F036         	goto	l2951
  2286  006C70                     u2610:
  2287  006C70  EF9E  F036         	goto	l2989
  2288  006C74                     l2953:
  2289                           
  2290                           ; BSR set to: 0
  2291  006C74  0EFD               	movlw	253
  2292  006C76  6E8C               	movwf	140,c	;volatile
  2293  006C78                     
  2294                           ; BSR set to: 0
  2295  006C78  5083               	movf	131,w,c	;volatile
  2296  006C7A  0BF0               	andlw	240
  2297  006C7C  6FFD               	movwf	_col_loc& (0+255),b
  2298  006C7E                     
  2299                           ; BSR set to: 0
  2300  006C7E  C0FD  F0FB         	movff	_col_loc,_temp_col
  2301  006C82                     
  2302                           ; BSR set to: 0
  2303  006C82  0EF0               	movlw	240
  2304  006C84  19FD               	xorwf	_col_loc& (0+255),w,b
  2305  006C86  B4D8               	btfsc	status,2,c
  2306  006C88  EF48  F036         	goto	u2621
  2307  006C8C  EF4A  F036         	goto	u2620
  2308  006C90                     u2621:
  2309  006C90  EF5C  F036         	goto	l2965
  2310  006C94                     u2620:
  2311  006C94                     
  2312                           ; BSR set to: 0
  2313  006C94  0E01               	movlw	1
  2314  006C96  6FFC               	movwf	_rowloc& (0+255),b
  2315  006C98  EF51  F036         	goto	l34
  2316  006C9C                     l2963:
  2317                           
  2318                           ; BSR set to: 0
  2319  006C9C  5083               	movf	131,w,c	;volatile
  2320  006C9E  0BF0               	andlw	240
  2321  006CA0  6FFB               	movwf	_temp_col& (0+255),b
  2322  006CA2                     l34:
  2323                           
  2324                           ; BSR set to: 0
  2325  006CA2  0EF0               	movlw	240
  2326  006CA4  19FB               	xorwf	_temp_col& (0+255),w,b
  2327  006CA6  A4D8               	btfss	status,2,c
  2328  006CA8  EF58  F036         	goto	u2631
  2329  006CAC  EF5A  F036         	goto	u2630
  2330  006CB0                     u2631:
  2331  006CB0  EF4E  F036         	goto	l2963
  2332  006CB4                     u2630:
  2333  006CB4  EF9E  F036         	goto	l2989
  2334  006CB8                     l2965:
  2335                           
  2336                           ; BSR set to: 0
  2337  006CB8  0EFB               	movlw	251
  2338  006CBA  6E8C               	movwf	140,c	;volatile
  2339  006CBC                     
  2340                           ; BSR set to: 0
  2341  006CBC  5083               	movf	131,w,c	;volatile
  2342  006CBE  0BF0               	andlw	240
  2343  006CC0  6FFD               	movwf	_col_loc& (0+255),b
  2344  006CC2                     
  2345                           ; BSR set to: 0
  2346  006CC2  C0FD  F0FB         	movff	_col_loc,_temp_col
  2347  006CC6                     
  2348                           ; BSR set to: 0
  2349  006CC6  0EF0               	movlw	240
  2350  006CC8  19FD               	xorwf	_col_loc& (0+255),w,b
  2351  006CCA  B4D8               	btfsc	status,2,c
  2352  006CCC  EF6A  F036         	goto	u2641
  2353  006CD0  EF6C  F036         	goto	u2640
  2354  006CD4                     u2641:
  2355  006CD4  EF7E  F036         	goto	l2977
  2356  006CD8                     u2640:
  2357  006CD8                     
  2358                           ; BSR set to: 0
  2359  006CD8  0E02               	movlw	2
  2360  006CDA  6FFC               	movwf	_rowloc& (0+255),b
  2361  006CDC  EF73  F036         	goto	l38
  2362  006CE0                     l2975:
  2363                           
  2364                           ; BSR set to: 0
  2365  006CE0  5083               	movf	131,w,c	;volatile
  2366  006CE2  0BF0               	andlw	240
  2367  006CE4  6FFB               	movwf	_temp_col& (0+255),b
  2368  006CE6                     l38:
  2369                           
  2370                           ; BSR set to: 0
  2371  006CE6  0EF0               	movlw	240
  2372  006CE8  19FB               	xorwf	_temp_col& (0+255),w,b
  2373  006CEA  A4D8               	btfss	status,2,c
  2374  006CEC  EF7A  F036         	goto	u2651
  2375  006CF0  EF7C  F036         	goto	u2650
  2376  006CF4                     u2651:
  2377  006CF4  EF70  F036         	goto	l2975
  2378  006CF8                     u2650:
  2379  006CF8  EF9E  F036         	goto	l2989
  2380  006CFC                     l2977:
  2381                           
  2382                           ; BSR set to: 0
  2383  006CFC  0EF7               	movlw	247
  2384  006CFE  6E8C               	movwf	140,c	;volatile
  2385  006D00                     
  2386                           ; BSR set to: 0
  2387  006D00  5083               	movf	131,w,c	;volatile
  2388  006D02  0BF0               	andlw	240
  2389  006D04  6FFD               	movwf	_col_loc& (0+255),b
  2390  006D06                     
  2391                           ; BSR set to: 0
  2392  006D06  C0FD  F0FB         	movff	_col_loc,_temp_col
  2393  006D0A                     
  2394                           ; BSR set to: 0
  2395  006D0A  0EF0               	movlw	240
  2396  006D0C  19FD               	xorwf	_col_loc& (0+255),w,b
  2397  006D0E  B4D8               	btfsc	status,2,c
  2398  006D10  EF8C  F036         	goto	u2661
  2399  006D14  EF8E  F036         	goto	u2660
  2400  006D18                     u2661:
  2401  006D18  EF18  F036         	goto	l2941
  2402  006D1C                     u2660:
  2403  006D1C                     
  2404                           ; BSR set to: 0
  2405  006D1C  0E03               	movlw	3
  2406  006D1E  6FFC               	movwf	_rowloc& (0+255),b
  2407  006D20  EF95  F036         	goto	l42
  2408  006D24                     l2987:
  2409                           
  2410                           ; BSR set to: 0
  2411  006D24  5083               	movf	131,w,c	;volatile
  2412  006D26  0BF0               	andlw	240
  2413  006D28  6FFB               	movwf	_temp_col& (0+255),b
  2414  006D2A                     l42:
  2415                           
  2416                           ; BSR set to: 0
  2417  006D2A  0EF0               	movlw	240
  2418  006D2C  19FB               	xorwf	_temp_col& (0+255),w,b
  2419  006D2E  A4D8               	btfss	status,2,c
  2420  006D30  EF9C  F036         	goto	u2671
  2421  006D34  EF9E  F036         	goto	u2670
  2422  006D38                     u2671:
  2423  006D38  EF92  F036         	goto	l2987
  2424  006D3C                     u2670:
  2425  006D3C                     l2989:
  2426                           
  2427                           ; BSR set to: 0
  2428  006D3C  0EE0               	movlw	224
  2429  006D3E  19FD               	xorwf	_col_loc& (0+255),w,b
  2430  006D40  A4D8               	btfss	status,2,c
  2431  006D42  EFA5  F036         	goto	u2681
  2432  006D46  EFA7  F036         	goto	u2680
  2433  006D4A                     u2681:
  2434  006D4A  EFB2  F036         	goto	l2997
  2435  006D4E                     u2680:
  2436  006D4E                     
  2437                           ; BSR set to: 0
  2438  006D4E  51FC               	movf	_rowloc& (0+255),w,b
  2439  006D50  0D04               	mullw	4
  2440  006D52  0E32               	movlw	low _keypad
  2441  006D54  24F3               	addwf	243,w,c
  2442  006D56  6ED9               	movwf	fsr2l,c
  2443  006D58  0E01               	movlw	high _keypad
  2444  006D5A  20F4               	addwfc	prodh,w,c
  2445  006D5C  6EDA               	movwf	fsr2h,c
  2446  006D5E  50DF               	movf	indf2,w,c
  2447  006D60  EFE3  F036         	goto	l48
  2448  006D64                     l2997:
  2449                           
  2450                           ; BSR set to: 0
  2451  006D64  0ED0               	movlw	208
  2452  006D66  19FD               	xorwf	_col_loc& (0+255),w,b
  2453  006D68  A4D8               	btfss	status,2,c
  2454  006D6A  EFB9  F036         	goto	u2691
  2455  006D6E  EFBB  F036         	goto	u2690
  2456  006D72                     u2691:
  2457  006D72  EFC6  F036         	goto	l3005
  2458  006D76                     u2690:
  2459  006D76                     
  2460                           ; BSR set to: 0
  2461  006D76  51FC               	movf	_rowloc& (0+255),w,b
  2462  006D78  0D04               	mullw	4
  2463  006D7A  0E33               	movlw	low (_keypad+1)
  2464  006D7C  24F3               	addwf	243,w,c
  2465  006D7E  6ED9               	movwf	fsr2l,c
  2466  006D80  0E01               	movlw	high (_keypad+1)
  2467  006D82  20F4               	addwfc	prodh,w,c
  2468  006D84  6EDA               	movwf	fsr2h,c
  2469  006D86  50DF               	movf	indf2,w,c
  2470  006D88  EFE3  F036         	goto	l48
  2471  006D8C                     l3005:
  2472                           
  2473                           ; BSR set to: 0
  2474  006D8C  0EB0               	movlw	176
  2475  006D8E  19FD               	xorwf	_col_loc& (0+255),w,b
  2476  006D90  A4D8               	btfss	status,2,c
  2477  006D92  EFCD  F036         	goto	u2701
  2478  006D96  EFCF  F036         	goto	u2700
  2479  006D9A                     u2701:
  2480  006D9A  EFDA  F036         	goto	l3013
  2481  006D9E                     u2700:
  2482  006D9E                     
  2483                           ; BSR set to: 0
  2484  006D9E  51FC               	movf	_rowloc& (0+255),w,b
  2485  006DA0  0D04               	mullw	4
  2486  006DA2  0E34               	movlw	low (_keypad+2)
  2487  006DA4  24F3               	addwf	243,w,c
  2488  006DA6  6ED9               	movwf	fsr2l,c
  2489  006DA8  0E01               	movlw	high (_keypad+2)
  2490  006DAA  20F4               	addwfc	prodh,w,c
  2491  006DAC  6EDA               	movwf	fsr2h,c
  2492  006DAE  50DF               	movf	indf2,w,c
  2493  006DB0  EFE3  F036         	goto	l48
  2494  006DB4                     l3013:
  2495                           
  2496                           ; BSR set to: 0
  2497  006DB4  51FC               	movf	_rowloc& (0+255),w,b
  2498  006DB6  0D04               	mullw	4
  2499  006DB8  0E35               	movlw	low (_keypad+3)
  2500  006DBA  24F3               	addwf	243,w,c
  2501  006DBC  6ED9               	movwf	fsr2l,c
  2502  006DBE  0E01               	movlw	high (_keypad+3)
  2503  006DC0  20F4               	addwfc	prodh,w,c
  2504  006DC2  6EDA               	movwf	fsr2h,c
  2505  006DC4  50DF               	movf	indf2,w,c
  2506  006DC6                     l48:
  2507                           
  2508                           ; BSR set to: 0
  2509  006DC6  0012               	return		;funcret
  2510  006DC8                     __end_of_keyfind:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _entregarproductos *****************
  2514 ;; Defined at:
  2515 ;;		line 329 in file "Vending_Machine.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  i               2    8[COMRAM] int 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0
  2530 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2532 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    2
  2536 ;; This function calls:
  2537 ;;		_entregarproducto
  2538 ;; This function is called by:
  2539 ;;		_main
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text2
  2544  0062E8                     __ptext2:
  2545                           	callstack 0
  2546  0062E8                     _entregarproductos:
  2547                           	callstack 28
  2548  0062E8                     
  2549                           ;Vending_Machine.c: 330:     for(int i=0;i<3;i++){
  2550  0062E8  0E00               	movlw	0
  2551  0062EA  6E0A               	movwf	(entregarproductos@i+1)^0,c
  2552  0062EC  0E00               	movlw	0
  2553  0062EE  6E09               	movwf	entregarproductos@i^0,c
  2554  0062F0                     l3129:
  2555                           
  2556                           ;Vending_Machine.c: 331:         entregarproducto(v_proentregar[i]);
  2557  0062F0  90D8               	bcf	status,0,c
  2558  0062F2  3409               	rlcf	entregarproductos@i^0,w,c
  2559  0062F4  6ED9               	movwf	fsr2l,c
  2560  0062F6  340A               	rlcf	(entregarproductos@i+1)^0,w,c
  2561  0062F8  6EDA               	movwf	fsr2h,c
  2562  0062FA  0E00               	movlw	low _v_proentregar
  2563  0062FC  26D9               	addwf	fsr2l,f,c
  2564  0062FE  0E01               	movlw	high _v_proentregar
  2565  006300  22DA               	addwfc	fsr2h,f,c
  2566  006302  CFDE F007          	movff	postinc2,entregarproducto@a
  2567  006306  CFDD F008          	movff	postdec2,entregarproducto@a+1
  2568  00630A  EC13  F033         	call	_entregarproducto	;wreg free
  2569  00630E                     
  2570                           ;Vending_Machine.c: 332:     }
  2571  00630E  4A09               	infsnz	entregarproductos@i^0,f,c
  2572  006310  2A0A               	incf	(entregarproductos@i+1)^0,f,c
  2573  006312  BE0A               	btfsc	(entregarproductos@i+1)^0,7,c
  2574  006314  EF95  F031         	goto	u2741
  2575  006318  500A               	movf	(entregarproductos@i+1)^0,w,c
  2576  00631A  E109               	bnz	u2740
  2577  00631C  0E03               	movlw	3
  2578  00631E  5C09               	subwf	entregarproductos@i^0,w,c
  2579  006320  A0D8               	btfss	status,0,c
  2580  006322  EF95  F031         	goto	u2741
  2581  006326  EF97  F031         	goto	u2740
  2582  00632A                     u2741:
  2583  00632A  EF78  F031         	goto	l3129
  2584  00632E                     u2740:
  2585  00632E  0012               	return		;funcret
  2586  006330                     __end_of_entregarproductos:
  2587                           	callstack 0
  2588                           
  2589 ;; *************** function _entregarproducto *****************
  2590 ;; Defined at:
  2591 ;;		line 334 in file "Vending_Machine.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  a               2    6[COMRAM] int 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2605 ;;      Params:         2       0       0       0       0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2608 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    1
  2612 ;; This function calls:
  2613 ;;		_MSdelay
  2614 ;; This function is called by:
  2615 ;;		_entregarproductos
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text3
  2620  006626                     __ptext3:
  2621                           	callstack 0
  2622  006626                     _entregarproducto:
  2623                           	callstack 28
  2624  006626                     
  2625                           ;Vending_Machine.c: 335:     LATA2=0;
  2626  006626  9489               	bcf	3977,2,c	;volatile
  2627  006628                     
  2628                           ;Vending_Machine.c: 336:     if(a==1){
  2629  006628  0407               	decf	entregarproducto@a^0,w,c
  2630  00662A  1008               	iorwf	(entregarproducto@a+1)^0,w,c
  2631  00662C  A4D8               	btfss	status,2,c
  2632  00662E  EF1B  F033         	goto	u2521
  2633  006632  EF1D  F033         	goto	u2520
  2634  006636                     u2521:
  2635  006636  EF1F  F033         	goto	l2903
  2636  00663A                     u2520:
  2637  00663A                     
  2638                           ;Vending_Machine.c: 337:         LATA1=0;
  2639  00663A  9289               	bcf	3977,1,c	;volatile
  2640                           
  2641                           ;Vending_Machine.c: 338:         LATA0=0;
  2642  00663C  9089               	bcf	3977,0,c	;volatile
  2643  00663E                     l2903:
  2644                           
  2645                           ;Vending_Machine.c: 340:     if(a==2){
  2646  00663E  0E02               	movlw	2
  2647  006640  1807               	xorwf	entregarproducto@a^0,w,c
  2648  006642  1008               	iorwf	(entregarproducto@a+1)^0,w,c
  2649  006644  A4D8               	btfss	status,2,c
  2650  006646  EF27  F033         	goto	u2531
  2651  00664A  EF29  F033         	goto	u2530
  2652  00664E                     u2531:
  2653  00664E  EF2B  F033         	goto	l2907
  2654  006652                     u2530:
  2655  006652                     
  2656                           ;Vending_Machine.c: 341:         LATA1=0;
  2657  006652  9289               	bcf	3977,1,c	;volatile
  2658                           
  2659                           ;Vending_Machine.c: 342:         LATA0=0xff;
  2660  006654  8089               	bsf	3977,0,c	;volatile
  2661  006656                     l2907:
  2662                           
  2663                           ;Vending_Machine.c: 344:     if(a==3){
  2664  006656  0E03               	movlw	3
  2665  006658  1807               	xorwf	entregarproducto@a^0,w,c
  2666  00665A  1008               	iorwf	(entregarproducto@a+1)^0,w,c
  2667  00665C  A4D8               	btfss	status,2,c
  2668  00665E  EF33  F033         	goto	u2541
  2669  006662  EF35  F033         	goto	u2540
  2670  006666                     u2541:
  2671  006666  EF37  F033         	goto	l2911
  2672  00666A                     u2540:
  2673  00666A                     
  2674                           ;Vending_Machine.c: 345:         LATA1=0xff;
  2675  00666A  8289               	bsf	3977,1,c	;volatile
  2676                           
  2677                           ;Vending_Machine.c: 346:         LATA0=0;
  2678  00666C  9089               	bcf	3977,0,c	;volatile
  2679  00666E                     l2911:
  2680                           
  2681                           ;Vending_Machine.c: 348:     if(a==4){
  2682  00666E  0E04               	movlw	4
  2683  006670  1807               	xorwf	entregarproducto@a^0,w,c
  2684  006672  1008               	iorwf	(entregarproducto@a+1)^0,w,c
  2685  006674  A4D8               	btfss	status,2,c
  2686  006676  EF3F  F033         	goto	u2551
  2687  00667A  EF41  F033         	goto	u2550
  2688  00667E                     u2551:
  2689  00667E  EF43  F033         	goto	l2915
  2690  006682                     u2550:
  2691  006682                     
  2692                           ;Vending_Machine.c: 349:         LATA1=0xff;
  2693  006682  8289               	bsf	3977,1,c	;volatile
  2694                           
  2695                           ;Vending_Machine.c: 350:         LATA0=0xff;
  2696  006684  8089               	bsf	3977,0,c	;volatile
  2697  006686                     l2915:
  2698                           
  2699                           ;Vending_Machine.c: 352:     MSdelay(1000);
  2700  006686  0E03               	movlw	3
  2701  006688  6E02               	movwf	(MSdelay@val+1)^0,c
  2702  00668A  0EE8               	movlw	232
  2703  00668C  6E01               	movwf	MSdelay@val^0,c
  2704  00668E  EC98  F031         	call	_MSdelay	;wreg free
  2705  006692                     
  2706                           ;Vending_Machine.c: 353:     LATA2=0XFF;
  2707  006692  8489               	bsf	3977,2,c	;volatile
  2708  006694  0012               	return		;funcret
  2709  006696                     __end_of_entregarproducto:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _Rtc *****************
  2713 ;; Defined at:
  2714 ;;		line 248 in file "Vending_Machine.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  hours          10   81[BANK0 ] unsigned char [10]
  2719 ;;  mins           10   71[BANK0 ] unsigned char [10]
  2720 ;;  secs           10   61[BANK0 ] unsigned char [10]
  2721 ;;  year           10   51[BANK0 ] unsigned char [10]
  2722 ;;  month          10   41[BANK0 ] unsigned char [10]
  2723 ;;  date           10   31[BANK0 ] unsigned char [10]
  2724 ;;  days            7   24[BANK0 ] unsigned char [7]
  2725 ;;  AM_PM           1   92[BANK0 ] unsigned char 
  2726 ;;  Clock_type      1    0        unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2736 ;;      Params:         0       0       0       0       0       0       0       0       0
  2737 ;;      Locals:         0      69       0       0       0       0       0       0       0
  2738 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2739 ;;      Totals:         0      71       0       0       0       0       0       0       0
  2740 ;;Total ram usage:       71 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    8
  2743 ;; This function calls:
  2744 ;;		_I2C_Stop
  2745 ;;		_LCD_String
  2746 ;;		_LCD_String_xy
  2747 ;;		_RTC_Read_Calendar
  2748 ;;		_RTC_Read_Clock
  2749 ;;		_sprintf
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text4
  2756  00733C                     __ptext4:
  2757                           	callstack 0
  2758  00733C                     _Rtc:
  2759                           	callstack 22
  2760  00733C                     
  2761                           ;Vending_Machine.c: 254:     char AM_PM = 0x05;
  2762  00733C  0E05               	movlw	5
  2763  00733E  0100               	movlb	0	; () banked
  2764  007340  6FBC               	movwf	Rtc@AM_PM& (0+255),b
  2765  007342                     
  2766                           ; BSR set to: 0
  2767                           ;Vending_Machine.c: 255:     char days[7] = {'S','M','T','W','t','F','s'};
  2768  007342  EE21  F052         	lfsr	2,Rtc@F3747
  2769  007346  EE10  F078         	lfsr	1,Rtc@days
  2770  00734A  0E06               	movlw	6
  2771  00734C                     u2711:
  2772  00734C  CFDB FFE3          	movff	plusw2,plusw1
  2773  007350  06E8               	decf	wreg,f,c
  2774  007352  E2FC               	bc	u2711
  2775  007354                     
  2776                           ; BSR set to: 0
  2777                           ;Vending_Machine.c: 256:     OSCCON=0x72;
  2778  007354  0E72               	movlw	114
  2779  007356  6ED3               	movwf	211,c	;volatile
  2780  007358                     
  2781                           ; BSR set to: 0
  2782                           ;Vending_Machine.c: 259:         RTC_Read_Clock(0);
  2783  007358  0E00               	movlw	0
  2784  00735A  ECBD  F031         	call	_RTC_Read_Clock
  2785  00735E                     
  2786                           ;Vending_Machine.c: 261:         if(hour & (1<<Clock_type)){
  2787  00735E  0100               	movlb	0	; () banked
  2788  007360  ADF4               	btfss	_hour& (0+255),6,b
  2789  007362  EFB5  F039         	goto	u2721
  2790  007366  EFB7  F039         	goto	u2720
  2791  00736A                     u2721:
  2792  00736A  EF1A  F03A         	goto	l3073
  2793  00736E                     u2720:
  2794  00736E                     
  2795                           ; BSR set to: 0
  2796                           ;Vending_Machine.c: 263:             if(hour & (1<<AM_PM)){
  2797  00736E  ABF4               	btfss	_hour& (0+255),5,b
  2798  007370  EFBC  F039         	goto	u2731
  2799  007374  EFBE  F039         	goto	u2730
  2800  007378                     u2731:
  2801  007378  EFC9  F039         	goto	l3057
  2802  00737C                     u2730:
  2803  00737C                     
  2804                           ; BSR set to: 0
  2805                           ;Vending_Machine.c: 264:                 LCD_String_xy(1,14,"PM");
  2806  00737C  0E0E               	movlw	14
  2807  00737E  6E0B               	movwf	LCD_String_xy@pos^0,c
  2808  007380  0EF4               	movlw	low STR_27
  2809  007382  6E0C               	movwf	LCD_String_xy@msg^0,c
  2810  007384  0E7F               	movlw	high STR_27
  2811  007386  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2812  007388  0E01               	movlw	1
  2813  00738A  EC4B  F033         	call	_LCD_String_xy
  2814                           
  2815                           ;Vending_Machine.c: 265:             }
  2816  00738E  EFD2  F039         	goto	l3059
  2817  007392                     l3057:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;Vending_Machine.c: 267:                 LCD_String_xy(1,14,"AM");
  2821  007392  0E0E               	movlw	14
  2822  007394  6E0B               	movwf	LCD_String_xy@pos^0,c
  2823  007396  0EF1               	movlw	low STR_28
  2824  007398  6E0C               	movwf	LCD_String_xy@msg^0,c
  2825  00739A  0E7F               	movlw	high STR_28
  2826  00739C  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2827  00739E  0E01               	movlw	1
  2828  0073A0  EC4B  F033         	call	_LCD_String_xy
  2829  0073A4                     l3059:
  2830                           
  2831                           ;Vending_Machine.c: 270:             hour = hour & (0x1f);
  2832  0073A4  0E1F               	movlw	31
  2833  0073A6  0100               	movlb	0	; () banked
  2834  0073A8  15F4               	andwf	_hour& (0+255),w,b
  2835  0073AA  6FF4               	movwf	_hour& (0+255),b
  2836  0073AC  6BF5               	clrf	(_hour+1)& (0+255),b
  2837  0073AE                     
  2838                           ; BSR set to: 0
  2839                           ;Vending_Machine.c: 271:             sprintf(secs,"%x ",sec);
  2840  0073AE  0E9D               	movlw	low Rtc@secs
  2841  0073B0  6F66               	movwf	sprintf@s& (0+255),b
  2842  0073B2  0E00               	movlw	high Rtc@secs
  2843  0073B4  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2844  0073B6  0ED1               	movlw	low STR_29
  2845  0073B8  6F68               	movwf	sprintf@fmt& (0+255),b
  2846  0073BA  0E7F               	movlw	high STR_29
  2847  0073BC  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2848  0073BE  C0F8  F06A         	movff	_sec,?_sprintf+4
  2849  0073C2  C0F9  F06B         	movff	_sec+1,?_sprintf+5
  2850  0073C6  EC2E  F032         	call	_sprintf	;wreg free
  2851  0073CA                     
  2852                           ;Vending_Machine.c: 272:             sprintf(mins,"%x:",min);
  2853  0073CA  0EA7               	movlw	low Rtc@mins
  2854  0073CC  0100               	movlb	0	; () banked
  2855  0073CE  6F66               	movwf	sprintf@s& (0+255),b
  2856  0073D0  0E00               	movlw	high Rtc@mins
  2857  0073D2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2858  0073D4  0EB2               	movlw	low (STR_31+5)
  2859  0073D6  6F68               	movwf	sprintf@fmt& (0+255),b
  2860  0073D8  0E7F               	movlw	high (STR_31+5)
  2861  0073DA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2862  0073DC  C0F6  F06A         	movff	_min,?_sprintf+4
  2863  0073E0  C0F7  F06B         	movff	_min+1,?_sprintf+5
  2864  0073E4  EC2E  F032         	call	_sprintf	;wreg free
  2865  0073E8                     
  2866                           ;Vending_Machine.c: 273:             sprintf(hours,"Hora:%x:",hour);
  2867  0073E8  0EB1               	movlw	low Rtc@hours
  2868  0073EA  0100               	movlb	0	; () banked
  2869  0073EC  6F66               	movwf	sprintf@s& (0+255),b
  2870  0073EE  0E00               	movlw	high Rtc@hours
  2871  0073F0  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2872  0073F2  0EAD               	movlw	low STR_31
  2873  0073F4  6F68               	movwf	sprintf@fmt& (0+255),b
  2874  0073F6  0E7F               	movlw	high STR_31
  2875  0073F8  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2876  0073FA  C0F4  F06A         	movff	_hour,?_sprintf+4
  2877  0073FE  C0F5  F06B         	movff	_hour+1,?_sprintf+5
  2878  007402  EC2E  F032         	call	_sprintf	;wreg free
  2879  007406                     
  2880                           ;Vending_Machine.c: 274:             LCD_String_xy(0,0,hours);
  2881  007406  0E00               	movlw	0
  2882  007408  6E0B               	movwf	LCD_String_xy@pos^0,c
  2883  00740A  0EB1               	movlw	low Rtc@hours
  2884  00740C  6E0C               	movwf	LCD_String_xy@msg^0,c
  2885  00740E  0E00               	movlw	high Rtc@hours
  2886  007410  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2887  007412  0E00               	movlw	0
  2888  007414  EC4B  F033         	call	_LCD_String_xy
  2889  007418                     
  2890                           ;Vending_Machine.c: 275:             LCD_String(mins);
  2891  007418  0EA7               	movlw	low Rtc@mins
  2892  00741A  6E09               	movwf	LCD_String@msg^0,c
  2893  00741C  0E00               	movlw	high Rtc@mins
  2894  00741E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2895  007420  EC84  F032         	call	_LCD_String	;wreg free
  2896  007424                     
  2897                           ;Vending_Machine.c: 276:             LCD_String(secs);
  2898  007424  0E9D               	movlw	low Rtc@secs
  2899  007426  6E09               	movwf	LCD_String@msg^0,c
  2900  007428  0E00               	movlw	high Rtc@secs
  2901  00742A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2902  00742C  EC84  F032         	call	_LCD_String	;wreg free
  2903                           
  2904                           ;Vending_Machine.c: 277:         }
  2905  007430  EF59  F03A         	goto	l3085
  2906  007434                     l3073:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;Vending_Machine.c: 280:             hour = hour & (0x3f);
  2910  007434  0E3F               	movlw	63
  2911  007436  15F4               	andwf	_hour& (0+255),w,b
  2912  007438  6FF4               	movwf	_hour& (0+255),b
  2913  00743A  6BF5               	clrf	(_hour+1)& (0+255),b
  2914  00743C                     
  2915                           ; BSR set to: 0
  2916                           ;Vending_Machine.c: 281:             sprintf(secs,"%x ",sec);
  2917  00743C  0E9D               	movlw	low Rtc@secs
  2918  00743E  6F66               	movwf	sprintf@s& (0+255),b
  2919  007440  0E00               	movlw	high Rtc@secs
  2920  007442  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2921  007444  0ED1               	movlw	low STR_29
  2922  007446  6F68               	movwf	sprintf@fmt& (0+255),b
  2923  007448  0E7F               	movlw	high STR_29
  2924  00744A  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2925  00744C  C0F8  F06A         	movff	_sec,?_sprintf+4
  2926  007450  C0F9  F06B         	movff	_sec+1,?_sprintf+5
  2927  007454  EC2E  F032         	call	_sprintf	;wreg free
  2928  007458                     
  2929                           ;Vending_Machine.c: 282:             sprintf(mins,"%x",min);
  2930  007458  0EA7               	movlw	low Rtc@mins
  2931  00745A  0100               	movlb	0	; () banked
  2932  00745C  6F66               	movwf	sprintf@s& (0+255),b
  2933  00745E  0E00               	movlw	high Rtc@mins
  2934  007460  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2935  007462  0EFA               	movlw	low STR_33
  2936  007464  6F68               	movwf	sprintf@fmt& (0+255),b
  2937  007466  0E7F               	movlw	high STR_33
  2938  007468  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2939  00746A  C0F6  F06A         	movff	_min,?_sprintf+4
  2940  00746E  C0F7  F06B         	movff	_min+1,?_sprintf+5
  2941  007472  EC2E  F032         	call	_sprintf	;wreg free
  2942  007476                     
  2943                           ;Vending_Machine.c: 283:             sprintf(hours,"Time:%x:",hour);
  2944  007476  0EB1               	movlw	low Rtc@hours
  2945  007478  0100               	movlb	0	; () banked
  2946  00747A  6F66               	movwf	sprintf@s& (0+255),b
  2947  00747C  0E00               	movlw	high Rtc@hours
  2948  00747E  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2949  007480  0EB6               	movlw	low STR_34
  2950  007482  6F68               	movwf	sprintf@fmt& (0+255),b
  2951  007484  0E7F               	movlw	high STR_34
  2952  007486  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2953  007488  C0F4  F06A         	movff	_hour,?_sprintf+4
  2954  00748C  C0F5  F06B         	movff	_hour+1,?_sprintf+5
  2955  007490  EC2E  F032         	call	_sprintf	;wreg free
  2956  007494                     
  2957                           ;Vending_Machine.c: 284:             LCD_String_xy(0,0,hours);
  2958  007494  0E00               	movlw	0
  2959  007496  6E0B               	movwf	LCD_String_xy@pos^0,c
  2960  007498  0EB1               	movlw	low Rtc@hours
  2961  00749A  6E0C               	movwf	LCD_String_xy@msg^0,c
  2962  00749C  0E00               	movlw	high Rtc@hours
  2963  00749E  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  2964  0074A0  0E00               	movlw	0
  2965  0074A2  EC4B  F033         	call	_LCD_String_xy
  2966  0074A6                     
  2967                           ;Vending_Machine.c: 285:             LCD_String(mins);
  2968  0074A6  0EA7               	movlw	low Rtc@mins
  2969  0074A8  6E09               	movwf	LCD_String@msg^0,c
  2970  0074AA  0E00               	movlw	high Rtc@mins
  2971  0074AC  6E0A               	movwf	(LCD_String@msg+1)^0,c
  2972  0074AE  EC84  F032         	call	_LCD_String	;wreg free
  2973  0074B2                     l3085:
  2974                           
  2975                           ;Vending_Machine.c: 289:         RTC_Read_Calendar(3);
  2976  0074B2  0E03               	movlw	3
  2977  0074B4  EC57  F032         	call	_RTC_Read_Calendar
  2978  0074B8                     
  2979                           ;Vending_Machine.c: 290:         I2C_Stop();
  2980  0074B8  EC01  F030         	call	_I2C_Stop	;wreg free
  2981  0074BC                     
  2982                           ;Vending_Machine.c: 291:         sprintf(date,"Date: %x-",Date);
  2983  0074BC  0E7F               	movlw	low Rtc@date
  2984  0074BE  0100               	movlb	0	; () banked
  2985  0074C0  6F66               	movwf	sprintf@s& (0+255),b
  2986  0074C2  0E00               	movlw	high Rtc@date
  2987  0074C4  6F67               	movwf	(sprintf@s+1)& (0+255),b
  2988  0074C6  0EA3               	movlw	low STR_35
  2989  0074C8  6F68               	movwf	sprintf@fmt& (0+255),b
  2990  0074CA  0E7F               	movlw	high STR_35
  2991  0074CC  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  2992  0074CE  C10E  F06A         	movff	_Date,?_sprintf+4
  2993  0074D2  C10F  F06B         	movff	_Date+1,?_sprintf+5
  2994  0074D6  EC2E  F032         	call	_sprintf	;wreg free
  2995  0074DA                     
  2996                           ;Vending_Machine.c: 292:         sprintf(month,"%x-",Month);
  2997  0074DA  0E89               	movlw	low Rtc@month
  2998  0074DC  0100               	movlb	0	; () banked
  2999  0074DE  6F66               	movwf	sprintf@s& (0+255),b
  3000  0074E0  0E00               	movlw	high Rtc@month
  3001  0074E2  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3002  0074E4  0EA9               	movlw	low (STR_35+6)
  3003  0074E6  6F68               	movwf	sprintf@fmt& (0+255),b
  3004  0074E8  0E7F               	movlw	high (STR_35+6)
  3005  0074EA  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3006  0074EC  C10C  F06A         	movff	_Month,?_sprintf+4
  3007  0074F0  C10D  F06B         	movff	_Month+1,?_sprintf+5
  3008  0074F4  EC2E  F032         	call	_sprintf	;wreg free
  3009  0074F8                     
  3010                           ;Vending_Machine.c: 293:         sprintf(year,"%x ",Year);
  3011  0074F8  0E93               	movlw	low Rtc@year
  3012  0074FA  0100               	movlb	0	; () banked
  3013  0074FC  6F66               	movwf	sprintf@s& (0+255),b
  3014  0074FE  0E00               	movlw	high Rtc@year
  3015  007500  6F67               	movwf	(sprintf@s+1)& (0+255),b
  3016  007502  0ED1               	movlw	low STR_29
  3017  007504  6F68               	movwf	sprintf@fmt& (0+255),b
  3018  007506  0E7F               	movlw	high STR_29
  3019  007508  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
  3020  00750A  C10A  F06A         	movff	_Year,?_sprintf+4
  3021  00750E  C10B  F06B         	movff	_Year+1,?_sprintf+5
  3022  007512  EC2E  F032         	call	_sprintf	;wreg free
  3023  007516                     
  3024                           ;Vending_Machine.c: 294:         LCD_String_xy(2,0,date);
  3025  007516  0E00               	movlw	0
  3026  007518  6E0B               	movwf	LCD_String_xy@pos^0,c
  3027  00751A  0E7F               	movlw	low Rtc@date
  3028  00751C  6E0C               	movwf	LCD_String_xy@msg^0,c
  3029  00751E  0E00               	movlw	high Rtc@date
  3030  007520  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
  3031  007522  0E02               	movlw	2
  3032  007524  EC4B  F033         	call	_LCD_String_xy
  3033  007528                     
  3034                           ;Vending_Machine.c: 295:         LCD_String(month);
  3035  007528  0E89               	movlw	low Rtc@month
  3036  00752A  6E09               	movwf	LCD_String@msg^0,c
  3037  00752C  0E00               	movlw	high Rtc@month
  3038  00752E  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3039  007530  EC84  F032         	call	_LCD_String	;wreg free
  3040  007534                     
  3041                           ;Vending_Machine.c: 296:         LCD_String(year);
  3042  007534  0E93               	movlw	low Rtc@year
  3043  007536  6E09               	movwf	LCD_String@msg^0,c
  3044  007538  0E00               	movlw	high Rtc@year
  3045  00753A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3046  00753C  EC84  F032         	call	_LCD_String	;wreg free
  3047                           
  3048                           ;Vending_Machine.c: 299:         switch(days[Day])
  3049  007540  EFDA  F03A         	goto	l3117
  3050  007544                     l3101:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;Vending_Machine.c: 302:                         LCD_String("Sun");
  3054  007544  0EE5               	movlw	low STR_38
  3055  007546  6E09               	movwf	LCD_String@msg^0,c
  3056  007548  0E7F               	movlw	high STR_38
  3057  00754A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3058  00754C  EC84  F032         	call	_LCD_String	;wreg free
  3059                           
  3060                           ;Vending_Machine.c: 303:                         break;
  3061  007550  EF0B  F03B         	goto	l204
  3062  007554                     l3103:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;Vending_Machine.c: 305:                         LCD_String("Mon");
  3066  007554  0EE1               	movlw	low STR_39
  3067  007556  6E09               	movwf	LCD_String@msg^0,c
  3068  007558  0E7F               	movlw	high STR_39
  3069  00755A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3070  00755C  EC84  F032         	call	_LCD_String	;wreg free
  3071                           
  3072                           ;Vending_Machine.c: 306:                         break;
  3073  007560  EF0B  F03B         	goto	l204
  3074  007564                     l3105:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;Vending_Machine.c: 308:                         LCD_String("Tue");
  3078  007564  0ED9               	movlw	low STR_40
  3079  007566  6E09               	movwf	LCD_String@msg^0,c
  3080  007568  0E7F               	movlw	high STR_40
  3081  00756A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3082  00756C  EC84  F032         	call	_LCD_String	;wreg free
  3083                           
  3084                           ;Vending_Machine.c: 309:                         break;
  3085  007570  EF0B  F03B         	goto	l204
  3086  007574                     l3107:
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;Vending_Machine.c: 311:                         LCD_String("Wed");
  3090  007574  0ED5               	movlw	low STR_41
  3091  007576  6E09               	movwf	LCD_String@msg^0,c
  3092  007578  0E7F               	movlw	high STR_41
  3093  00757A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3094  00757C  EC84  F032         	call	_LCD_String	;wreg free
  3095                           
  3096                           ;Vending_Machine.c: 312:                         break;
  3097  007580  EF0B  F03B         	goto	l204
  3098  007584                     l3109:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;Vending_Machine.c: 314:                         LCD_String("Thu");
  3102  007584  0EED               	movlw	low STR_42
  3103  007586  6E09               	movwf	LCD_String@msg^0,c
  3104  007588  0E7F               	movlw	high STR_42
  3105  00758A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3106  00758C  EC84  F032         	call	_LCD_String	;wreg free
  3107                           
  3108                           ;Vending_Machine.c: 315:                         break;
  3109  007590  EF0B  F03B         	goto	l204
  3110  007594                     l3111:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;Vending_Machine.c: 317:                         LCD_String("Fri");
  3114  007594  0EDD               	movlw	low STR_43
  3115  007596  6E09               	movwf	LCD_String@msg^0,c
  3116  007598  0E7F               	movlw	high STR_43
  3117  00759A  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3118  00759C  EC84  F032         	call	_LCD_String	;wreg free
  3119                           
  3120                           ;Vending_Machine.c: 318:                         break;
  3121  0075A0  EF0B  F03B         	goto	l204
  3122  0075A4                     l3113:
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;Vending_Machine.c: 320:                         LCD_String("Sat");
  3126  0075A4  0EE9               	movlw	low STR_44
  3127  0075A6  6E09               	movwf	LCD_String@msg^0,c
  3128  0075A8  0E7F               	movlw	high STR_44
  3129  0075AA  6E0A               	movwf	(LCD_String@msg+1)^0,c
  3130  0075AC  EC84  F032         	call	_LCD_String	;wreg free
  3131                           
  3132                           ;Vending_Machine.c: 321:                         break;
  3133  0075B0  EF0B  F03B         	goto	l204
  3134  0075B4                     l3117:
  3135  0075B4  0E78               	movlw	low Rtc@days
  3136  0075B6  0101               	movlb	1	; () banked
  3137  0075B8  2510               	addwf	_Day& (0+255),w,b
  3138  0075BA  6ED9               	movwf	fsr2l,c
  3139  0075BC  0E00               	movlw	high Rtc@days
  3140  0075BE  2111               	addwfc	(_Day+1)& (0+255),w,b
  3141  0075C0  6EDA               	movwf	fsr2h,c
  3142  0075C2  50DF               	movf	indf2,w,c
  3143  0075C4  0100               	movlb	0	; () banked
  3144  0075C6  6F76               	movwf	??_Rtc& (0+255),b
  3145  0075C8  6B77               	clrf	(??_Rtc+1)& (0+255),b
  3146                           
  3147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3148                           ; Switch size 1, requested type "simple"
  3149                           ; Number of cases is 1, Range of values is 0 to 0
  3150                           ; switch strategies available:
  3151                           ; Name         Instructions Cycles
  3152                           ; simple_byte            4     3 (average)
  3153                           ;	Chosen strategy is simple_byte
  3154  0075CA  5177               	movf	(??_Rtc+1)& (0+255),w,b
  3155  0075CC  0A00               	xorlw	0	; case 0
  3156  0075CE  B4D8               	btfsc	status,2,c
  3157  0075D0  EFEC  F03A         	goto	l3399
  3158  0075D4  EF0B  F03B         	goto	l204
  3159  0075D8                     l3399:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ; Switch size 1, requested type "simple"
  3163                           ; Number of cases is 7, Range of values is 70 to 116
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte           22    12 (average)
  3167                           ;	Chosen strategy is simple_byte
  3168  0075D8  5176               	movf	??_Rtc& (0+255),w,b
  3169  0075DA  0A46               	xorlw	70	; case 70
  3170  0075DC  B4D8               	btfsc	status,2,c
  3171  0075DE  EFCA  F03A         	goto	l3111
  3172  0075E2  0A0B               	xorlw	11	; case 77
  3173  0075E4  B4D8               	btfsc	status,2,c
  3174  0075E6  EFAA  F03A         	goto	l3103
  3175  0075EA  0A1E               	xorlw	30	; case 83
  3176  0075EC  B4D8               	btfsc	status,2,c
  3177  0075EE  EFA2  F03A         	goto	l3101
  3178  0075F2  0A07               	xorlw	7	; case 84
  3179  0075F4  B4D8               	btfsc	status,2,c
  3180  0075F6  EFB2  F03A         	goto	l3105
  3181  0075FA  0A03               	xorlw	3	; case 87
  3182  0075FC  B4D8               	btfsc	status,2,c
  3183  0075FE  EFBA  F03A         	goto	l3107
  3184  007602  0A24               	xorlw	36	; case 115
  3185  007604  B4D8               	btfsc	status,2,c
  3186  007606  EFD2  F03A         	goto	l3113
  3187  00760A  0A07               	xorlw	7	; case 116
  3188  00760C  B4D8               	btfsc	status,2,c
  3189  00760E  EFC2  F03A         	goto	l3109
  3190  007612  EF0B  F03B         	goto	l204
  3191  007616                     l204:
  3192  007616  0012               	return		;funcret
  3193  007618                     __end_of_Rtc:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function _sprintf *****************
  3197 ;; Defined at:
  3198 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  s               2    6[BANK0 ] PTR unsigned char 
  3201 ;;		 -> Rtc@year(10), Rtc@month(10), Rtc@date(10), Rtc@hours(10), 
  3202 ;;		 -> Rtc@mins(10), Rtc@secs(10), main@c1_402(6), main@c1(6), 
  3203 ;;		 -> main@c(6), 
  3204 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3205 ;;		 -> STR_37(4), STR_36(4), STR_35(10), STR_34(9), 
  3206 ;;		 -> STR_33(3), STR_32(4), STR_31(9), STR_30(4), 
  3207 ;;		 -> STR_29(4), STR_24(3), STR_22(3), STR_19(3), 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  f               6   16[BANK0 ] struct _IO_FILE
  3210 ;;  ap              2   14[BANK0 ] PTR void [1]
  3211 ;;		 -> ?_sprintf(2), 
  3212 ;;  ret             2    0        int 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    6[BANK0 ] int 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3222 ;;      Params:         0       6       0       0       0       0       0       0       0
  3223 ;;      Locals:         0      10       0       0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3225 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3226 ;;Total ram usage:       16 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    7
  3229 ;; This function calls:
  3230 ;;		_vfprintf
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;;		_Rtc
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text5
  3238  00645C                     __ptext5:
  3239                           	callstack 0
  3240  00645C                     _sprintf:
  3241                           	callstack 23
  3242  00645C  0E6A               	movlw	low (?_sprintf+4)
  3243  00645E  0100               	movlb	0	; () banked
  3244  006460  6F6E               	movwf	sprintf@ap& (0+255),b
  3245  006462  0E00               	movlw	high (?_sprintf+4)
  3246  006464  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  3247  006466  C066  F070         	movff	sprintf@s,sprintf@f
  3248  00646A  C067  F071         	movff	sprintf@s+1,sprintf@f+1
  3249  00646E                     
  3250                           ; BSR set to: 0
  3251  00646E  0E00               	movlw	0
  3252  006470  6F73               	movwf	(sprintf@f+3)& (0+255),b
  3253  006472  0E00               	movlw	0
  3254  006474  6F72               	movwf	(sprintf@f+2)& (0+255),b
  3255  006476                     
  3256                           ; BSR set to: 0
  3257  006476  0E00               	movlw	0
  3258  006478  6F75               	movwf	(sprintf@f+5)& (0+255),b
  3259  00647A  0E00               	movlw	0
  3260  00647C  6F74               	movwf	(sprintf@f+4)& (0+255),b
  3261  00647E                     
  3262                           ; BSR set to: 0
  3263  00647E  0E70               	movlw	low sprintf@f
  3264  006480  6F60               	movwf	vfprintf@fp& (0+255),b
  3265  006482  0E00               	movlw	high sprintf@f
  3266  006484  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3267  006486  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
  3268  00648A  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3269  00648E  0E6E               	movlw	low sprintf@ap
  3270  006490  6F64               	movwf	vfprintf@ap& (0+255),b
  3271  006492  0E00               	movlw	high sprintf@ap
  3272  006494  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3273  006496  ECE2  F032         	call	_vfprintf	;wreg free
  3274  00649A  0100               	movlb	0	; () banked
  3275  00649C  5172               	movf	(sprintf@f+2)& (0+255),w,b
  3276  00649E  2566               	addwf	sprintf@s& (0+255),w,b
  3277  0064A0  6ED9               	movwf	fsr2l,c
  3278  0064A2  5173               	movf	(sprintf@f+3)& (0+255),w,b
  3279  0064A4  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
  3280  0064A6  6EDA               	movwf	fsr2h,c
  3281  0064A8  0E00               	movlw	0
  3282  0064AA  6EDF               	movwf	indf2,c
  3283  0064AC                     
  3284                           ; BSR set to: 0
  3285  0064AC  0012               	return		;funcret
  3286  0064AE                     __end_of_sprintf:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _vfprintf *****************
  3290 ;; Defined at:
  3291 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3294 ;;		 -> sprintf@f(6), 
  3295 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3296 ;;		 -> STR_37(4), STR_36(4), STR_35(10), STR_34(9), 
  3297 ;;		 -> STR_33(3), STR_32(4), STR_31(9), STR_30(4), 
  3298 ;;		 -> STR_29(4), STR_24(3), STR_22(3), STR_19(3), 
  3299 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3300 ;;		 -> sprintf@ap(2), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  3303 ;;		 -> STR_37(4), STR_36(4), STR_35(10), STR_34(9), 
  3304 ;;		 -> STR_33(3), STR_32(4), STR_31(9), STR_30(4), 
  3305 ;;		 -> STR_29(4), STR_24(3), STR_22(3), STR_19(3), 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2    0[BANK0 ] int 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3315 ;;      Params:         0       6       0       0       0       0       0       0       0
  3316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3318 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3319 ;;Total ram usage:        8 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    6
  3322 ;; This function calls:
  3323 ;;		_vfpfcnvrt
  3324 ;; This function is called by:
  3325 ;;		_sprintf
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text6
  3330  0065C4                     __ptext6:
  3331                           	callstack 0
  3332  0065C4                     _vfprintf:
  3333                           	callstack 23
  3334  0065C4                     
  3335                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3336  0065C4  C062  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  3337  0065C8  C063  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3338  0065CC                     
  3339                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3340  0065CC  0E00               	movlw	0
  3341  0065CE  0101               	movlb	1	; () banked
  3342  0065D0  6F07               	movwf	(_nout+1)& (0+255),b
  3343  0065D2  0E00               	movlw	0
  3344  0065D4  6F06               	movwf	_nout& (0+255),b
  3345                           
  3346                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3347  0065D6  EF00  F033         	goto	l2843
  3348  0065DA                     l2841:
  3349                           
  3350                           ; BSR set to: 1
  3351                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3352  0065DA  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3353  0065DE  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3354  0065E2  0E5E               	movlw	low vfprintf@cfmt
  3355  0065E4  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3356  0065E6  0E00               	movlw	high vfprintf@cfmt
  3357  0065E8  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3358  0065EA  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3359  0065EE  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3360  0065F2  ECE4  F036         	call	_vfpfcnvrt	;wreg free
  3361  0065F6  5043               	movf	?_vfpfcnvrt^0,w,c
  3362  0065F8  0101               	movlb	1	; () banked
  3363  0065FA  2706               	addwf	_nout& (0+255),f,b
  3364  0065FC  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3365  0065FE  2307               	addwfc	(_nout+1)& (0+255),f,b
  3366  006600                     l2843:
  3367                           
  3368                           ; BSR set to: 1
  3369                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3370  006600  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3371  006604  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3372  006608                     	if	0	;tblptru may be non-zero
  3373  006608                     	endif
  3374  006608                     	if	0	;tblptru may be non-zero
  3375  006608                     	endif
  3376  006608  0008               	tblrd		*
  3377  00660A  50F5               	movf	tablat,w,c
  3378  00660C  0900               	iorlw	0
  3379  00660E  A4D8               	btfss	status,2,c
  3380  006610  EF0C  F033         	goto	u2471
  3381  006614  EF0E  F033         	goto	u2470
  3382  006618                     u2471:
  3383  006618  EFED  F032         	goto	l2841
  3384  00661C                     u2470:
  3385  00661C                     
  3386                           ; BSR set to: 1
  3387                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3388  00661C  C106  F060         	movff	_nout,?_vfprintf
  3389  006620  C107  F061         	movff	_nout+1,?_vfprintf+1
  3390  006624                     
  3391                           ; BSR set to: 1
  3392  006624  0012               	return		;funcret
  3393  006626                     __end_of_vfprintf:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _vfpfcnvrt *****************
  3397 ;; Defined at:
  3398 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3401 ;;		 -> sprintf@f(6), 
  3402 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3403 ;;		 -> vfprintf@cfmt(2), 
  3404 ;;  ap              2   70[COMRAM] PTR PTR void 
  3405 ;;		 -> sprintf@ap(2), 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;  llu             8   84[COMRAM] unsigned long long 
  3408 ;;  ll              8   76[COMRAM] long long 
  3409 ;;  f               4    0        long long 
  3410 ;;  vp              3    0        PTR void 
  3411 ;;  ct              3    0        unsigned char [3]
  3412 ;;  cp              3    0        PTR unsigned char 
  3413 ;;  i               2    0        int 
  3414 ;;  done            2    0        int 
  3415 ;;  c               1   92[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  2   66[COMRAM] int 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3425 ;;      Params:         6       0       0       0       0       0       0       0       0
  3426 ;;      Locals:        17       0       0       0       0       0       0       0       0
  3427 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3428 ;;      Totals:        27       0       0       0       0       0       0       0       0
  3429 ;;Total ram usage:       27 bytes
  3430 ;; Hardware stack levels used:    1
  3431 ;; Hardware stack levels required when called:    5
  3432 ;; This function calls:
  3433 ;;		_dtoa
  3434 ;;		_fputc
  3435 ;;		_xtoa
  3436 ;; This function is called by:
  3437 ;;		_vfprintf
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text7
  3442  006DC8                     __ptext7:
  3443                           	callstack 0
  3444  006DC8                     _vfpfcnvrt:
  3445                           	callstack 23
  3446  006DC8                     
  3447                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3448  006DC8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3449  006DCC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3450  006DD0  CFDE FFF6          	movff	postinc2,tblptrl
  3451  006DD4  CFDD FFF7          	movff	postdec2,tblptrh
  3452  006DD8                     	if	0	;tblptru may be non-zero
  3453  006DD8                     	endif
  3454  006DD8                     	if	0	;tblptru may be non-zero
  3455  006DD8                     	endif
  3456  006DD8  0008               	tblrd		*
  3457  006DDA  50F5               	movf	tablat,w,c
  3458  006DDC  0A25               	xorlw	37
  3459  006DDE  A4D8               	btfss	status,2,c
  3460  006DE0  EFF4  F036         	goto	u2311
  3461  006DE4  EFF6  F036         	goto	u2310
  3462  006DE8                     u2311:
  3463  006DE8  EF15  F038         	goto	l2767
  3464  006DEC                     u2310:
  3465  006DEC                     
  3466                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3467  006DEC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3468  006DF0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3469  006DF4  2ADE               	incf	postinc2,f,c
  3470  006DF6  0E00               	movlw	0
  3471  006DF8  22DD               	addwfc	postdec2,f,c
  3472  006DFA                     
  3473                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3474  006DFA  0E00               	movlw	0
  3475  006DFC  0101               	movlb	1	; () banked
  3476  006DFE  6F09               	movwf	(_width+1)& (0+255),b
  3477  006E00  0E00               	movlw	0
  3478  006E02  6F08               	movwf	_width& (0+255),b
  3479  006E04  C108  F0F2         	movff	_width,_flags
  3480  006E08  C109  F0F3         	movff	_width+1,_flags+1
  3481  006E0C                     
  3482                           ; BSR set to: 1
  3483                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3484  006E0C  0100               	movlb	0	; () banked
  3485  006E0E  69F0               	setf	_prec& (0+255),b
  3486  006E10  69F1               	setf	(_prec+1)& (0+255),b
  3487  006E12                     
  3488                           ; BSR set to: 0
  3489                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3490  006E12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3491  006E16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3492  006E1A  CFDE FFF6          	movff	postinc2,tblptrl
  3493  006E1E  CFDD FFF7          	movff	postdec2,tblptrh
  3494  006E22                     	if	0	;tblptru may be non-zero
  3495  006E22                     	endif
  3496  006E22                     	if	0	;tblptru may be non-zero
  3497  006E22                     	endif
  3498  006E22  0008               	tblrd		*
  3499  006E24  50F5               	movf	tablat,w,c
  3500  006E26  0A64               	xorlw	100
  3501  006E28  B4D8               	btfsc	status,2,c
  3502  006E2A  EF19  F037         	goto	u2321
  3503  006E2E  EF1B  F037         	goto	u2320
  3504  006E32                     u2321:
  3505  006E32  EF2D  F037         	goto	l2731
  3506  006E36                     u2320:
  3507  006E36                     
  3508                           ; BSR set to: 0
  3509  006E36  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3510  006E3A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3511  006E3E  CFDE FFF6          	movff	postinc2,tblptrl
  3512  006E42  CFDD FFF7          	movff	postdec2,tblptrh
  3513  006E46                     	if	0	;tblptru may be non-zero
  3514  006E46                     	endif
  3515  006E46                     	if	0	;tblptru may be non-zero
  3516  006E46                     	endif
  3517  006E46  0008               	tblrd		*
  3518  006E48  50F5               	movf	tablat,w,c
  3519  006E4A  0A69               	xorlw	105
  3520  006E4C  A4D8               	btfss	status,2,c
  3521  006E4E  EF2B  F037         	goto	u2331
  3522  006E52  EF2D  F037         	goto	u2330
  3523  006E56                     u2331:
  3524  006E56  EF6D  F037         	goto	l2737
  3525  006E5A                     u2330:
  3526  006E5A                     l2731:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3530  006E5A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3531  006E5E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3532  006E62  2ADE               	incf	postinc2,f,c
  3533  006E64  0E00               	movlw	0
  3534  006E66  22DD               	addwfc	postdec2,f,c
  3535                           
  3536                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3537  006E68  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3538  006E6C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3539  006E70  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3540  006E74  0E02               	movlw	2
  3541  006E76  26DE               	addwf	postinc2,f,c
  3542  006E78  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3543  006E7C  0E00               	movlw	0
  3544  006E7E  22DD               	addwfc	postdec2,f,c
  3545  006E80  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3546  006E84  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3547  006E88  CFDE F04D          	movff	postinc2,vfpfcnvrt@ll
  3548  006E8C  CFDD F04E          	movff	postdec2,vfpfcnvrt@ll+1
  3549  006E90  0E00               	movlw	0
  3550  006E92  BE4E               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3551  006E94  0EFF               	movlw	-1
  3552  006E96  6E4F               	movwf	(vfpfcnvrt@ll+2)^0,c
  3553  006E98  6E50               	movwf	(vfpfcnvrt@ll+3)^0,c
  3554  006E9A  6E51               	movwf	(vfpfcnvrt@ll+4)^0,c
  3555  006E9C  6E52               	movwf	(vfpfcnvrt@ll+5)^0,c
  3556  006E9E  6E53               	movwf	(vfpfcnvrt@ll+6)^0,c
  3557  006EA0  6E54               	movwf	(vfpfcnvrt@ll+7)^0,c
  3558  006EA2                     
  3559                           ; BSR set to: 0
  3560                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3561  006EA2  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3562  006EA6  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3563  006EAA  C04D  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3564  006EAE  C04E  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3565  006EB2  C04F  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3566  006EB6  C050  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3567  006EBA  C051  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3568  006EBE  C052  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3569  006EC2  C053  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3570  006EC6  C054  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3571  006ECA  EC0C  F03B         	call	_dtoa	;wreg free
  3572  006ECE  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3573  006ED2  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3574  006ED6  EF30  F038         	goto	l1244
  3575  006EDA                     l2737:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3579  006EDA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3580  006EDE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3581  006EE2  CFDE FFF6          	movff	postinc2,tblptrl
  3582  006EE6  CFDD FFF7          	movff	postdec2,tblptrh
  3583  006EEA                     	if	0	;tblptru may be non-zero
  3584  006EEA                     	endif
  3585  006EEA                     	if	0	;tblptru may be non-zero
  3586  006EEA                     	endif
  3587  006EEA  0008               	tblrd		*
  3588  006EEC  50F5               	movf	tablat,w,c
  3589  006EEE  0A78               	xorlw	120
  3590  006EF0  B4D8               	btfsc	status,2,c
  3591  006EF2  EF7D  F037         	goto	u2341
  3592  006EF6  EF7F  F037         	goto	u2340
  3593  006EFA                     u2341:
  3594  006EFA  EF91  F037         	goto	l2741
  3595  006EFE                     u2340:
  3596  006EFE                     
  3597                           ; BSR set to: 0
  3598  006EFE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3599  006F02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3600  006F06  CFDE FFF6          	movff	postinc2,tblptrl
  3601  006F0A  CFDD FFF7          	movff	postdec2,tblptrh
  3602  006F0E                     	if	0	;tblptru may be non-zero
  3603  006F0E                     	endif
  3604  006F0E                     	if	0	;tblptru may be non-zero
  3605  006F0E                     	endif
  3606  006F0E  0008               	tblrd		*
  3607  006F10  50F5               	movf	tablat,w,c
  3608  006F12  0A58               	xorlw	88
  3609  006F14  A4D8               	btfss	status,2,c
  3610  006F16  EF8F  F037         	goto	u2351
  3611  006F1A  EF91  F037         	goto	u2350
  3612  006F1E                     u2351:
  3613  006F1E  EFDF  F037         	goto	l2751
  3614  006F22                     u2350:
  3615  006F22                     l2741:
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  3619  006F22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3620  006F26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3621  006F2A  CFDE FFF6          	movff	postinc2,tblptrl
  3622  006F2E  CFDD FFF7          	movff	postdec2,tblptrh
  3623  006F32                     	if	0	;tblptru may be non-zero
  3624  006F32                     	endif
  3625  006F32                     	if	0	;tblptru may be non-zero
  3626  006F32                     	endif
  3627  006F32  0008               	tblrd		*
  3628  006F34  CFF5 F05D          	movff	tablat,vfpfcnvrt@c
  3629  006F38                     
  3630                           ; BSR set to: 0
  3631                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  3632  006F38  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3633  006F3C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3634  006F40  2ADE               	incf	postinc2,f,c
  3635  006F42  0E00               	movlw	0
  3636  006F44  22DD               	addwfc	postdec2,f,c
  3637  006F46                     
  3638                           ; BSR set to: 0
  3639                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3640  006F46  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3641  006F4A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3642  006F4E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3643  006F52  0E02               	movlw	2
  3644  006F54  26DE               	addwf	postinc2,f,c
  3645  006F56  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3646  006F5A  0E00               	movlw	0
  3647  006F5C  22DD               	addwfc	postdec2,f,c
  3648  006F5E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3649  006F62  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3650  006F66  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3651  006F6A  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3652  006F6E  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3653  006F72  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3654  006F76  6A57               	clrf	(vfpfcnvrt@llu+2)^0,c
  3655  006F78  6A58               	clrf	(vfpfcnvrt@llu+3)^0,c
  3656  006F7A  6A59               	clrf	(vfpfcnvrt@llu+4)^0,c
  3657  006F7C  6A5A               	clrf	(vfpfcnvrt@llu+5)^0,c
  3658  006F7E  6A5B               	clrf	(vfpfcnvrt@llu+6)^0,c
  3659  006F80  6A5C               	clrf	(vfpfcnvrt@llu+7)^0,c
  3660  006F82                     
  3661                           ; BSR set to: 0
  3662                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  3663  006F82  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3664  006F86  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3665  006F8A  C055  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3666  006F8E  C056  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3667  006F92  C057  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3668  006F96  C058  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3669  006F9A  C059  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3670  006F9E  C05A  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3671  006FA2  C05B  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3672  006FA6  C05C  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3673  006FAA  C05D  F026         	movff	vfpfcnvrt@c,xtoa@x
  3674  006FAE  EC31  F038         	call	_xtoa	;wreg free
  3675  006FB2  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3676  006FB6  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3677  006FBA  EF30  F038         	goto	l1244
  3678  006FBE                     l2751:
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3682  006FBE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3683  006FC2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3684  006FC6  CFDE FFF6          	movff	postinc2,tblptrl
  3685  006FCA  CFDD FFF7          	movff	postdec2,tblptrh
  3686  006FCE                     	if	0	;tblptru may be non-zero
  3687  006FCE                     	endif
  3688  006FCE                     	if	0	;tblptru may be non-zero
  3689  006FCE                     	endif
  3690  006FCE  0008               	tblrd		*
  3691  006FD0  50F5               	movf	tablat,w,c
  3692  006FD2  0A25               	xorlw	37
  3693  006FD4  A4D8               	btfss	status,2,c
  3694  006FD6  EFEF  F037         	goto	u2361
  3695  006FDA  EFF1  F037         	goto	u2360
  3696  006FDE                     u2361:
  3697  006FDE  EF08  F038         	goto	l2761
  3698  006FE2                     u2360:
  3699  006FE2                     
  3700                           ; BSR set to: 0
  3701                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3702  006FE2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3703  006FE6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3704  006FEA  2ADE               	incf	postinc2,f,c
  3705  006FEC  0E00               	movlw	0
  3706  006FEE  22DD               	addwfc	postdec2,f,c
  3707  006FF0                     
  3708                           ; BSR set to: 0
  3709                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3710  006FF0  0E00               	movlw	0
  3711  006FF2  6E02               	movwf	(fputc@c+1)^0,c
  3712  006FF4  0E25               	movlw	37
  3713  006FF6  6E01               	movwf	fputc@c^0,c
  3714  006FF8  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3715  006FFC  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3716  007000  ECF5  F033         	call	_fputc	;wreg free
  3717  007004                     l2757:
  3718                           
  3719                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3720  007004  0E00               	movlw	0
  3721  007006  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3722  007008  0E01               	movlw	1
  3723  00700A  6E43               	movwf	?_vfpfcnvrt^0,c
  3724  00700C  EF30  F038         	goto	l1244
  3725  007010                     l2761:
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3729  007010  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3730  007014  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3731  007018  2ADE               	incf	postinc2,f,c
  3732  00701A  0E00               	movlw	0
  3733  00701C  22DD               	addwfc	postdec2,f,c
  3734  00701E                     
  3735                           ; BSR set to: 0
  3736                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3737  00701E  0E00               	movlw	0
  3738  007020  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3739  007022  0E00               	movlw	0
  3740  007024  6E43               	movwf	?_vfpfcnvrt^0,c
  3741  007026  EF30  F038         	goto	l1244
  3742  00702A                     l2767:
  3743                           
  3744                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3745  00702A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  00702E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  007032  CFDE FFF6          	movff	postinc2,tblptrl
  3748  007036  CFDD FFF7          	movff	postdec2,tblptrh
  3749  00703A                     	if	0	;tblptru may be non-zero
  3750  00703A                     	endif
  3751  00703A                     	if	0	;tblptru may be non-zero
  3752  00703A                     	endif
  3753  00703A  0008               	tblrd		*
  3754  00703C  50F5               	movf	tablat,w,c
  3755  00703E  6E01               	movwf	fputc@c^0,c
  3756  007040  6A02               	clrf	(fputc@c+1)^0,c
  3757  007042  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3758  007046  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3759  00704A  ECF5  F033         	call	_fputc	;wreg free
  3760  00704E                     
  3761                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3762  00704E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3763  007052  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3764  007056  2ADE               	incf	postinc2,f,c
  3765  007058  0E00               	movlw	0
  3766  00705A  22DD               	addwfc	postdec2,f,c
  3767  00705C  EF02  F038         	goto	l2757
  3768  007060                     l1244:
  3769  007060  0012               	return		;funcret
  3770  007062                     __end_of_vfpfcnvrt:
  3771                           	callstack 0
  3772                           
  3773 ;; *************** function _xtoa *****************
  3774 ;; Defined at:
  3775 ;;		line 645 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3778 ;;		 -> sprintf@f(6), 
  3779 ;;  d               8   29[COMRAM] unsigned long long 
  3780 ;;  x               1   37[COMRAM] unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  n               8   54[COMRAM] unsigned long long 
  3783 ;;  c               2   64[COMRAM] int 
  3784 ;;  i               2   62[COMRAM] int 
  3785 ;;  w               2   52[COMRAM] int 
  3786 ;;  p               2   50[COMRAM] int 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  2   27[COMRAM] int 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:        11       0       0       0       0       0       0       0       0
  3797 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3798 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3799 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3800 ;;Total ram usage:       39 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    4
  3803 ;; This function calls:
  3804 ;;		_isalpha
  3805 ;;		_isupper
  3806 ;;		_pad
  3807 ;;		_toupper
  3808 ;; This function is called by:
  3809 ;;		_vfpfcnvrt
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text8
  3814  007062                     __ptext8:
  3815                           	callstack 0
  3816  007062                     _xtoa:
  3817                           	callstack 23
  3818  007062                     
  3819                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);D:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;D:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;D:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3820  007062  0100               	movlb	0	; () banked
  3821  007064  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3822  007066  EF37  F038         	goto	u2111
  3823  00706A  EF39  F038         	goto	u2110
  3824  00706E                     u2111:
  3825  00706E  EF3A  F038         	goto	l2617
  3826  007072                     u2110:
  3827  007072                     
  3828                           ; BSR set to: 0
  3829                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3830  007072  93F2               	bcf	_flags& (0+255),1,b
  3831  007074                     l2617:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3835  007074  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  3836  007076  EF47  F038         	goto	u2120
  3837  00707A  51F1               	movf	(_prec+1)& (0+255),w,b
  3838  00707C  E106               	bnz	u2121
  3839  00707E  05F0               	decf	_prec& (0+255),w,b
  3840  007080  B0D8               	btfsc	status,0,c
  3841  007082  EF45  F038         	goto	u2121
  3842  007086  EF47  F038         	goto	u2120
  3843  00708A                     u2121:
  3844  00708A  EF4D  F038         	goto	l1212
  3845  00708E                     u2120:
  3846  00708E                     
  3847                           ; BSR set to: 0
  3848  00708E  0E00               	movlw	0
  3849  007090  6E34               	movwf	(xtoa@p+1)^0,c
  3850  007092  0E01               	movlw	1
  3851  007094  6E33               	movwf	xtoa@p^0,c
  3852  007096  EF51  F038         	goto	l1214
  3853  00709A                     l1212:
  3854                           
  3855                           ; BSR set to: 0
  3856  00709A  C0F0  F033         	movff	_prec,xtoa@p
  3857  00709E  C0F1  F034         	movff	_prec+1,xtoa@p+1
  3858  0070A2                     l1214:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3862  0070A2  C108  F035         	movff	_width,xtoa@w
  3863  0070A6  C109  F036         	movff	_width+1,xtoa@w+1
  3864                           
  3865                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3866  0070AA  A9F2               	btfss	_flags& (0+255),4,b
  3867  0070AC  EF5A  F038         	goto	u2131
  3868  0070B0  EF5C  F038         	goto	u2130
  3869  0070B4                     u2131:
  3870  0070B4  EF60  F038         	goto	l2623
  3871  0070B8                     u2130:
  3872  0070B8                     
  3873                           ; BSR set to: 0
  3874                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3875  0070B8  0EFE               	movlw	254
  3876  0070BA  2635               	addwf	xtoa@w^0,f,c
  3877  0070BC  0EFF               	movlw	255
  3878  0070BE  2236               	addwfc	(xtoa@w+1)^0,f,c
  3879  0070C0                     l2623:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3883  0070C0  C01E  F037         	movff	xtoa@d,xtoa@n
  3884  0070C4  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3885  0070C8  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3886  0070CC  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3887  0070D0  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3888  0070D4  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3889  0070D8  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3890  0070DC  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3891  0070E0                     
  3892                           ; BSR set to: 0
  3893                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3894  0070E0  0E00               	movlw	0
  3895  0070E2  6E40               	movwf	(xtoa@i+1)^0,c
  3896  0070E4  0E1F               	movlw	31
  3897  0070E6  6E3F               	movwf	xtoa@i^0,c
  3898  0070E8                     
  3899                           ; BSR set to: 0
  3900                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3901  0070E8  0E00               	movlw	0
  3902  0070EA  0101               	movlb	1	; () banked
  3903  0070EC  6F31               	movwf	(_dbuf+31)& (0+255),b
  3904                           
  3905                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3906  0070EE  EF2C  F039         	goto	l2659
  3907  0070F2                     l2629:
  3908                           
  3909                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
  3910  0070F2  063F               	decf	xtoa@i^0,f,c
  3911  0070F4  A0D8               	btfss	status,0,c
  3912  0070F6  0640               	decf	(xtoa@i+1)^0,f,c
  3913  0070F8                     
  3914                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3915  0070F8  0E0F               	movlw	15
  3916  0070FA  1437               	andwf	xtoa@n^0,w,c
  3917  0070FC  6E41               	movwf	xtoa@c^0,c
  3918  0070FE  6A42               	clrf	(xtoa@c+1)^0,c
  3919  007100                     
  3920                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3921  007100  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3922  007102  EF8C  F038         	goto	u2141
  3923  007106  5042               	movf	(xtoa@c+1)^0,w,c
  3924  007108  E109               	bnz	u2140
  3925  00710A  0E0A               	movlw	10
  3926  00710C  5C41               	subwf	xtoa@c^0,w,c
  3927  00710E  A0D8               	btfss	status,0,c
  3928  007110  EF8C  F038         	goto	u2141
  3929  007114  EF8E  F038         	goto	u2140
  3930  007118                     u2141:
  3931  007118  EF96  F038         	goto	l2637
  3932  00711C                     u2140:
  3933  00711C  0E57               	movlw	87
  3934  00711E  2441               	addwf	xtoa@c^0,w,c
  3935  007120  6E41               	movwf	xtoa@c^0,c
  3936  007122  0E00               	movlw	0
  3937  007124  2042               	addwfc	(xtoa@c+1)^0,w,c
  3938  007126  6E42               	movwf	(xtoa@c+1)^0,c
  3939  007128  EF9C  F038         	goto	l1221
  3940  00712C                     l2637:
  3941  00712C  0E30               	movlw	48
  3942  00712E  2441               	addwf	xtoa@c^0,w,c
  3943  007130  6E41               	movwf	xtoa@c^0,c
  3944  007132  0E00               	movlw	0
  3945  007134  2042               	addwfc	(xtoa@c+1)^0,w,c
  3946  007136  6E42               	movwf	(xtoa@c+1)^0,c
  3947  007138                     l1221:
  3948  007138  0EBF               	movlw	191
  3949  00713A  6E27               	movwf	??_xtoa^0,c
  3950  00713C  0EFF               	movlw	255
  3951  00713E  6E28               	movwf	(??_xtoa+1)^0,c
  3952  007140  5026               	movf	xtoa@x^0,w,c
  3953  007142  6E29               	movwf	(??_xtoa+2)^0,c
  3954  007144  6A2A               	clrf	(??_xtoa+3)^0,c
  3955  007146  5027               	movf	??_xtoa^0,w,c
  3956  007148  2629               	addwf	(??_xtoa+2)^0,f,c
  3957  00714A  5028               	movf	(??_xtoa+1)^0,w,c
  3958  00714C  222A               	addwfc	(??_xtoa+3)^0,f,c
  3959  00714E  502A               	movf	(??_xtoa+3)^0,w,c
  3960  007150  E10A               	bnz	u2150
  3961  007152  0E1A               	movlw	26
  3962  007154  5C29               	subwf	(??_xtoa+2)^0,w,c
  3963  007156  A0D8               	btfss	status,0,c
  3964  007158  EFB0  F038         	goto	u2151
  3965  00715C  EFB3  F038         	goto	u2150
  3966  007160                     u2151:
  3967  007160  0E01               	movlw	1
  3968  007162  EFB4  F038         	goto	u2160
  3969  007166                     u2150:
  3970  007166  0E00               	movlw	0
  3971  007168                     u2160:
  3972  007168  6E2F               	movwf	_xtoa$1188^0,c
  3973  00716A  6A30               	clrf	(_xtoa$1188+1)^0,c
  3974  00716C  502F               	movf	_xtoa$1188^0,w,c
  3975  00716E  1030               	iorwf	(_xtoa$1188+1)^0,w,c
  3976  007170  B4D8               	btfsc	status,2,c
  3977  007172  EFBD  F038         	goto	u2171
  3978  007176  EFBF  F038         	goto	u2170
  3979  00717A                     u2171:
  3980  00717A  EFEF  F038         	goto	l2651
  3981  00717E                     u2170:
  3982  00717E  0E9F               	movlw	159
  3983  007180  6E27               	movwf	??_xtoa^0,c
  3984  007182  0EFF               	movlw	255
  3985  007184  6E28               	movwf	(??_xtoa+1)^0,c
  3986  007186  0E20               	movlw	32
  3987  007188  1041               	iorwf	xtoa@c^0,w,c
  3988  00718A  6E29               	movwf	(??_xtoa+2)^0,c
  3989  00718C  0E00               	movlw	0
  3990  00718E  1042               	iorwf	(xtoa@c+1)^0,w,c
  3991  007190  6E2A               	movwf	(??_xtoa+3)^0,c
  3992  007192  5027               	movf	??_xtoa^0,w,c
  3993  007194  2629               	addwf	(??_xtoa+2)^0,f,c
  3994  007196  5028               	movf	(??_xtoa+1)^0,w,c
  3995  007198  222A               	addwfc	(??_xtoa+3)^0,f,c
  3996  00719A  502A               	movf	(??_xtoa+3)^0,w,c
  3997  00719C  E10A               	bnz	u2180
  3998  00719E  0E1A               	movlw	26
  3999  0071A0  5C29               	subwf	(??_xtoa+2)^0,w,c
  4000  0071A2  A0D8               	btfss	status,0,c
  4001  0071A4  EFD6  F038         	goto	u2181
  4002  0071A8  EFD9  F038         	goto	u2180
  4003  0071AC                     u2181:
  4004  0071AC  0E01               	movlw	1
  4005  0071AE  EFDA  F038         	goto	u2190
  4006  0071B2                     u2180:
  4007  0071B2  0E00               	movlw	0
  4008  0071B4                     u2190:
  4009  0071B4  6E31               	movwf	_xtoa$1189^0,c
  4010  0071B6  6A32               	clrf	(_xtoa$1189+1)^0,c
  4011  0071B8  5031               	movf	_xtoa$1189^0,w,c
  4012  0071BA  1032               	iorwf	(_xtoa$1189+1)^0,w,c
  4013  0071BC  B4D8               	btfsc	status,2,c
  4014  0071BE  EFE3  F038         	goto	u2201
  4015  0071C2  EFE5  F038         	goto	u2200
  4016  0071C6                     u2201:
  4017  0071C6  EFEF  F038         	goto	l2651
  4018  0071CA                     u2200:
  4019  0071CA                     
  4020                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4021  0071CA  C041  F007         	movff	xtoa@c,toupper@c
  4022  0071CE  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4023  0071D2  ECB3  F032         	call	_toupper	;wreg free
  4024  0071D6  C007  F041         	movff	?_toupper,xtoa@c
  4025  0071DA  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4026  0071DE                     l2651:
  4027                           
  4028                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4029  0071DE  0E12               	movlw	low _dbuf
  4030  0071E0  243F               	addwf	xtoa@i^0,w,c
  4031  0071E2  6ED9               	movwf	fsr2l,c
  4032  0071E4  0E01               	movlw	high _dbuf
  4033  0071E6  2040               	addwfc	(xtoa@i+1)^0,w,c
  4034  0071E8  6EDA               	movwf	fsr2h,c
  4035  0071EA  C041  FFDF         	movff	xtoa@c,indf2
  4036  0071EE                     
  4037                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
  4038  0071EE  0633               	decf	xtoa@p^0,f,c
  4039  0071F0  A0D8               	btfss	status,0,c
  4040  0071F2  0634               	decf	(xtoa@p+1)^0,f,c
  4041  0071F4                     
  4042                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
  4043  0071F4  0635               	decf	xtoa@w^0,f,c
  4044  0071F6  A0D8               	btfss	status,0,c
  4045  0071F8  0636               	decf	(xtoa@w+1)^0,f,c
  4046  0071FA                     
  4047                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4048  0071FA  C037  F027         	movff	xtoa@n,??_xtoa
  4049  0071FE  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4050  007202  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4051  007206  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4052  00720A  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4053  00720E  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4054  007212  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4055  007216  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4056  00721A  0E05               	movlw	5
  4057  00721C  EF19  F039         	goto	u2210
  4058  007220                     u2215:
  4059  007220  90D8               	bcf	status,0,c
  4060  007222  322E               	rrcf	(??_xtoa+7)^0,f,c
  4061  007224  322D               	rrcf	(??_xtoa+6)^0,f,c
  4062  007226  322C               	rrcf	(??_xtoa+5)^0,f,c
  4063  007228  322B               	rrcf	(??_xtoa+4)^0,f,c
  4064  00722A  322A               	rrcf	(??_xtoa+3)^0,f,c
  4065  00722C  3229               	rrcf	(??_xtoa+2)^0,f,c
  4066  00722E  3228               	rrcf	(??_xtoa+1)^0,f,c
  4067  007230  3227               	rrcf	??_xtoa^0,f,c
  4068  007232                     u2210:
  4069  007232  2EE8               	decfsz	wreg,f,c
  4070  007234  EF10  F039         	goto	u2215
  4071  007238  C027  F037         	movff	??_xtoa,xtoa@n
  4072  00723C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4073  007240  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4074  007244  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4075  007248  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4076  00724C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4077  007250  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4078  007254  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4079  007258                     l2659:
  4080                           
  4081                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4082  007258  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4083  00725A  EF38  F039         	goto	u2221
  4084  00725E  5040               	movf	(xtoa@i+1)^0,w,c
  4085  007260  E109               	bnz	u2220
  4086  007262  0E02               	movlw	2
  4087  007264  5C3F               	subwf	xtoa@i^0,w,c
  4088  007266  A0D8               	btfss	status,0,c
  4089  007268  EF38  F039         	goto	u2221
  4090  00726C  EF3A  F039         	goto	u2220
  4091  007270                     u2221:
  4092  007270  EF6B  F039         	goto	l1235
  4093  007274                     u2220:
  4094  007274  5037               	movf	xtoa@n^0,w,c
  4095  007276  1038               	iorwf	(xtoa@n+1)^0,w,c
  4096  007278  1039               	iorwf	(xtoa@n+2)^0,w,c
  4097  00727A  103A               	iorwf	(xtoa@n+3)^0,w,c
  4098  00727C  103B               	iorwf	(xtoa@n+4)^0,w,c
  4099  00727E  103C               	iorwf	(xtoa@n+5)^0,w,c
  4100  007280  103D               	iorwf	(xtoa@n+6)^0,w,c
  4101  007282  103E               	iorwf	(xtoa@n+7)^0,w,c
  4102  007284  A4D8               	btfss	status,2,c
  4103  007286  EF47  F039         	goto	u2231
  4104  00728A  EF49  F039         	goto	u2230
  4105  00728E                     u2231:
  4106  00728E  EF79  F038         	goto	l2629
  4107  007292                     u2230:
  4108  007292  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4109  007294  EF56  F039         	goto	u2240
  4110  007298  5034               	movf	(xtoa@p+1)^0,w,c
  4111  00729A  E106               	bnz	u2241
  4112  00729C  0433               	decf	xtoa@p^0,w,c
  4113  00729E  B0D8               	btfsc	status,0,c
  4114  0072A0  EF54  F039         	goto	u2241
  4115  0072A4  EF56  F039         	goto	u2240
  4116  0072A8                     u2241:
  4117  0072A8  EF79  F038         	goto	l2629
  4118  0072AC                     u2240:
  4119  0072AC  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4120  0072AE  EF61  F039         	goto	u2251
  4121  0072B2  5036               	movf	(xtoa@w+1)^0,w,c
  4122  0072B4  E108               	bnz	u2250
  4123  0072B6  0435               	decf	xtoa@w^0,w,c
  4124  0072B8  A0D8               	btfss	status,0,c
  4125  0072BA  EF61  F039         	goto	u2251
  4126  0072BE  EF63  F039         	goto	u2250
  4127  0072C2                     u2251:
  4128  0072C2  EF6B  F039         	goto	l1235
  4129  0072C6                     u2250:
  4130  0072C6  0100               	movlb	0	; () banked
  4131  0072C8  B3F2               	btfsc	_flags& (0+255),1,b
  4132  0072CA  EF69  F039         	goto	u2261
  4133  0072CE  EF6B  F039         	goto	u2260
  4134  0072D2                     u2261:
  4135  0072D2  EF79  F038         	goto	l2629
  4136  0072D6                     u2260:
  4137  0072D6                     l1235:
  4138                           
  4139                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4140  0072D6  0100               	movlb	0	; () banked
  4141  0072D8  A9F2               	btfss	_flags& (0+255),4,b
  4142  0072DA  EF71  F039         	goto	u2271
  4143  0072DE  EF73  F039         	goto	u2270
  4144  0072E2                     u2271:
  4145  0072E2  EF89  F039         	goto	l2675
  4146  0072E6                     u2270:
  4147  0072E6                     
  4148                           ; BSR set to: 0
  4149                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
  4150  0072E6  063F               	decf	xtoa@i^0,f,c
  4151  0072E8  A0D8               	btfss	status,0,c
  4152  0072EA  0640               	decf	(xtoa@i+1)^0,f,c
  4153  0072EC                     
  4154                           ; BSR set to: 0
  4155                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4156  0072EC  0E12               	movlw	low _dbuf
  4157  0072EE  243F               	addwf	xtoa@i^0,w,c
  4158  0072F0  6ED9               	movwf	fsr2l,c
  4159  0072F2  0E01               	movlw	high _dbuf
  4160  0072F4  2040               	addwfc	(xtoa@i+1)^0,w,c
  4161  0072F6  6EDA               	movwf	fsr2h,c
  4162  0072F8  C026  FFDF         	movff	xtoa@x,indf2
  4163  0072FC                     
  4164                           ; BSR set to: 0
  4165                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
  4166  0072FC  063F               	decf	xtoa@i^0,f,c
  4167  0072FE  A0D8               	btfss	status,0,c
  4168  007300  0640               	decf	(xtoa@i+1)^0,f,c
  4169                           
  4170                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4171  007302  0E12               	movlw	low _dbuf
  4172  007304  243F               	addwf	xtoa@i^0,w,c
  4173  007306  6ED9               	movwf	fsr2l,c
  4174  007308  0E01               	movlw	high _dbuf
  4175  00730A  2040               	addwfc	(xtoa@i+1)^0,w,c
  4176  00730C  6EDA               	movwf	fsr2h,c
  4177  00730E  0E30               	movlw	48
  4178  007310  6EDF               	movwf	indf2,c
  4179  007312                     l2675:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4183  007312  C01C  F011         	movff	xtoa@fp,pad@fp
  4184  007316  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4185  00731A  0E12               	movlw	low _dbuf
  4186  00731C  243F               	addwf	xtoa@i^0,w,c
  4187  00731E  6E13               	movwf	pad@buf^0,c
  4188  007320  0E01               	movlw	high _dbuf
  4189  007322  2040               	addwfc	(xtoa@i+1)^0,w,c
  4190  007324  6E14               	movwf	(pad@buf+1)^0,c
  4191  007326  C035  F015         	movff	xtoa@w,pad@p
  4192  00732A  C036  F016         	movff	xtoa@w+1,pad@p+1
  4193  00732E  EC92  F033         	call	_pad	;wreg free
  4194  007332  C011  F01C         	movff	?_pad,?_xtoa
  4195  007336  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4196  00733A  0012               	return		;funcret
  4197  00733C                     __end_of_xtoa:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function _toupper *****************
  4201 ;; Defined at:
  4202 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  c               2    6[COMRAM] int 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;		None
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    6[COMRAM] int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4216 ;;      Params:         2       0       0       0       0       0       0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4218 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4219 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4220 ;;Total ram usage:        8 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    1
  4223 ;; This function calls:
  4224 ;;		_islower
  4225 ;; This function is called by:
  4226 ;;		_xtoa
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text9
  4231  006566                     __ptext9:
  4232                           	callstack 0
  4233  006566                     _toupper:
  4234                           	callstack 25
  4235  006566  0E9F               	movlw	159
  4236  006568  6E09               	movwf	??_toupper^0,c
  4237  00656A  0EFF               	movlw	255
  4238  00656C  6E0A               	movwf	(??_toupper+1)^0,c
  4239  00656E  C007  F00B         	movff	toupper@c,??_toupper+2
  4240  006572  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4241  006576  5009               	movf	??_toupper^0,w,c
  4242  006578  260B               	addwf	(??_toupper+2)^0,f,c
  4243  00657A  500A               	movf	(??_toupper+1)^0,w,c
  4244  00657C  220C               	addwfc	(??_toupper+3)^0,f,c
  4245  00657E  500C               	movf	(??_toupper+3)^0,w,c
  4246  006580  E10A               	bnz	u1900
  4247  006582  0E1A               	movlw	26
  4248  006584  5C0B               	subwf	(??_toupper+2)^0,w,c
  4249  006586  A0D8               	btfss	status,0,c
  4250  006588  EFC8  F032         	goto	u1901
  4251  00658C  EFCB  F032         	goto	u1900
  4252  006590                     u1901:
  4253  006590  0E01               	movlw	1
  4254  006592  EFCC  F032         	goto	u1910
  4255  006596                     u1900:
  4256  006596  0E00               	movlw	0
  4257  006598                     u1910:
  4258  006598  6E0D               	movwf	_toupper$1273^0,c
  4259  00659A  6A0E               	clrf	(_toupper$1273+1)^0,c
  4260  00659C  500D               	movf	_toupper$1273^0,w,c
  4261  00659E  100E               	iorwf	(_toupper$1273+1)^0,w,c
  4262  0065A0  B4D8               	btfsc	status,2,c
  4263  0065A2  EFD5  F032         	goto	u1921
  4264  0065A6  EFD7  F032         	goto	u1920
  4265  0065AA                     u1921:
  4266  0065AA  EFDD  F032         	goto	l1307
  4267  0065AE                     u1920:
  4268  0065AE  0E5F               	movlw	95
  4269  0065B0  1407               	andwf	toupper@c^0,w,c
  4270  0065B2  6E07               	movwf	?_toupper^0,c
  4271  0065B4  6A08               	clrf	(?_toupper+1)^0,c
  4272  0065B6  EFE1  F032         	goto	l1312
  4273  0065BA                     l1307:
  4274  0065BA  C007  F007         	movff	toupper@c,?_toupper
  4275  0065BE  C008  F008         	movff	toupper@c+1,?_toupper+1
  4276  0065C2                     l1312:
  4277  0065C2  0012               	return		;funcret
  4278  0065C4                     __end_of_toupper:
  4279                           	callstack 0
  4280                           
  4281 ;; *************** function _islower *****************
  4282 ;; Defined at:
  4283 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  c               2    0[COMRAM] int 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  2    0[COMRAM] int 
  4290 ;; Registers used:
  4291 ;;		wreg, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4297 ;;      Params:         2       0       0       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4299 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4300 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4301 ;;Total ram usage:        6 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_toupper
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text10
  4311  006174                     __ptext10:
  4312                           	callstack 0
  4313  006174                     _islower:
  4314                           	callstack 25
  4315  006174  0E9F               	movlw	159
  4316  006176  6E03               	movwf	??_islower^0,c
  4317  006178  0EFF               	movlw	255
  4318  00617A  6E04               	movwf	(??_islower+1)^0,c
  4319  00617C  C001  F005         	movff	islower@c,??_islower+2
  4320  006180  C002  F006         	movff	islower@c+1,??_islower+3
  4321  006184  5003               	movf	??_islower^0,w,c
  4322  006186  2605               	addwf	(??_islower+2)^0,f,c
  4323  006188  5004               	movf	(??_islower+1)^0,w,c
  4324  00618A  2206               	addwfc	(??_islower+3)^0,f,c
  4325  00618C  5006               	movf	(??_islower+3)^0,w,c
  4326  00618E  E10A               	bnz	u1660
  4327  006190  0E1A               	movlw	26
  4328  006192  5C05               	subwf	(??_islower+2)^0,w,c
  4329  006194  A0D8               	btfss	status,0,c
  4330  006196  EFCF  F030         	goto	u1661
  4331  00619A  EFD2  F030         	goto	u1660
  4332  00619E                     u1661:
  4333  00619E  0E01               	movlw	1
  4334  0061A0  EFD3  F030         	goto	u1670
  4335  0061A4                     u1660:
  4336  0061A4  0E00               	movlw	0
  4337  0061A6                     u1670:
  4338  0061A6  6E01               	movwf	?_islower^0,c
  4339  0061A8  6A02               	clrf	(?_islower+1)^0,c
  4340  0061AA  0012               	return		;funcret
  4341  0061AC                     __end_of_islower:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _isupper *****************
  4345 ;; Defined at:
  4346 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  c               2    0[COMRAM] int 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2    0[COMRAM] int 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4360 ;;      Params:         2       0       0       0       0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4362 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4363 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:        6 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_xtoa
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text11
  4374  00613C                     __ptext11:
  4375                           	callstack 0
  4376  00613C                     _isupper:
  4377                           	callstack 26
  4378  00613C  0EBF               	movlw	191
  4379  00613E  6E03               	movwf	??_isupper^0,c
  4380  006140  0EFF               	movlw	255
  4381  006142  6E04               	movwf	(??_isupper+1)^0,c
  4382  006144  C001  F005         	movff	isupper@c,??_isupper+2
  4383  006148  C002  F006         	movff	isupper@c+1,??_isupper+3
  4384  00614C  5003               	movf	??_isupper^0,w,c
  4385  00614E  2605               	addwf	(??_isupper+2)^0,f,c
  4386  006150  5004               	movf	(??_isupper+1)^0,w,c
  4387  006152  2206               	addwfc	(??_isupper+3)^0,f,c
  4388  006154  5006               	movf	(??_isupper+3)^0,w,c
  4389  006156  E10A               	bnz	u1860
  4390  006158  0E1A               	movlw	26
  4391  00615A  5C05               	subwf	(??_isupper+2)^0,w,c
  4392  00615C  A0D8               	btfss	status,0,c
  4393  00615E  EFB3  F030         	goto	u1861
  4394  006162  EFB6  F030         	goto	u1860
  4395  006166                     u1861:
  4396  006166  0E01               	movlw	1
  4397  006168  EFB7  F030         	goto	u1870
  4398  00616C                     u1860:
  4399  00616C  0E00               	movlw	0
  4400  00616E                     u1870:
  4401  00616E  6E01               	movwf	?_isupper^0,c
  4402  006170  6A02               	clrf	(?_isupper+1)^0,c
  4403  006172  0012               	return		;funcret
  4404  006174                     __end_of_isupper:
  4405                           	callstack 0
  4406                           
  4407 ;; *************** function _isalpha *****************
  4408 ;; Defined at:
  4409 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  c               2    0[COMRAM] int 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  2    0[COMRAM] int 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4423 ;;      Params:         2       0       0       0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4425 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4426 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4427 ;;Total ram usage:        6 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_xtoa
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text12
  4437  0061E6                     __ptext12:
  4438                           	callstack 0
  4439  0061E6                     _isalpha:
  4440                           	callstack 26
  4441  0061E6  0E9F               	movlw	159
  4442  0061E8  6E03               	movwf	??_isalpha^0,c
  4443  0061EA  0EFF               	movlw	255
  4444  0061EC  6E04               	movwf	(??_isalpha+1)^0,c
  4445  0061EE  0E20               	movlw	32
  4446  0061F0  1001               	iorwf	isalpha@c^0,w,c
  4447  0061F2  6E05               	movwf	(??_isalpha+2)^0,c
  4448  0061F4  0E00               	movlw	0
  4449  0061F6  1002               	iorwf	(isalpha@c+1)^0,w,c
  4450  0061F8  6E06               	movwf	(??_isalpha+3)^0,c
  4451  0061FA  5003               	movf	??_isalpha^0,w,c
  4452  0061FC  2605               	addwf	(??_isalpha+2)^0,f,c
  4453  0061FE  5004               	movf	(??_isalpha+1)^0,w,c
  4454  006200  2206               	addwfc	(??_isalpha+3)^0,f,c
  4455  006202  5006               	movf	(??_isalpha+3)^0,w,c
  4456  006204  E10A               	bnz	u1880
  4457  006206  0E1A               	movlw	26
  4458  006208  5C05               	subwf	(??_isalpha+2)^0,w,c
  4459  00620A  A0D8               	btfss	status,0,c
  4460  00620C  EF0A  F031         	goto	u1881
  4461  006210  EF0D  F031         	goto	u1880
  4462  006214                     u1881:
  4463  006214  0E01               	movlw	1
  4464  006216  EF0E  F031         	goto	u1890
  4465  00621A                     u1880:
  4466  00621A  0E00               	movlw	0
  4467  00621C                     u1890:
  4468  00621C  6E01               	movwf	?_isalpha^0,c
  4469  00621E  6A02               	clrf	(?_isalpha+1)^0,c
  4470  006220  0012               	return		;funcret
  4471  006222                     __end_of_isalpha:
  4472                           	callstack 0
  4473                           
  4474 ;; *************** function _dtoa *****************
  4475 ;; Defined at:
  4476 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4479 ;;		 -> sprintf@f(6), 
  4480 ;;  d               8   29[COMRAM] long long 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  n               8   53[COMRAM] long long 
  4483 ;;  i               2   61[COMRAM] int 
  4484 ;;  s               2   51[COMRAM] int 
  4485 ;;  w               2   49[COMRAM] int 
  4486 ;;  p               2   47[COMRAM] int 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  2   27[COMRAM] int 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4496 ;;      Params:        10       0       0       0       0       0       0       0       0
  4497 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4498 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4499 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4500 ;;Total ram usage:       36 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    4
  4503 ;; This function calls:
  4504 ;;		___aodiv
  4505 ;;		___aomod
  4506 ;;		_abs
  4507 ;;		_pad
  4508 ;; This function is called by:
  4509 ;;		_vfpfcnvrt
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text13
  4514  007618                     __ptext13:
  4515                           	callstack 0
  4516  007618                     _dtoa:
  4517                           	callstack 23
  4518  007618                     
  4519                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4520  007618  C01E  F036         	movff	dtoa@d,dtoa@n
  4521  00761C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4522  007620  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4523  007624  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4524  007628  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4525  00762C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4526  007630  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4527  007634  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4528  007638                     
  4529                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4530  007638  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4531  00763A  EF21  F03B         	goto	u1961
  4532  00763E  EF24  F03B         	goto	u1960
  4533  007642                     u1961:
  4534  007642  0E01               	movlw	1
  4535  007644  EF25  F03B         	goto	u1970
  4536  007648                     u1960:
  4537  007648  0E00               	movlw	0
  4538  00764A                     u1970:
  4539  00764A  6E34               	movwf	dtoa@s^0,c
  4540  00764C  6A35               	clrf	(dtoa@s+1)^0,c
  4541                           
  4542                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4543  00764E  5034               	movf	dtoa@s^0,w,c
  4544  007650  1035               	iorwf	(dtoa@s+1)^0,w,c
  4545  007652  B4D8               	btfsc	status,2,c
  4546  007654  EF2E  F03B         	goto	u1981
  4547  007658  EF30  F03B         	goto	u1980
  4548  00765C                     u1981:
  4549  00765C  EF40  F03B         	goto	l2557
  4550  007660                     u1980:
  4551  007660                     
  4552                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4553  007660  1E3D               	comf	(dtoa@n+7)^0,f,c
  4554  007662  1E3C               	comf	(dtoa@n+6)^0,f,c
  4555  007664  1E3B               	comf	(dtoa@n+5)^0,f,c
  4556  007666  1E3A               	comf	(dtoa@n+4)^0,f,c
  4557  007668  1E39               	comf	(dtoa@n+3)^0,f,c
  4558  00766A  1E38               	comf	(dtoa@n+2)^0,f,c
  4559  00766C  1E37               	comf	(dtoa@n+1)^0,f,c
  4560  00766E  6C36               	negf	dtoa@n^0,c
  4561  007670  0E00               	movlw	0
  4562  007672  2237               	addwfc	(dtoa@n+1)^0,f,c
  4563  007674  2238               	addwfc	(dtoa@n+2)^0,f,c
  4564  007676  2239               	addwfc	(dtoa@n+3)^0,f,c
  4565  007678  223A               	addwfc	(dtoa@n+4)^0,f,c
  4566  00767A  223B               	addwfc	(dtoa@n+5)^0,f,c
  4567  00767C  223C               	addwfc	(dtoa@n+6)^0,f,c
  4568  00767E  223D               	addwfc	(dtoa@n+7)^0,f,c
  4569  007680                     l2557:
  4570                           
  4571                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4572  007680  0100               	movlb	0	; () banked
  4573  007682  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  4574  007684  EF46  F03B         	goto	u1991
  4575  007688  EF48  F03B         	goto	u1990
  4576  00768C                     u1991:
  4577  00768C  EF49  F03B         	goto	l2561
  4578  007690                     u1990:
  4579  007690                     
  4580                           ; BSR set to: 0
  4581                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4582  007690  93F2               	bcf	_flags& (0+255),1,b
  4583  007692                     l2561:
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4587  007692  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  4588  007694  EF56  F03B         	goto	u2000
  4589  007698  51F1               	movf	(_prec+1)& (0+255),w,b
  4590  00769A  E106               	bnz	u2001
  4591  00769C  05F0               	decf	_prec& (0+255),w,b
  4592  00769E  B0D8               	btfsc	status,0,c
  4593  0076A0  EF54  F03B         	goto	u2001
  4594  0076A4  EF56  F03B         	goto	u2000
  4595  0076A8                     u2001:
  4596  0076A8  EF5C  F03B         	goto	l1187
  4597  0076AC                     u2000:
  4598  0076AC                     
  4599                           ; BSR set to: 0
  4600  0076AC  0E00               	movlw	0
  4601  0076AE  6E31               	movwf	(dtoa@p+1)^0,c
  4602  0076B0  0E01               	movlw	1
  4603  0076B2  6E30               	movwf	dtoa@p^0,c
  4604  0076B4  EF60  F03B         	goto	l1189
  4605  0076B8                     l1187:
  4606                           
  4607                           ; BSR set to: 0
  4608  0076B8  C0F0  F030         	movff	_prec,dtoa@p
  4609  0076BC  C0F1  F031         	movff	_prec+1,dtoa@p+1
  4610  0076C0                     l1189:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4614  0076C0  C108  F032         	movff	_width,dtoa@w
  4615  0076C4  C109  F033         	movff	_width+1,dtoa@w+1
  4616  0076C8                     
  4617                           ; BSR set to: 0
  4618                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4619  0076C8  5034               	movf	dtoa@s^0,w,c
  4620  0076CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  4621  0076CC  A4D8               	btfss	status,2,c
  4622  0076CE  EF6B  F03B         	goto	u2011
  4623  0076D2  EF6D  F03B         	goto	u2010
  4624  0076D6                     u2011:
  4625  0076D6  EF74  F03B         	goto	l2569
  4626  0076DA                     u2010:
  4627  0076DA                     
  4628                           ; BSR set to: 0
  4629  0076DA  A5F2               	btfss	_flags& (0+255),2,b
  4630  0076DC  EF72  F03B         	goto	u2021
  4631  0076E0  EF74  F03B         	goto	u2020
  4632  0076E4                     u2021:
  4633  0076E4  EF77  F03B         	goto	l2571
  4634  0076E8                     u2020:
  4635  0076E8                     l2569:
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  4639  0076E8  0632               	decf	dtoa@w^0,f,c
  4640  0076EA  A0D8               	btfss	status,0,c
  4641  0076EC  0633               	decf	(dtoa@w+1)^0,f,c
  4642  0076EE                     l2571:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4646  0076EE  0E00               	movlw	0
  4647  0076F0  6E3F               	movwf	(dtoa@i+1)^0,c
  4648  0076F2  0E1F               	movlw	31
  4649  0076F4  6E3E               	movwf	dtoa@i^0,c
  4650  0076F6                     
  4651                           ; BSR set to: 0
  4652                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4653  0076F6  0E00               	movlw	0
  4654  0076F8  0101               	movlb	1	; () banked
  4655  0076FA  6F31               	movwf	(_dbuf+31)& (0+255),b
  4656                           
  4657                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4658  0076FC  EFFC  F03B         	goto	l2585
  4659  007700                     l2575:
  4660                           
  4661                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  4662  007700  063E               	decf	dtoa@i^0,f,c
  4663  007702  A0D8               	btfss	status,0,c
  4664  007704  063F               	decf	(dtoa@i+1)^0,f,c
  4665  007706                     
  4666                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4667  007706  0E12               	movlw	low _dbuf
  4668  007708  243E               	addwf	dtoa@i^0,w,c
  4669  00770A  6ED9               	movwf	fsr2l,c
  4670  00770C  0E01               	movlw	high _dbuf
  4671  00770E  203F               	addwfc	(dtoa@i+1)^0,w,c
  4672  007710  6EDA               	movwf	fsr2h,c
  4673  007712  C036  F001         	movff	dtoa@n,___aomod@dividend
  4674  007716  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4675  00771A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4676  00771E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4677  007722  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4678  007726  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4679  00772A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4680  00772E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4681  007732  0E0A               	movlw	10
  4682  007734  6E09               	movwf	___aomod@divisor^0,c
  4683  007736  0E00               	movlw	0
  4684  007738  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4685  00773A  0E00               	movlw	0
  4686  00773C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4687  00773E  0E00               	movlw	0
  4688  007740  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4689  007742  0E00               	movlw	0
  4690  007744  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4691  007746  0E00               	movlw	0
  4692  007748  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4693  00774A  0E00               	movlw	0
  4694  00774C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4695  00774E  0E00               	movlw	0
  4696  007750  6E10               	movwf	(___aomod@divisor+7)^0,c
  4697  007752  EC5A  F034         	call	___aomod	;wreg free
  4698  007756  C001  F026         	movff	?___aomod,??_dtoa
  4699  00775A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4700  00775E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4701  007762  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4702  007766  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4703  00776A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4704  00776E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4705  007772  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4706  007776  C026  F013         	movff	??_dtoa,abs@a
  4707  00777A  C028  F014         	movff	??_dtoa+2,abs@a+1
  4708  00777E  EC11  F031         	call	_abs	;wreg free
  4709  007782  5013               	movf	?_abs^0,w,c
  4710  007784  0F30               	addlw	48
  4711  007786  6EDF               	movwf	indf2,c
  4712  007788                     
  4713                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  4714  007788  0630               	decf	dtoa@p^0,f,c
  4715  00778A  A0D8               	btfss	status,0,c
  4716  00778C  0631               	decf	(dtoa@p+1)^0,f,c
  4717  00778E                     
  4718                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  4719  00778E  0632               	decf	dtoa@w^0,f,c
  4720  007790  A0D8               	btfss	status,0,c
  4721  007792  0633               	decf	(dtoa@w+1)^0,f,c
  4722  007794                     
  4723                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4724  007794  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4725  007798  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4726  00779C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4727  0077A0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4728  0077A4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4729  0077A8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4730  0077AC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4731  0077B0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4732  0077B4  0E0A               	movlw	10
  4733  0077B6  6E09               	movwf	___aodiv@divisor^0,c
  4734  0077B8  0E00               	movlw	0
  4735  0077BA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4736  0077BC  0E00               	movlw	0
  4737  0077BE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4738  0077C0  0E00               	movlw	0
  4739  0077C2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4740  0077C4  0E00               	movlw	0
  4741  0077C6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4742  0077C8  0E00               	movlw	0
  4743  0077CA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4744  0077CC  0E00               	movlw	0
  4745  0077CE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4746  0077D0  0E00               	movlw	0
  4747  0077D2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4748  0077D4  EC0C  F035         	call	___aodiv	;wreg free
  4749  0077D8  C001  F036         	movff	?___aodiv,dtoa@n
  4750  0077DC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4751  0077E0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4752  0077E4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4753  0077E8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4754  0077EC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4755  0077F0  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4756  0077F4  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4757  0077F8                     l2585:
  4758                           
  4759                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4760  0077F8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4761  0077FA  EF07  F03C         	goto	u2031
  4762  0077FE  503F               	movf	(dtoa@i+1)^0,w,c
  4763  007800  E108               	bnz	u2030
  4764  007802  043E               	decf	dtoa@i^0,w,c
  4765  007804  A0D8               	btfss	status,0,c
  4766  007806  EF07  F03C         	goto	u2031
  4767  00780A  EF09  F03C         	goto	u2030
  4768  00780E                     u2031:
  4769  00780E  EF3A  F03C         	goto	l2595
  4770  007812                     u2030:
  4771  007812  5036               	movf	dtoa@n^0,w,c
  4772  007814  1037               	iorwf	(dtoa@n+1)^0,w,c
  4773  007816  1038               	iorwf	(dtoa@n+2)^0,w,c
  4774  007818  1039               	iorwf	(dtoa@n+3)^0,w,c
  4775  00781A  103A               	iorwf	(dtoa@n+4)^0,w,c
  4776  00781C  103B               	iorwf	(dtoa@n+5)^0,w,c
  4777  00781E  103C               	iorwf	(dtoa@n+6)^0,w,c
  4778  007820  103D               	iorwf	(dtoa@n+7)^0,w,c
  4779  007822  A4D8               	btfss	status,2,c
  4780  007824  EF16  F03C         	goto	u2041
  4781  007828  EF18  F03C         	goto	u2040
  4782  00782C                     u2041:
  4783  00782C  EF80  F03B         	goto	l2575
  4784  007830                     u2040:
  4785  007830  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4786  007832  EF25  F03C         	goto	u2050
  4787  007836  5031               	movf	(dtoa@p+1)^0,w,c
  4788  007838  E106               	bnz	u2051
  4789  00783A  0430               	decf	dtoa@p^0,w,c
  4790  00783C  B0D8               	btfsc	status,0,c
  4791  00783E  EF23  F03C         	goto	u2051
  4792  007842  EF25  F03C         	goto	u2050
  4793  007846                     u2051:
  4794  007846  EF80  F03B         	goto	l2575
  4795  00784A                     u2050:
  4796  00784A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4797  00784C  EF30  F03C         	goto	u2061
  4798  007850  5033               	movf	(dtoa@w+1)^0,w,c
  4799  007852  E108               	bnz	u2060
  4800  007854  0432               	decf	dtoa@w^0,w,c
  4801  007856  A0D8               	btfss	status,0,c
  4802  007858  EF30  F03C         	goto	u2061
  4803  00785C  EF32  F03C         	goto	u2060
  4804  007860                     u2061:
  4805  007860  EF3A  F03C         	goto	l2595
  4806  007864                     u2060:
  4807  007864  0100               	movlb	0	; () banked
  4808  007866  B3F2               	btfsc	_flags& (0+255),1,b
  4809  007868  EF38  F03C         	goto	u2071
  4810  00786C  EF3A  F03C         	goto	u2070
  4811  007870                     u2071:
  4812  007870  EF80  F03B         	goto	l2575
  4813  007874                     u2070:
  4814  007874                     l2595:
  4815                           
  4816                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4817  007874  5034               	movf	dtoa@s^0,w,c
  4818  007876  1035               	iorwf	(dtoa@s+1)^0,w,c
  4819  007878  A4D8               	btfss	status,2,c
  4820  00787A  EF41  F03C         	goto	u2081
  4821  00787E  EF43  F03C         	goto	u2080
  4822  007882                     u2081:
  4823  007882  EF4B  F03C         	goto	l2599
  4824  007886                     u2080:
  4825  007886  0100               	movlb	0	; () banked
  4826  007888  A5F2               	btfss	_flags& (0+255),2,b
  4827  00788A  EF49  F03C         	goto	u2091
  4828  00788E  EF4B  F03C         	goto	u2090
  4829  007892                     u2091:
  4830  007892  EF69  F03C         	goto	l2609
  4831  007896                     u2090:
  4832  007896                     l2599:
  4833                           
  4834                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  4835  007896  063E               	decf	dtoa@i^0,f,c
  4836  007898  A0D8               	btfss	status,0,c
  4837  00789A  063F               	decf	(dtoa@i+1)^0,f,c
  4838  00789C                     
  4839                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4840  00789C  5034               	movf	dtoa@s^0,w,c
  4841  00789E  1035               	iorwf	(dtoa@s+1)^0,w,c
  4842  0078A0  A4D8               	btfss	status,2,c
  4843  0078A2  EF55  F03C         	goto	u2101
  4844  0078A6  EF57  F03C         	goto	u2100
  4845  0078AA                     u2101:
  4846  0078AA  EF5D  F03C         	goto	l2605
  4847  0078AE                     u2100:
  4848  0078AE  0E00               	movlw	0
  4849  0078B0  6E2F               	movwf	(_dtoa$1177+1)^0,c
  4850  0078B2  0E2B               	movlw	43
  4851  0078B4  6E2E               	movwf	_dtoa$1177^0,c
  4852  0078B6  EF61  F03C         	goto	l2607
  4853  0078BA                     l2605:
  4854  0078BA  0E00               	movlw	0
  4855  0078BC  6E2F               	movwf	(_dtoa$1177+1)^0,c
  4856  0078BE  0E2D               	movlw	45
  4857  0078C0  6E2E               	movwf	_dtoa$1177^0,c
  4858  0078C2                     l2607:
  4859  0078C2  0E12               	movlw	low _dbuf
  4860  0078C4  243E               	addwf	dtoa@i^0,w,c
  4861  0078C6  6ED9               	movwf	fsr2l,c
  4862  0078C8  0E01               	movlw	high _dbuf
  4863  0078CA  203F               	addwfc	(dtoa@i+1)^0,w,c
  4864  0078CC  6EDA               	movwf	fsr2h,c
  4865  0078CE  C02E  FFDF         	movff	_dtoa$1177,indf2
  4866  0078D2                     l2609:
  4867                           
  4868                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4869  0078D2  C01C  F011         	movff	dtoa@fp,pad@fp
  4870  0078D6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4871  0078DA  0E12               	movlw	low _dbuf
  4872  0078DC  243E               	addwf	dtoa@i^0,w,c
  4873  0078DE  6E13               	movwf	pad@buf^0,c
  4874  0078E0  0E01               	movlw	high _dbuf
  4875  0078E2  203F               	addwfc	(dtoa@i+1)^0,w,c
  4876  0078E4  6E14               	movwf	(pad@buf+1)^0,c
  4877  0078E6  C032  F015         	movff	dtoa@w,pad@p
  4878  0078EA  C033  F016         	movff	dtoa@w+1,pad@p+1
  4879  0078EE  EC92  F033         	call	_pad	;wreg free
  4880  0078F2  C011  F01C         	movff	?_pad,?_dtoa
  4881  0078F6  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4882  0078FA  0012               	return		;funcret
  4883  0078FC                     __end_of_dtoa:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _pad *****************
  4887 ;; Defined at:
  4888 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4891 ;;		 -> sprintf@f(6), 
  4892 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4893 ;;		 -> dbuf(32), 
  4894 ;;  p               2   20[COMRAM] int 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  w               2   25[COMRAM] int 
  4897 ;;  i               2   23[COMRAM] int 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  2   16[COMRAM] int 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         6       0       0       0       0       0       0       0       0
  4908 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4909 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4910 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4911 ;;Total ram usage:       11 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    3
  4914 ;; This function calls:
  4915 ;;		_fputc
  4916 ;;		_fputs
  4917 ;;		_strlen
  4918 ;; This function is called by:
  4919 ;;		_dtoa
  4920 ;;		_xtoa
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text14
  4925  006724                     __ptext14:
  4926                           	callstack 0
  4927  006724                     _pad:
  4928                           	callstack 23
  4929  006724                     
  4930                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4931  006724  0100               	movlb	0	; () banked
  4932  006726  A1F2               	btfss	_flags& (0+255),0,b
  4933  006728  EF98  F033         	goto	u1811
  4934  00672C  EF9A  F033         	goto	u1810
  4935  006730                     u1811:
  4936  006730  EFA4  F033         	goto	l2493
  4937  006734                     u1810:
  4938  006734                     
  4939                           ; BSR set to: 0
  4940                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4941  006734  C013  F00A         	movff	pad@buf,fputs@s
  4942  006738  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4943  00673C  C011  F00C         	movff	pad@fp,fputs@fp
  4944  006740  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4945  006744  EC52  F031         	call	_fputs	;wreg free
  4946  006748                     l2493:
  4947                           
  4948                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4949  006748  BE16               	btfsc	(pad@p+1)^0,7,c
  4950  00674A  EFA9  F033         	goto	u1821
  4951  00674E  EFAB  F033         	goto	u1820
  4952  006752                     u1821:
  4953  006752  EFB1  F033         	goto	l2497
  4954  006756                     u1820:
  4955  006756  C015  F01A         	movff	pad@p,pad@w
  4956  00675A  C016  F01B         	movff	pad@p+1,pad@w+1
  4957  00675E  EFB5  F033         	goto	l1176
  4958  006762                     l2497:
  4959  006762  0E00               	movlw	0
  4960  006764  6E1B               	movwf	(pad@w+1)^0,c
  4961  006766  0E00               	movlw	0
  4962  006768  6E1A               	movwf	pad@w^0,c
  4963  00676A                     l1176:
  4964                           
  4965                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4966  00676A  0E00               	movlw	0
  4967  00676C  6E19               	movwf	(pad@i+1)^0,c
  4968  00676E  0E00               	movlw	0
  4969  006770  6E18               	movwf	pad@i^0,c
  4970                           
  4971                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4972  006772  EFC7  F033         	goto	l2503
  4973  006776                     l2499:
  4974                           
  4975                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4976  006776  0E00               	movlw	0
  4977  006778  6E02               	movwf	(fputc@c+1)^0,c
  4978  00677A  0E20               	movlw	32
  4979  00677C  6E01               	movwf	fputc@c^0,c
  4980  00677E  C011  F003         	movff	pad@fp,fputc@fp
  4981  006782  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4982  006786  ECF5  F033         	call	_fputc	;wreg free
  4983  00678A                     
  4984                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4985  00678A  4A18               	infsnz	pad@i^0,f,c
  4986  00678C  2A19               	incf	(pad@i+1)^0,f,c
  4987  00678E                     l2503:
  4988                           
  4989                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4990  00678E  501A               	movf	pad@w^0,w,c
  4991  006790  5C18               	subwf	pad@i^0,w,c
  4992  006792  5019               	movf	(pad@i+1)^0,w,c
  4993  006794  0A80               	xorlw	128
  4994  006796  6E17               	movwf	??_pad^0,c
  4995  006798  501B               	movf	(pad@w+1)^0,w,c
  4996  00679A  0A80               	xorlw	128
  4997  00679C  5817               	subwfb	??_pad^0,w,c
  4998  00679E  A0D8               	btfss	status,0,c
  4999  0067A0  EFD4  F033         	goto	u1831
  5000  0067A4  EFD6  F033         	goto	u1830
  5001  0067A8                     u1831:
  5002  0067A8  EFBB  F033         	goto	l2499
  5003  0067AC                     u1830:
  5004  0067AC                     
  5005                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5006  0067AC  0100               	movlb	0	; () banked
  5007  0067AE  B1F2               	btfsc	_flags& (0+255),0,b
  5008  0067B0  EFDC  F033         	goto	u1841
  5009  0067B4  EFDE  F033         	goto	u1840
  5010  0067B8                     u1841:
  5011  0067B8  EFE8  F033         	goto	l2507
  5012  0067BC                     u1840:
  5013  0067BC                     
  5014                           ; BSR set to: 0
  5015                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5016  0067BC  C013  F00A         	movff	pad@buf,fputs@s
  5017  0067C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5018  0067C4  C011  F00C         	movff	pad@fp,fputs@fp
  5019  0067C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5020  0067CC  EC52  F031         	call	_fputs	;wreg free
  5021  0067D0                     l2507:
  5022                           
  5023                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5024  0067D0  C013  F001         	movff	pad@buf,strlen@s
  5025  0067D4  C014  F002         	movff	pad@buf+1,strlen@s+1
  5026  0067D8  EC83  F030         	call	_strlen	;wreg free
  5027  0067DC  501A               	movf	pad@w^0,w,c
  5028  0067DE  2401               	addwf	?_strlen^0,w,c
  5029  0067E0  6E11               	movwf	?_pad^0,c
  5030  0067E2  501B               	movf	(pad@w+1)^0,w,c
  5031  0067E4  2002               	addwfc	(?_strlen+1)^0,w,c
  5032  0067E6  6E12               	movwf	(?_pad+1)^0,c
  5033  0067E8  0012               	return		;funcret
  5034  0067EA                     __end_of_pad:
  5035                           	callstack 0
  5036                           
  5037 ;; *************** function _strlen *****************
  5038 ;; Defined at:
  5039 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5042 ;;		 -> dbuf(32), 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5045 ;;		 -> dbuf(32), 
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  2    0[COMRAM] unsigned int 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5055 ;;      Params:         2       0       0       0       0       0       0       0       0
  5056 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5058 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5059 ;;Total ram usage:        4 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_pad
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text15
  5069  006106                     __ptext15:
  5070                           	callstack 0
  5071  006106                     _strlen:
  5072                           	callstack 25
  5073  006106  C001  F003         	movff	strlen@s,strlen@a
  5074  00610A  C002  F004         	movff	strlen@s+1,strlen@a+1
  5075  00610E  EF8B  F030         	goto	l2399
  5076  006112                     l2397:
  5077  006112  4A01               	infsnz	strlen@s^0,f,c
  5078  006114  2A02               	incf	(strlen@s+1)^0,f,c
  5079  006116                     l2399:
  5080  006116  C001  FFD9         	movff	strlen@s,fsr2l
  5081  00611A  C002  FFDA         	movff	strlen@s+1,fsr2h
  5082  00611E  50DF               	movf	indf2,w,c
  5083  006120  A4D8               	btfss	status,2,c
  5084  006122  EF95  F030         	goto	u1651
  5085  006126  EF97  F030         	goto	u1650
  5086  00612A                     u1651:
  5087  00612A  EF89  F030         	goto	l2397
  5088  00612E                     u1650:
  5089  00612E  5003               	movf	strlen@a^0,w,c
  5090  006130  5C01               	subwf	strlen@s^0,w,c
  5091  006132  6E01               	movwf	?_strlen^0,c
  5092  006134  5004               	movf	(strlen@a+1)^0,w,c
  5093  006136  5802               	subwfb	(strlen@s+1)^0,w,c
  5094  006138  6E02               	movwf	(?_strlen+1)^0,c
  5095  00613A  0012               	return		;funcret
  5096  00613C                     __end_of_strlen:
  5097                           	callstack 0
  5098                           
  5099 ;; *************** function _fputs *****************
  5100 ;; Defined at:
  5101 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5104 ;;		 -> dbuf(32), 
  5105 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5106 ;;		 -> sprintf@f(6), 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  i               2   14[COMRAM] int 
  5109 ;;  c               1   13[COMRAM] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  2    9[COMRAM] int 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5119 ;;      Params:         4       0       0       0       0       0       0       0       0
  5120 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5122 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5123 ;;Total ram usage:        7 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    2
  5126 ;; This function calls:
  5127 ;;		_fputc
  5128 ;; This function is called by:
  5129 ;;		_pad
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text16
  5134  0062A4                     __ptext16:
  5135                           	callstack 0
  5136  0062A4                     _fputs:
  5137                           	callstack 23
  5138  0062A4  0E00               	movlw	0
  5139  0062A6  6E10               	movwf	(fputs@i+1)^0,c
  5140  0062A8  0E00               	movlw	0
  5141  0062AA  6E0F               	movwf	fputs@i^0,c
  5142  0062AC  EF63  F031         	goto	l2393
  5143  0062B0                     l2389:
  5144  0062B0  C00E  F001         	movff	fputs@c,fputc@c
  5145  0062B4  6A02               	clrf	(fputc@c+1)^0,c
  5146  0062B6  C00C  F003         	movff	fputs@fp,fputc@fp
  5147  0062BA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5148  0062BE  ECF5  F033         	call	_fputc	;wreg free
  5149  0062C2  4A0F               	infsnz	fputs@i^0,f,c
  5150  0062C4  2A10               	incf	(fputs@i+1)^0,f,c
  5151  0062C6                     l2393:
  5152  0062C6  500F               	movf	fputs@i^0,w,c
  5153  0062C8  240A               	addwf	fputs@s^0,w,c
  5154  0062CA  6ED9               	movwf	fsr2l,c
  5155  0062CC  5010               	movf	(fputs@i+1)^0,w,c
  5156  0062CE  200B               	addwfc	(fputs@s+1)^0,w,c
  5157  0062D0  6EDA               	movwf	fsr2h,c
  5158  0062D2  50DF               	movf	indf2,w,c
  5159  0062D4  6E0E               	movwf	fputs@c^0,c
  5160  0062D6  500E               	movf	fputs@c^0,w,c
  5161  0062D8  A4D8               	btfss	status,2,c
  5162  0062DA  EF71  F031         	goto	u1641
  5163  0062DE  EF73  F031         	goto	u1640
  5164  0062E2                     u1641:
  5165  0062E2  EF58  F031         	goto	l2389
  5166  0062E6                     u1640:
  5167  0062E6  0012               	return		;funcret
  5168  0062E8                     __end_of_fputs:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _fputc *****************
  5172 ;; Defined at:
  5173 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  c               2    0[COMRAM] int 
  5176 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5177 ;;		 -> sprintf@f(6), 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  2    0[COMRAM] int 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5189 ;;      Params:         4       0       0       0       0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5191 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5192 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5193 ;;Total ram usage:        9 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    1
  5196 ;; This function calls:
  5197 ;;		_putch
  5198 ;; This function is called by:
  5199 ;;		_pad
  5200 ;;		_vfpfcnvrt
  5201 ;;		_fputs
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text17
  5206  0067EA                     __ptext17:
  5207                           	callstack 0
  5208  0067EA                     _fputc:
  5209                           	callstack 23
  5210  0067EA  5003               	movf	fputc@fp^0,w,c
  5211  0067EC  1004               	iorwf	(fputc@fp+1)^0,w,c
  5212  0067EE  B4D8               	btfsc	status,2,c
  5213  0067F0  EFFC  F033         	goto	u1601
  5214  0067F4  EFFE  F033         	goto	u1600
  5215  0067F8                     u1601:
  5216  0067F8  EF07  F034         	goto	l2377
  5217  0067FC                     u1600:
  5218  0067FC  5003               	movf	fputc@fp^0,w,c
  5219  0067FE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5220  006800  A4D8               	btfss	status,2,c
  5221  006802  EF05  F034         	goto	u1611
  5222  006806  EF07  F034         	goto	u1610
  5223  00680A                     u1611:
  5224  00680A  EF0C  F034         	goto	l2379
  5225  00680E                     u1610:
  5226  00680E                     l2377:
  5227  00680E  5001               	movf	fputc@c^0,w,c
  5228  006810  ECD9  F02F         	call	_putch
  5229  006814  EF59  F034         	goto	l1285
  5230  006818                     l2379:
  5231  006818  EE20 F004          	lfsr	2,4
  5232  00681C  5003               	movf	fputc@fp^0,w,c
  5233  00681E  26D9               	addwf	fsr2l,f,c
  5234  006820  5004               	movf	(fputc@fp+1)^0,w,c
  5235  006822  22DA               	addwfc	fsr2h,f,c
  5236  006824  50DE               	movf	postinc2,w,c
  5237  006826  10DE               	iorwf	postinc2,w,c
  5238  006828  B4D8               	btfsc	status,2,c
  5239  00682A  EF19  F034         	goto	u1621
  5240  00682E  EF1B  F034         	goto	u1620
  5241  006832                     u1621:
  5242  006832  EF36  F034         	goto	l2383
  5243  006836                     u1620:
  5244  006836  EE20 F004          	lfsr	2,4
  5245  00683A  5003               	movf	fputc@fp^0,w,c
  5246  00683C  26D9               	addwf	fsr2l,f,c
  5247  00683E  5004               	movf	(fputc@fp+1)^0,w,c
  5248  006840  22DA               	addwfc	fsr2h,f,c
  5249  006842  EE10 F002          	lfsr	1,2
  5250  006846  5003               	movf	fputc@fp^0,w,c
  5251  006848  26E1               	addwf	fsr1l,f,c
  5252  00684A  5004               	movf	(fputc@fp+1)^0,w,c
  5253  00684C  22E2               	addwfc	fsr1h,f,c
  5254  00684E  50DE               	movf	postinc2,w,c
  5255  006850  5CE6               	subwf	postinc1,w,c
  5256  006852  50E6               	movf	postinc1,w,c
  5257  006854  0A80               	xorlw	128
  5258  006856  6E09               	movwf	(??_fputc+4)^0,c
  5259  006858  50DE               	movf	postinc2,w,c
  5260  00685A  0A80               	xorlw	128
  5261  00685C  5809               	subwfb	(??_fputc+4)^0,w,c
  5262  00685E  B0D8               	btfsc	status,0,c
  5263  006860  EF34  F034         	goto	u1631
  5264  006864  EF36  F034         	goto	u1630
  5265  006868                     u1631:
  5266  006868  EF59  F034         	goto	l1285
  5267  00686C                     u1630:
  5268  00686C                     l2383:
  5269  00686C  EE20 F002          	lfsr	2,2
  5270  006870  5003               	movf	fputc@fp^0,w,c
  5271  006872  26D9               	addwf	fsr2l,f,c
  5272  006874  5004               	movf	(fputc@fp+1)^0,w,c
  5273  006876  22DA               	addwfc	fsr2h,f,c
  5274  006878  CFDE F005          	movff	postinc2,??_fputc
  5275  00687C  CFDD F006          	movff	postdec2,??_fputc+1
  5276  006880  C003  FFD9         	movff	fputc@fp,fsr2l
  5277  006884  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5278  006888  CFDE F007          	movff	postinc2,??_fputc+2
  5279  00688C  CFDD F008          	movff	postdec2,??_fputc+3
  5280  006890  5005               	movf	??_fputc^0,w,c
  5281  006892  2407               	addwf	(??_fputc+2)^0,w,c
  5282  006894  6ED9               	movwf	fsr2l,c
  5283  006896  5006               	movf	(??_fputc+1)^0,w,c
  5284  006898  2008               	addwfc	(??_fputc+3)^0,w,c
  5285  00689A  6EDA               	movwf	fsr2h,c
  5286  00689C  C001  FFDF         	movff	fputc@c,indf2
  5287  0068A0  EE20 F002          	lfsr	2,2
  5288  0068A4  5003               	movf	fputc@fp^0,w,c
  5289  0068A6  26D9               	addwf	fsr2l,f,c
  5290  0068A8  5004               	movf	(fputc@fp+1)^0,w,c
  5291  0068AA  22DA               	addwfc	fsr2h,f,c
  5292  0068AC  2ADE               	incf	postinc2,f,c
  5293  0068AE  0E00               	movlw	0
  5294  0068B0  22DD               	addwfc	postdec2,f,c
  5295  0068B2                     l1285:
  5296  0068B2  0012               	return		;funcret
  5297  0068B4                     __end_of_fputc:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _putch *****************
  5301 ;; Defined at:
  5302 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  c               1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  c               1    0[COMRAM] unsigned char 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_fputc
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text18
  5330  005FB2                     __ptext18:
  5331                           	callstack 0
  5332  005FB2                     _putch:
  5333                           	callstack 23
  5334  005FB2  0012               	return		;funcret
  5335  005FB4                     __end_of_putch:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _abs *****************
  5339 ;; Defined at:
  5340 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  a               2   18[COMRAM] int 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2   18[COMRAM] int 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         2       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        4 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_dtoa
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text19
  5368  006222                     __ptext19:
  5369                           	callstack 0
  5370  006222                     _abs:
  5371                           	callstack 26
  5372  006222  BE14               	btfsc	(abs@a+1)^0,7,c
  5373  006224  EF1E  F031         	goto	u1850
  5374  006228  5014               	movf	(abs@a+1)^0,w,c
  5375  00622A  E106               	bnz	u1851
  5376  00622C  0413               	decf	abs@a^0,w,c
  5377  00622E  B0D8               	btfsc	status,0,c
  5378  006230  EF1C  F031         	goto	u1851
  5379  006234  EF1E  F031         	goto	u1850
  5380  006238                     u1851:
  5381  006238  EF2C  F031         	goto	l1258
  5382  00623C                     u1850:
  5383  00623C  C013  F015         	movff	abs@a,??_abs
  5384  006240  C014  F016         	movff	abs@a+1,??_abs+1
  5385  006244  1E15               	comf	??_abs^0,f,c
  5386  006246  1E16               	comf	(??_abs+1)^0,f,c
  5387  006248  4A15               	infsnz	??_abs^0,f,c
  5388  00624A  2A16               	incf	(??_abs+1)^0,f,c
  5389  00624C  C015  F013         	movff	??_abs,?_abs
  5390  006250  C016  F014         	movff	??_abs+1,?_abs+1
  5391  006254  EF30  F031         	goto	l1261
  5392  006258                     l1258:
  5393  006258  C013  F013         	movff	abs@a,?_abs
  5394  00625C  C014  F014         	movff	abs@a+1,?_abs+1
  5395  006260                     l1261:
  5396  006260  0012               	return		;funcret
  5397  006262                     __end_of_abs:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function ___aomod *****************
  5401 ;; Defined at:
  5402 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  dividend        8    0[COMRAM] long long 
  5405 ;;  divisor         8    8[COMRAM] long long 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  sign            1   17[COMRAM] unsigned char 
  5408 ;;  counter         1   16[COMRAM] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  8    0[COMRAM] long long 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:        16       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:       18 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_dtoa
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text20
  5432  0068B4                     __ptext20:
  5433                           	callstack 0
  5434  0068B4                     ___aomod:
  5435                           	callstack 26
  5436  0068B4  0E00               	movlw	0
  5437  0068B6  6E12               	movwf	___aomod@sign^0,c
  5438  0068B8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5439  0068BA  EF63  F034         	goto	u1750
  5440  0068BE  EF61  F034         	goto	u1751
  5441  0068C2                     u1751:
  5442  0068C2  EF75  F034         	goto	l2461
  5443  0068C6                     u1750:
  5444  0068C6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5445  0068C8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5446  0068CA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5447  0068CC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5448  0068CE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5449  0068D0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5450  0068D2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5451  0068D4  6C01               	negf	___aomod@dividend^0,c
  5452  0068D6  0E00               	movlw	0
  5453  0068D8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5454  0068DA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5455  0068DC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5456  0068DE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5457  0068E0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5458  0068E2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5459  0068E4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5460  0068E6  0E01               	movlw	1
  5461  0068E8  6E12               	movwf	___aomod@sign^0,c
  5462  0068EA                     l2461:
  5463  0068EA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5464  0068EC  EF7C  F034         	goto	u1760
  5465  0068F0  EF7A  F034         	goto	u1761
  5466  0068F4                     u1761:
  5467  0068F4  EF8C  F034         	goto	l2465
  5468  0068F8                     u1760:
  5469  0068F8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5470  0068FA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5471  0068FC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5472  0068FE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5473  006900  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5474  006902  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5475  006904  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5476  006906  6C09               	negf	___aomod@divisor^0,c
  5477  006908  0E00               	movlw	0
  5478  00690A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5479  00690C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5480  00690E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5481  006910  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5482  006912  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5483  006914  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5484  006916  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5485  006918                     l2465:
  5486  006918  5009               	movf	___aomod@divisor^0,w,c
  5487  00691A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5488  00691C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5489  00691E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5490  006920  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5491  006922  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5492  006924  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5493  006926  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5494  006928  B4D8               	btfsc	status,2,c
  5495  00692A  EF99  F034         	goto	u1771
  5496  00692E  EF9B  F034         	goto	u1770
  5497  006932                     u1771:
  5498  006932  EFE3  F034         	goto	l2481
  5499  006936                     u1770:
  5500  006936  0E01               	movlw	1
  5501  006938  6E11               	movwf	___aomod@counter^0,c
  5502  00693A  EFA9  F034         	goto	l2471
  5503  00693E                     l2469:
  5504  00693E  90D8               	bcf	status,0,c
  5505  006940  3609               	rlcf	___aomod@divisor^0,f,c
  5506  006942  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5507  006944  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5508  006946  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5509  006948  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5510  00694A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5511  00694C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5512  00694E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5513  006950  2A11               	incf	___aomod@counter^0,f,c
  5514  006952                     l2471:
  5515  006952  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5516  006954  EFAE  F034         	goto	u1781
  5517  006958  EFB0  F034         	goto	u1780
  5518  00695C                     u1781:
  5519  00695C  EF9F  F034         	goto	l2469
  5520  006960                     u1780:
  5521  006960                     l2473:
  5522  006960  5009               	movf	___aomod@divisor^0,w,c
  5523  006962  5C01               	subwf	___aomod@dividend^0,w,c
  5524  006964  500A               	movf	(___aomod@divisor+1)^0,w,c
  5525  006966  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5526  006968  500B               	movf	(___aomod@divisor+2)^0,w,c
  5527  00696A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5528  00696C  500C               	movf	(___aomod@divisor+3)^0,w,c
  5529  00696E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5530  006970  500D               	movf	(___aomod@divisor+4)^0,w,c
  5531  006972  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5532  006974  500E               	movf	(___aomod@divisor+5)^0,w,c
  5533  006976  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5534  006978  500F               	movf	(___aomod@divisor+6)^0,w,c
  5535  00697A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5536  00697C  5010               	movf	(___aomod@divisor+7)^0,w,c
  5537  00697E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5538  006980  A0D8               	btfss	status,0,c
  5539  006982  EFC5  F034         	goto	u1791
  5540  006986  EFC7  F034         	goto	u1790
  5541  00698A                     u1791:
  5542  00698A  EFD7  F034         	goto	l2477
  5543  00698E                     u1790:
  5544  00698E  5009               	movf	___aomod@divisor^0,w,c
  5545  006990  5E01               	subwf	___aomod@dividend^0,f,c
  5546  006992  500A               	movf	(___aomod@divisor+1)^0,w,c
  5547  006994  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5548  006996  500B               	movf	(___aomod@divisor+2)^0,w,c
  5549  006998  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5550  00699A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5551  00699C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5552  00699E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5553  0069A0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5554  0069A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  5555  0069A4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5556  0069A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  5557  0069A8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5558  0069AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  5559  0069AC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5560  0069AE                     l2477:
  5561  0069AE  90D8               	bcf	status,0,c
  5562  0069B0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5563  0069B2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5564  0069B4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5565  0069B6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5566  0069B8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5567  0069BA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5568  0069BC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5569  0069BE  3209               	rrcf	___aomod@divisor^0,f,c
  5570  0069C0  2E11               	decfsz	___aomod@counter^0,f,c
  5571  0069C2  EFB0  F034         	goto	l2473
  5572  0069C6                     l2481:
  5573  0069C6  5012               	movf	___aomod@sign^0,w,c
  5574  0069C8  B4D8               	btfsc	status,2,c
  5575  0069CA  EFE9  F034         	goto	u1801
  5576  0069CE  EFEB  F034         	goto	u1800
  5577  0069D2                     u1801:
  5578  0069D2  EFFB  F034         	goto	l2485
  5579  0069D6                     u1800:
  5580  0069D6  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5581  0069D8  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5582  0069DA  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5583  0069DC  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5584  0069DE  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5585  0069E0  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5586  0069E2  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5587  0069E4  6C01               	negf	___aomod@dividend^0,c
  5588  0069E6  0E00               	movlw	0
  5589  0069E8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5590  0069EA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5591  0069EC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5592  0069EE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5593  0069F0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5594  0069F2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5595  0069F4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5596  0069F6                     l2485:
  5597  0069F6  C001  F001         	movff	___aomod@dividend,?___aomod
  5598  0069FA  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5599  0069FE  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5600  006A02  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5601  006A06  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5602  006A0A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5603  006A0E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5604  006A12  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5605  006A16  0012               	return		;funcret
  5606  006A18                     __end_of___aomod:
  5607                           	callstack 0
  5608                           
  5609 ;; *************** function ___aodiv *****************
  5610 ;; Defined at:
  5611 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;  dividend        8    0[COMRAM] long long 
  5614 ;;  divisor         8    8[COMRAM] long long 
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;  quotient        8   18[COMRAM] long long 
  5617 ;;  sign            1   17[COMRAM] unsigned char 
  5618 ;;  counter         1   16[COMRAM] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  8    0[COMRAM] long long 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5628 ;;      Params:        16       0       0       0       0       0       0       0       0
  5629 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5631 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5632 ;;Total ram usage:       26 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_dtoa
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text21
  5642  006A18                     __ptext21:
  5643                           	callstack 0
  5644  006A18                     ___aodiv:
  5645                           	callstack 26
  5646  006A18  0E00               	movlw	0
  5647  006A1A  6E12               	movwf	___aodiv@sign^0,c
  5648  006A1C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5649  006A1E  EF15  F035         	goto	u1680
  5650  006A22  EF13  F035         	goto	u1681
  5651  006A26                     u1681:
  5652  006A26  EF27  F035         	goto	l2417
  5653  006A2A                     u1680:
  5654  006A2A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5655  006A2C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5656  006A2E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5657  006A30  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5658  006A32  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5659  006A34  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5660  006A36  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5661  006A38  6C09               	negf	___aodiv@divisor^0,c
  5662  006A3A  0E00               	movlw	0
  5663  006A3C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5664  006A3E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5665  006A40  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5666  006A42  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5667  006A44  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5668  006A46  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5669  006A48  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5670  006A4A  0E01               	movlw	1
  5671  006A4C  6E12               	movwf	___aodiv@sign^0,c
  5672  006A4E                     l2417:
  5673  006A4E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5674  006A50  EF2E  F035         	goto	u1690
  5675  006A54  EF2C  F035         	goto	u1691
  5676  006A58                     u1691:
  5677  006A58  EF40  F035         	goto	l2423
  5678  006A5C                     u1690:
  5679  006A5C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5680  006A5E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5681  006A60  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5682  006A62  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5683  006A64  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5684  006A66  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5685  006A68  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5686  006A6A  6C01               	negf	___aodiv@dividend^0,c
  5687  006A6C  0E00               	movlw	0
  5688  006A6E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5689  006A70  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5690  006A72  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5691  006A74  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5692  006A76  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5693  006A78  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5694  006A7A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5695  006A7C  0E01               	movlw	1
  5696  006A7E  1A12               	xorwf	___aodiv@sign^0,f,c
  5697  006A80                     l2423:
  5698  006A80  EE20  F013         	lfsr	2,___aodiv@quotient
  5699  006A84  0E07               	movlw	7
  5700  006A86                     u1701:
  5701  006A86  6ADE               	clrf	postinc2,c
  5702  006A88  06E8               	decf	wreg,f,c
  5703  006A8A  E2FD               	bc	u1701
  5704  006A8C  5009               	movf	___aodiv@divisor^0,w,c
  5705  006A8E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5706  006A90  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5707  006A92  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5708  006A94  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5709  006A96  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5710  006A98  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5711  006A9A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5712  006A9C  B4D8               	btfsc	status,2,c
  5713  006A9E  EF53  F035         	goto	u1711
  5714  006AA2  EF55  F035         	goto	u1710
  5715  006AA6                     u1711:
  5716  006AA6  EFA7  F035         	goto	l2445
  5717  006AAA                     u1710:
  5718  006AAA  0E01               	movlw	1
  5719  006AAC  6E11               	movwf	___aodiv@counter^0,c
  5720  006AAE  EF63  F035         	goto	l2431
  5721  006AB2                     l2429:
  5722  006AB2  90D8               	bcf	status,0,c
  5723  006AB4  3609               	rlcf	___aodiv@divisor^0,f,c
  5724  006AB6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5725  006AB8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5726  006ABA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5727  006ABC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5728  006ABE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5729  006AC0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5730  006AC2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5731  006AC4  2A11               	incf	___aodiv@counter^0,f,c
  5732  006AC6                     l2431:
  5733  006AC6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5734  006AC8  EF68  F035         	goto	u1721
  5735  006ACC  EF6A  F035         	goto	u1720
  5736  006AD0                     u1721:
  5737  006AD0  EF59  F035         	goto	l2429
  5738  006AD4                     u1720:
  5739  006AD4                     l2433:
  5740  006AD4  90D8               	bcf	status,0,c
  5741  006AD6  3613               	rlcf	___aodiv@quotient^0,f,c
  5742  006AD8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5743  006ADA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5744  006ADC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5745  006ADE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5746  006AE0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5747  006AE2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5748  006AE4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5749  006AE6  5009               	movf	___aodiv@divisor^0,w,c
  5750  006AE8  5C01               	subwf	___aodiv@dividend^0,w,c
  5751  006AEA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5752  006AEC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5753  006AEE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5754  006AF0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5755  006AF2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5756  006AF4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5757  006AF6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5758  006AF8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5759  006AFA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5760  006AFC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5761  006AFE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5762  006B00  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5763  006B02  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5764  006B04  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5765  006B06  A0D8               	btfss	status,0,c
  5766  006B08  EF88  F035         	goto	u1731
  5767  006B0C  EF8A  F035         	goto	u1730
  5768  006B10                     u1731:
  5769  006B10  EF9B  F035         	goto	l2441
  5770  006B14                     u1730:
  5771  006B14  5009               	movf	___aodiv@divisor^0,w,c
  5772  006B16  5E01               	subwf	___aodiv@dividend^0,f,c
  5773  006B18  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5774  006B1A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5775  006B1C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5776  006B1E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5777  006B20  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5778  006B22  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5779  006B24  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5780  006B26  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5781  006B28  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5782  006B2A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5783  006B2C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5784  006B2E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5785  006B30  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5786  006B32  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5787  006B34  8013               	bsf	___aodiv@quotient^0,0,c
  5788  006B36                     l2441:
  5789  006B36  90D8               	bcf	status,0,c
  5790  006B38  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5791  006B3A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5792  006B3C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5793  006B3E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5794  006B40  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5795  006B42  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5796  006B44  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5797  006B46  3209               	rrcf	___aodiv@divisor^0,f,c
  5798  006B48  2E11               	decfsz	___aodiv@counter^0,f,c
  5799  006B4A  EF6A  F035         	goto	l2433
  5800  006B4E                     l2445:
  5801  006B4E  5012               	movf	___aodiv@sign^0,w,c
  5802  006B50  B4D8               	btfsc	status,2,c
  5803  006B52  EFAD  F035         	goto	u1741
  5804  006B56  EFAF  F035         	goto	u1740
  5805  006B5A                     u1741:
  5806  006B5A  EFBF  F035         	goto	l2449
  5807  006B5E                     u1740:
  5808  006B5E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5809  006B60  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5810  006B62  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5811  006B64  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5812  006B66  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5813  006B68  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5814  006B6A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5815  006B6C  6C13               	negf	___aodiv@quotient^0,c
  5816  006B6E  0E00               	movlw	0
  5817  006B70  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5818  006B72  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5819  006B74  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5820  006B76  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5821  006B78  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5822  006B7A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5823  006B7C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5824  006B7E                     l2449:
  5825  006B7E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5826  006B82  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5827  006B86  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5828  006B8A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5829  006B8E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5830  006B92  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5831  006B96  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5832  006B9A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5833  006B9E  0012               	return		;funcret
  5834  006BA0                     __end_of___aodiv:
  5835                           	callstack 0
  5836                           
  5837 ;; *************** function _RTC_Read_Clock *****************
  5838 ;; Defined at:
  5839 ;;		line 226 in file "Vending_Machine.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  read_clock_a    1    wreg     unsigned char 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  read_clock_a    1    3[COMRAM] unsigned char 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5853 ;;      Params:         0       0       0       0       0       0       0       0       0
  5854 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5855 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5856 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5857 ;;Total ram usage:        2 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    3
  5860 ;; This function calls:
  5861 ;;		_I2C_Read
  5862 ;;		_I2C_Repeated_Start
  5863 ;;		_I2C_Start
  5864 ;;		_I2C_Stop
  5865 ;;		_I2C_Write
  5866 ;; This function is called by:
  5867 ;;		_Rtc
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text22
  5872  00637A                     __ptext22:
  5873                           	callstack 0
  5874  00637A                     _RTC_Read_Clock:
  5875                           	callstack 26
  5876                           
  5877                           ;incstack = 0
  5878                           ;RTC_Read_Clock@read_clock_address stored from wreg
  5879  00637A  6E04               	movwf	RTC_Read_Clock@read_clock_address^0,c
  5880  00637C                     
  5881                           ;Vending_Machine.c: 226: void RTC_Read_Clock(char read_clock_address);Vending_Machine.c:
      +                           227: {;Vending_Machine.c: 228:     I2C_Start(0xD0);
  5882  00637C  0ED0               	movlw	208
  5883  00637E  EC54  F030         	call	_I2C_Start
  5884                           
  5885                           ;Vending_Machine.c: 229:     I2C_Write(read_clock_address);
  5886  006382  5004               	movf	RTC_Read_Clock@read_clock_address^0,w,c
  5887  006384  EC18  F030         	call	_I2C_Write
  5888                           
  5889                           ;Vending_Machine.c: 230:     I2C_Repeated_Start(0xD1);
  5890  006388  0ED1               	movlw	209
  5891  00638A  EC3D  F030         	call	_I2C_Repeated_Start
  5892  00638E                     
  5893                           ;Vending_Machine.c: 231:     sec = I2C_Read(0);
  5894  00638E  0E00               	movlw	0
  5895  006390  ECD6  F030         	call	_I2C_Read
  5896  006394  6E03               	movwf	??_RTC_Read_Clock^0,c
  5897  006396  5003               	movf	??_RTC_Read_Clock^0,w,c
  5898  006398  0100               	movlb	0	; () banked
  5899  00639A  6FF8               	movwf	_sec& (0+255),b
  5900  00639C  6BF9               	clrf	(_sec+1)& (0+255),b
  5901  00639E                     
  5902                           ; BSR set to: 0
  5903                           ;Vending_Machine.c: 232:     min = I2C_Read(0);
  5904  00639E  0E00               	movlw	0
  5905  0063A0  ECD6  F030         	call	_I2C_Read
  5906  0063A4  6E03               	movwf	??_RTC_Read_Clock^0,c
  5907  0063A6  5003               	movf	??_RTC_Read_Clock^0,w,c
  5908  0063A8  0100               	movlb	0	; () banked
  5909  0063AA  6FF6               	movwf	_min& (0+255),b
  5910  0063AC  6BF7               	clrf	(_min+1)& (0+255),b
  5911  0063AE                     
  5912                           ; BSR set to: 0
  5913                           ;Vending_Machine.c: 233:     hour= I2C_Read(1);
  5914  0063AE  0E01               	movlw	1
  5915  0063B0  ECD6  F030         	call	_I2C_Read
  5916  0063B4  6E03               	movwf	??_RTC_Read_Clock^0,c
  5917  0063B6  5003               	movf	??_RTC_Read_Clock^0,w,c
  5918  0063B8  0100               	movlb	0	; () banked
  5919  0063BA  6FF4               	movwf	_hour& (0+255),b
  5920  0063BC  6BF5               	clrf	(_hour+1)& (0+255),b
  5921  0063BE                     
  5922                           ; BSR set to: 0
  5923                           ;Vending_Machine.c: 234:       I2C_Stop();
  5924  0063BE  EC01  F030         	call	_I2C_Stop	;wreg free
  5925  0063C2  0012               	return		;funcret
  5926  0063C4                     __end_of_RTC_Read_Clock:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _RTC_Read_Calendar *****************
  5930 ;; Defined at:
  5931 ;;		line 237 in file "Vending_Machine.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  read_calenda    1    wreg     unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  read_calenda    1    3[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, status,2, status,0, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5945 ;;      Params:         0       0       0       0       0       0       0       0       0
  5946 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5947 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5948 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5949 ;;Total ram usage:        2 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    3
  5952 ;; This function calls:
  5953 ;;		_I2C_Read
  5954 ;;		_I2C_Repeated_Start
  5955 ;;		_I2C_Start
  5956 ;;		_I2C_Stop
  5957 ;;		_I2C_Write
  5958 ;; This function is called by:
  5959 ;;		_Rtc
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text23
  5964  0064AE                     __ptext23:
  5965                           	callstack 0
  5966  0064AE                     _RTC_Read_Calendar:
  5967                           	callstack 26
  5968                           
  5969                           ;incstack = 0
  5970                           ;RTC_Read_Calendar@read_calendar_address stored from wreg
  5971  0064AE  6E04               	movwf	RTC_Read_Calendar@read_calendar_address^0,c
  5972  0064B0                     
  5973                           ;Vending_Machine.c: 237: void RTC_Read_Calendar(char read_calendar_address);Vending_Mach
      +                          ine.c: 238: {;Vending_Machine.c: 239:     I2C_Start(0xD0);
  5974  0064B0  0ED0               	movlw	208
  5975  0064B2  EC54  F030         	call	_I2C_Start
  5976                           
  5977                           ;Vending_Machine.c: 240:     I2C_Write(read_calendar_address);
  5978  0064B6  5004               	movf	RTC_Read_Calendar@read_calendar_address^0,w,c
  5979  0064B8  EC18  F030         	call	_I2C_Write
  5980                           
  5981                           ;Vending_Machine.c: 241:     I2C_Repeated_Start(0xD1);
  5982  0064BC  0ED1               	movlw	209
  5983  0064BE  EC3D  F030         	call	_I2C_Repeated_Start
  5984  0064C2                     
  5985                           ;Vending_Machine.c: 242:     Day = I2C_Read(0);
  5986  0064C2  0E00               	movlw	0
  5987  0064C4  ECD6  F030         	call	_I2C_Read
  5988  0064C8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  5989  0064CA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  5990  0064CC  0101               	movlb	1	; () banked
  5991  0064CE  6F10               	movwf	_Day& (0+255),b
  5992  0064D0  6B11               	clrf	(_Day+1)& (0+255),b
  5993  0064D2                     
  5994                           ; BSR set to: 1
  5995                           ;Vending_Machine.c: 243:     Date = I2C_Read(0);
  5996  0064D2  0E00               	movlw	0
  5997  0064D4  ECD6  F030         	call	_I2C_Read
  5998  0064D8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  5999  0064DA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  6000  0064DC  0101               	movlb	1	; () banked
  6001  0064DE  6F0E               	movwf	_Date& (0+255),b
  6002  0064E0  6B0F               	clrf	(_Date+1)& (0+255),b
  6003  0064E2                     
  6004                           ; BSR set to: 1
  6005                           ;Vending_Machine.c: 244:     Month = I2C_Read(0);
  6006  0064E2  0E00               	movlw	0
  6007  0064E4  ECD6  F030         	call	_I2C_Read
  6008  0064E8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  6009  0064EA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  6010  0064EC  0101               	movlb	1	; () banked
  6011  0064EE  6F0C               	movwf	_Month& (0+255),b
  6012  0064F0  6B0D               	clrf	(_Month+1)& (0+255),b
  6013  0064F2                     
  6014                           ; BSR set to: 1
  6015                           ;Vending_Machine.c: 245:     Year = I2C_Read(1);
  6016  0064F2  0E01               	movlw	1
  6017  0064F4  ECD6  F030         	call	_I2C_Read
  6018  0064F8  6E03               	movwf	??_RTC_Read_Calendar^0,c
  6019  0064FA  5003               	movf	??_RTC_Read_Calendar^0,w,c
  6020  0064FC  0101               	movlb	1	; () banked
  6021  0064FE  6F0A               	movwf	_Year& (0+255),b
  6022  006500  6B0B               	clrf	(_Year+1)& (0+255),b
  6023  006502                     
  6024                           ; BSR set to: 1
  6025                           ;Vending_Machine.c: 246:     I2C_Stop();
  6026  006502  EC01  F030         	call	_I2C_Stop	;wreg free
  6027  006506  0012               	return		;funcret
  6028  006508                     __end_of_RTC_Read_Calendar:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _I2C_Stop *****************
  6032 ;; Defined at:
  6033 ;;		line 93 in file "I2C.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      unsigned char 
  6040 ;; Registers used:
  6041 ;;		wreg
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_RTC_Read_Clock
  6057 ;;		_RTC_Read_Calendar
  6058 ;;		_Rtc
  6059 ;;		_I2C_Start_Wait
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text24
  6064  006002                     __ptext24:
  6065                           	callstack 0
  6066  006002                     _I2C_Stop:
  6067                           	callstack 28
  6068  006002                     
  6069                           ;I2C.c: 95:     PEN = 1;
  6070  006002  84C5               	bsf	4037,2,c	;volatile
  6071  006004                     l441:
  6072  006004  B4C5               	btfsc	4037,2,c	;volatile
  6073  006006  EF07  F030         	goto	u2461
  6074  00600A  EF09  F030         	goto	u2460
  6075  00600E                     u2461:
  6076  00600E  EF02  F030         	goto	l441
  6077  006012                     u2460:
  6078  006012                     
  6079                           ;I2C.c: 97:     if(!SSPSTATbits.P);
  6080  006012  50C7               	movf	199,w,c	;volatile
  6081  006014  0012               	return		;funcret
  6082  006016                     __end_of_I2C_Stop:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _I2C_Start *****************
  6086 ;; Defined at:
  6087 ;;		line 68 in file "I2C.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  slave_write_    1    wreg     unsigned char 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  slave_write_    1    1[COMRAM] unsigned char 
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      unsigned char 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0
  6102 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6104 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6105 ;;Total ram usage:        1 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    2
  6108 ;; This function calls:
  6109 ;;		_I2C_Write
  6110 ;; This function is called by:
  6111 ;;		_RTC_Read_Clock
  6112 ;;		_RTC_Read_Calendar
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text25
  6117  0060A8                     __ptext25:
  6118                           	callstack 0
  6119  0060A8                     _I2C_Start:
  6120                           	callstack 26
  6121                           
  6122                           ;incstack = 0
  6123                           ;I2C_Start@slave_write_address stored from wreg
  6124  0060A8  6E02               	movwf	I2C_Start@slave_write_address^0,c
  6125  0060AA                     
  6126                           ;I2C.c: 68: char I2C_Start(char slave_write_address);I2C.c: 69: {;I2C.c: 70:     SSPCON2
      +                          bits.SEN=1;
  6127  0060AA  80C5               	bsf	197,0,c	;volatile
  6128  0060AC                     l425:
  6129  0060AC  B0C5               	btfsc	197,0,c	;volatile
  6130  0060AE  EF5B  F030         	goto	u2401
  6131  0060B2  EF5D  F030         	goto	u2400
  6132  0060B6                     u2401:
  6133  0060B6  EF56  F030         	goto	l425
  6134  0060BA                     u2400:
  6135  0060BA                     
  6136                           ;I2C.c: 72:  SSPIF=0;
  6137  0060BA  969E               	bcf	3998,3,c	;volatile
  6138                           
  6139                           ;I2C.c: 73:     if(!SSPSTATbits.S)
  6140  0060BC  B6C7               	btfsc	199,3,c	;volatile
  6141  0060BE  EF63  F030         	goto	u2411
  6142  0060C2  EF65  F030         	goto	u2410
  6143  0060C6                     u2411:
  6144  0060C6  EF67  F030         	goto	l2787
  6145  0060CA                     u2410:
  6146  0060CA  EF6A  F030         	goto	l429
  6147  0060CE                     l2787:
  6148                           
  6149                           ;I2C.c: 75:     return (I2C_Write(slave_write_address));;	Return value of _I2C_Start is 
      +                          never used
  6150  0060CE  5002               	movf	I2C_Start@slave_write_address^0,w,c
  6151  0060D0  EC18  F030         	call	_I2C_Write
  6152  0060D4                     l429:
  6153  0060D4  0012               	return		;funcret
  6154  0060D6                     __end_of_I2C_Start:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _I2C_Repeated_Start *****************
  6158 ;; Defined at:
  6159 ;;		line 79 in file "I2C.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  slave_read_a    1    wreg     unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  slave_read_a    1    1[COMRAM] unsigned char 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  1    wreg      unsigned char 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, cstack
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6173 ;;      Params:         0       0       0       0       0       0       0       0       0
  6174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6177 ;;Total ram usage:        1 bytes
  6178 ;; Hardware stack levels used:    1
  6179 ;; Hardware stack levels required when called:    2
  6180 ;; This function calls:
  6181 ;;		_I2C_Write
  6182 ;; This function is called by:
  6183 ;;		_RTC_Read_Clock
  6184 ;;		_RTC_Read_Calendar
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188                           	psect	text26
  6189  00607A                     __ptext26:
  6190                           	callstack 0
  6191  00607A                     _I2C_Repeated_Start:
  6192                           	callstack 26
  6193                           
  6194                           ;incstack = 0
  6195                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  6196  00607A  6E02               	movwf	I2C_Repeated_Start@slave_read_address^0,c
  6197  00607C                     
  6198                           ;I2C.c: 79: char I2C_Repeated_Start(char slave_read_address);I2C.c: 80: {;I2C.c: 81:    
      +                           RSEN = 1;
  6199  00607C  82C5               	bsf	4037,1,c	;volatile
  6200  00607E                     l432:
  6201  00607E  B2C5               	btfsc	4037,1,c	;volatile
  6202  006080  EF44  F030         	goto	u2421
  6203  006084  EF46  F030         	goto	u2420
  6204  006088                     u2421:
  6205  006088  EF3F  F030         	goto	l432
  6206  00608C                     u2420:
  6207  00608C                     
  6208                           ;I2C.c: 83:     SSPIF = 0;
  6209  00608C  969E               	bcf	3998,3,c	;volatile
  6210                           
  6211                           ;I2C.c: 84:  if(!SSPSTATbits.S)
  6212  00608E  B6C7               	btfsc	199,3,c	;volatile
  6213  006090  EF4C  F030         	goto	u2431
  6214  006094  EF4E  F030         	goto	u2430
  6215  006098                     u2431:
  6216  006098  EF50  F030         	goto	l2795
  6217  00609C                     u2430:
  6218  00609C  EF53  F030         	goto	l436
  6219  0060A0                     l2795:
  6220                           
  6221                           ;I2C.c: 86:     I2C_Write(slave_read_address);
  6222  0060A0  5002               	movf	I2C_Repeated_Start@slave_read_address^0,w,c
  6223  0060A2  EC18  F030         	call	_I2C_Write
  6224  0060A6                     l436:
  6225  0060A6  0012               	return		;funcret
  6226  0060A8                     __end_of_I2C_Repeated_Start:
  6227                           	callstack 0
  6228                           
  6229 ;; *************** function _I2C_Write *****************
  6230 ;; Defined at:
  6231 ;;		line 101 in file "I2C.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  data            1    wreg     unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  data            1    0[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      unsigned char 
  6238 ;; Registers used:
  6239 ;;		wreg, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0
  6246 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6248 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6249 ;;Total ram usage:        1 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    1
  6252 ;; This function calls:
  6253 ;;		_I2C_Ready
  6254 ;; This function is called by:
  6255 ;;		_RTC_Read_Clock
  6256 ;;		_RTC_Read_Calendar
  6257 ;;		_I2C_Start
  6258 ;;		_I2C_Repeated_Start
  6259 ;;		_I2C_Start_Wait
  6260 ;; This function uses a non-reentrant model
  6261 ;;
  6262                           
  6263                           	psect	text27
  6264  006030                     __ptext27:
  6265                           	callstack 0
  6266  006030                     _I2C_Write:
  6267                           	callstack 27
  6268                           
  6269                           ;incstack = 0
  6270                           ;I2C_Write@data stored from wreg
  6271  006030  6E01               	movwf	I2C_Write@data^0,c
  6272  006032                     
  6273                           ;I2C.c: 101: char I2C_Write(unsigned char data);I2C.c: 102: {;I2C.c: 103:       SSPBUF =
      +                           data;
  6274  006032  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  6275  006036                     
  6276                           ;I2C.c: 104:       I2C_Ready();
  6277  006036  ECDA  F02F         	call	_I2C_Ready	;wreg free
  6278  00603A                     
  6279                           ;I2C.c: 105:       if (ACKSTAT)
  6280  00603A  ACC5               	btfss	4037,6,c	;volatile
  6281  00603C  EF22  F030         	goto	u2281
  6282  006040  EF24  F030         	goto	u2280
  6283  006044                     u2281:
  6284  006044  EF27  F030         	goto	l2691
  6285  006048                     u2280:
  6286  006048                     
  6287                           ;I2C.c: 106:         return 1;
  6288  006048  0E01               	movlw	1
  6289  00604A  EF28  F030         	goto	l449
  6290  00604E                     l2691:
  6291                           
  6292                           ;I2C.c: 108:         return 2;
  6293  00604E  0E02               	movlw	2
  6294  006050                     l449:
  6295  006050  0012               	return		;funcret
  6296  006052                     __end_of_I2C_Write:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _I2C_Read *****************
  6300 ;; Defined at:
  6301 ;;		line 12 in file "I2C.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  flag            1    wreg     unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  flag            1    0[COMRAM] unsigned char 
  6306 ;;  buffer          1    1[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      unsigned char 
  6309 ;; Registers used:
  6310 ;;		wreg, status,2, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6316 ;;      Params:         0       0       0       0       0       0       0       0       0
  6317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6320 ;;Total ram usage:        2 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    1
  6323 ;; This function calls:
  6324 ;;		_I2C_Ack
  6325 ;;		_I2C_Nack
  6326 ;;		_I2C_Ready
  6327 ;; This function is called by:
  6328 ;;		_RTC_Read_Clock
  6329 ;;		_RTC_Read_Calendar
  6330 ;; This function uses a non-reentrant model
  6331 ;;
  6332                           
  6333                           	psect	text28
  6334  0061AC                     __ptext28:
  6335                           	callstack 0
  6336  0061AC                     _I2C_Read:
  6337                           	callstack 27
  6338                           
  6339                           ;incstack = 0
  6340                           ;I2C_Read@flag stored from wreg
  6341  0061AC  6E01               	movwf	I2C_Read@flag^0,c
  6342  0061AE                     
  6343                           ;I2C.c: 12: char I2C_Read(char flag);I2C.c: 14: {;I2C.c: 15:         char buffer;;I2C.c:
      +                           16:         RCEN = 1;
  6344  0061AE  86C5               	bsf	4037,3,c	;volatile
  6345  0061B0                     l397:
  6346  0061B0  A0C7               	btfss	199,0,c	;volatile
  6347  0061B2  EFDD  F030         	goto	u2441
  6348  0061B6  EFDF  F030         	goto	u2440
  6349  0061BA                     u2441:
  6350  0061BA  EFD8  F030         	goto	l397
  6351  0061BE                     u2440:
  6352  0061BE                     
  6353                           ;I2C.c: 19:         buffer = SSPBUF;
  6354  0061BE  CFC9 F002          	movff	4041,I2C_Read@buffer	;volatile
  6355  0061C2                     
  6356                           ;I2C.c: 21:         if(flag==0)
  6357  0061C2  5001               	movf	I2C_Read@flag^0,w,c
  6358  0061C4  A4D8               	btfss	status,2,c
  6359  0061C6  EFE7  F030         	goto	u2451
  6360  0061CA  EFE9  F030         	goto	u2450
  6361  0061CE                     u2451:
  6362  0061CE  EFED  F030         	goto	l2809
  6363  0061D2                     u2450:
  6364  0061D2                     
  6365                           ;I2C.c: 22:             I2C_Ack();
  6366  0061D2  ECED  F02F         	call	_I2C_Ack	;wreg free
  6367  0061D6  EFEF  F030         	goto	l401
  6368  0061DA                     l2809:
  6369                           
  6370                           ;I2C.c: 24:             I2C_Nack();
  6371  0061DA  ECF7  F02F         	call	_I2C_Nack	;wreg free
  6372  0061DE                     l401:
  6373                           
  6374                           ;I2C.c: 25:         I2C_Ready();
  6375  0061DE  ECDA  F02F         	call	_I2C_Ready	;wreg free
  6376  0061E2                     
  6377                           ;I2C.c: 26:         return(buffer);
  6378  0061E2  5002               	movf	I2C_Read@buffer^0,w,c
  6379  0061E4  0012               	return		;funcret
  6380  0061E6                     __end_of_I2C_Read:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _I2C_Ready *****************
  6384 ;; Defined at:
  6385 ;;		line 43 in file "I2C.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		None
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_I2C_Read
  6409 ;;		_I2C_Write
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text29
  6414  005FB4                     __ptext29:
  6415                           	callstack 0
  6416  005FB4                     _I2C_Ready:
  6417                           	callstack 27
  6418  005FB4                     l408:
  6419  005FB4  A69E               	btfss	3998,3,c	;volatile
  6420  005FB6  EFDF  F02F         	goto	u1951
  6421  005FBA  EFE1  F02F         	goto	u1950
  6422  005FBE                     u1951:
  6423  005FBE  EFDA  F02F         	goto	l408
  6424  005FC2                     u1950:
  6425  005FC2                     
  6426                           ;I2C.c: 46:     SSPIF=0;
  6427  005FC2  969E               	bcf	3998,3,c	;volatile
  6428  005FC4  0012               	return		;funcret
  6429  005FC6                     __end_of_I2C_Ready:
  6430                           	callstack 0
  6431                           
  6432 ;; *************** function _I2C_Nack *****************
  6433 ;; Defined at:
  6434 ;;		line 118 in file "I2C.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		None
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_I2C_Read
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text30
  6462  005FEE                     __ptext30:
  6463                           	callstack 0
  6464  005FEE                     _I2C_Nack:
  6465                           	callstack 27
  6466  005FEE                     
  6467                           ;I2C.c: 120:     ACKDT=1;
  6468  005FEE  8AC5               	bsf	4037,5,c	;volatile
  6469                           
  6470                           ;I2C.c: 121:  ACKEN=1;
  6471  005FF0  88C5               	bsf	4037,4,c	;volatile
  6472  005FF2                     l459:
  6473  005FF2  B8C5               	btfsc	4037,4,c	;volatile
  6474  005FF4  EFFE  F02F         	goto	u2301
  6475  005FF8  EF00  F030         	goto	u2300
  6476  005FFC                     u2301:
  6477  005FFC  EFF9  F02F         	goto	l459
  6478  006000                     u2300:
  6479  006000  0012               	return		;funcret
  6480  006002                     __end_of_I2C_Nack:
  6481                           	callstack 0
  6482                           
  6483 ;; *************** function _I2C_Ack *****************
  6484 ;; Defined at:
  6485 ;;		line 111 in file "I2C.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		None
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6499 ;;      Params:         0       0       0       0       0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        0 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_I2C_Read
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text31
  6513  005FDA                     __ptext31:
  6514                           	callstack 0
  6515  005FDA                     _I2C_Ack:
  6516                           	callstack 27
  6517  005FDA                     
  6518                           ;I2C.c: 113:     ACKDT=0;
  6519  005FDA  9AC5               	bcf	4037,5,c	;volatile
  6520                           
  6521                           ;I2C.c: 114:  ACKEN=1;
  6522  005FDC  88C5               	bsf	4037,4,c	;volatile
  6523  005FDE                     l453:
  6524  005FDE  B8C5               	btfsc	4037,4,c	;volatile
  6525  005FE0  EFF4  F02F         	goto	u2291
  6526  005FE4  EFF6  F02F         	goto	u2290
  6527  005FE8                     u2291:
  6528  005FE8  EFEF  F02F         	goto	l453
  6529  005FEC                     u2290:
  6530  005FEC  0012               	return		;funcret
  6531  005FEE                     __end_of_I2C_Ack:
  6532                           	callstack 0
  6533                           
  6534 ;; *************** function _LCD_String_xy *****************
  6535 ;; Defined at:
  6536 ;;		line 63 in file "LCD_20x4.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  row             1    wreg     unsigned char 
  6539 ;;  pos             1   10[COMRAM] unsigned char 
  6540 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  6541 ;;		 -> Rtc@date(10), Rtc@hours(10), STR_28(3), STR_27(3), 
  6542 ;;		 -> STR_26(20), main@c1_402(6), STR_23(15), main@c1(6), 
  6543 ;;		 -> main@c(6), STR_18(5), STR_17(5), STR_16(14), 
  6544 ;;		 -> STR_6(14), STR_5(16), STR_4(19), STR_3(13), 
  6545 ;;		 -> STR_2(21), STR_1(13), 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  row             1   13[COMRAM] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6557 ;;      Params:         3       0       0       0       0       0       0       0       0
  6558 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6560 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6561 ;;Total ram usage:        4 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    3
  6564 ;; This function calls:
  6565 ;;		_LCD_Command
  6566 ;;		_LCD_String
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;;		_Rtc
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text32
  6574  006696                     __ptext32:
  6575                           	callstack 0
  6576  006696                     _LCD_String_xy:
  6577                           	callstack 26
  6578                           
  6579                           ;incstack = 0
  6580                           ;LCD_String_xy@row stored from wreg
  6581  006696  6E0E               	movwf	LCD_String_xy@row^0,c
  6582  006698                     
  6583                           ;LCD_20x4.c: 63: void LCD_String_xy(char row,char pos,const char *msg);LCD_20x4.c: 64: {
      +                          ;LCD_20x4.c: 79:      if (row == 1)
  6584  006698  040E               	decf	LCD_String_xy@row^0,w,c
  6585  00669A  A4D8               	btfss	status,2,c
  6586  00669C  EF52  F033         	goto	u2481
  6587  0066A0  EF54  F033         	goto	u2480
  6588  0066A4                     u2481:
  6589  0066A4  EF5B  F033         	goto	l2849
  6590  0066A8                     u2480:
  6591  0066A8                     
  6592                           ;LCD_20x4.c: 80:   LCD_Command((pos & 0x0F)|0x80);
  6593  0066A8  500B               	movf	LCD_String_xy@pos^0,w,c
  6594  0066AA  0B0F               	andlw	15
  6595  0066AC  0980               	iorlw	128
  6596  0066AE  ECE2  F031         	call	_LCD_Command
  6597  0066B2  EF8B  F033         	goto	l2861
  6598  0066B6                     l2849:
  6599  0066B6  0E02               	movlw	2
  6600  0066B8  180E               	xorwf	LCD_String_xy@row^0,w,c
  6601  0066BA  A4D8               	btfss	status,2,c
  6602  0066BC  EF62  F033         	goto	u2491
  6603  0066C0  EF64  F033         	goto	u2490
  6604  0066C4                     u2491:
  6605  0066C4  EF6B  F033         	goto	l2853
  6606  0066C8                     u2490:
  6607  0066C8                     
  6608                           ;LCD_20x4.c: 82:   LCD_Command((pos & 0x0F)|0xC0);
  6609  0066C8  500B               	movf	LCD_String_xy@pos^0,w,c
  6610  0066CA  0B0F               	andlw	15
  6611  0066CC  09C0               	iorlw	192
  6612  0066CE  ECE2  F031         	call	_LCD_Command
  6613  0066D2  EF8B  F033         	goto	l2861
  6614  0066D6                     l2853:
  6615  0066D6  0E03               	movlw	3
  6616  0066D8  180E               	xorwf	LCD_String_xy@row^0,w,c
  6617  0066DA  A4D8               	btfss	status,2,c
  6618  0066DC  EF72  F033         	goto	u2501
  6619  0066E0  EF74  F033         	goto	u2500
  6620  0066E4                     u2501:
  6621  0066E4  EF7B  F033         	goto	l2857
  6622  0066E8                     u2500:
  6623  0066E8                     
  6624                           ;LCD_20x4.c: 84:   LCD_Command((pos & 0x0F)|0x94);
  6625  0066E8  500B               	movf	LCD_String_xy@pos^0,w,c
  6626  0066EA  0B0F               	andlw	15
  6627  0066EC  0994               	iorlw	148
  6628  0066EE  ECE2  F031         	call	_LCD_Command
  6629  0066F2  EF8B  F033         	goto	l2861
  6630  0066F6                     l2857:
  6631  0066F6  0E04               	movlw	4
  6632  0066F8  180E               	xorwf	LCD_String_xy@row^0,w,c
  6633  0066FA  A4D8               	btfss	status,2,c
  6634  0066FC  EF82  F033         	goto	u2511
  6635  006700  EF84  F033         	goto	u2510
  6636  006704                     u2511:
  6637  006704  EF8B  F033         	goto	l335
  6638  006708                     u2510:
  6639  006708                     
  6640                           ;LCD_20x4.c: 86:   LCD_Command((pos & 0x0F)|0xD4);
  6641  006708  500B               	movf	LCD_String_xy@pos^0,w,c
  6642  00670A  0B0F               	andlw	15
  6643  00670C  09D4               	iorlw	212
  6644  00670E  ECE2  F031         	call	_LCD_Command
  6645  006712  EF8B  F033         	goto	l2861
  6646  006716                     l335:
  6647  006716                     l2861:
  6648                           
  6649                           ;LCD_20x4.c: 87:  LCD_String( msg);
  6650  006716  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
  6651  00671A  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  6652  00671E  EC84  F032         	call	_LCD_String	;wreg free
  6653  006722  0012               	return		;funcret
  6654  006724                     __end_of_LCD_String_xy:
  6655                           	callstack 0
  6656                           
  6657 ;; *************** function _LCD_String *****************
  6658 ;; Defined at:
  6659 ;;		line 53 in file "LCD_20x4.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;  msg             2    8[COMRAM] PTR const unsigned char 
  6662 ;;		 -> STR_44(4), STR_43(4), STR_42(4), STR_41(4), 
  6663 ;;		 -> STR_40(4), STR_39(4), STR_38(4), Rtc@year(10), 
  6664 ;;		 -> Rtc@month(10), Rtc@date(10), Rtc@hours(10), Rtc@mins(10), 
  6665 ;;		 -> Rtc@secs(10), STR_28(3), STR_27(3), STR_26(20), 
  6666 ;;		 -> STR_25(15), main@c1_402(6), STR_23(15), main@c1(6), 
  6667 ;;		 -> STR_21(19), STR_20(8), main@c(6), STR_18(5), 
  6668 ;;		 -> STR_17(5), STR_16(14), STR_15(14), STR_14(14), 
  6669 ;;		 -> STR_13(16), STR_12(14), STR_11(19), STR_10(14), 
  6670 ;;		 -> STR_9(18), STR_8(14), STR_7(15), STR_6(14), 
  6671 ;;		 -> STR_5(16), STR_4(19), STR_3(13), STR_2(21), 
  6672 ;;		 -> STR_1(13), 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6684 ;;      Params:         2       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        2 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    2
  6691 ;; This function calls:
  6692 ;;		_LCD_Char
  6693 ;; This function is called by:
  6694 ;;		_main
  6695 ;;		_Rtc
  6696 ;;		_LCD_String_xy
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text33
  6701  006508                     __ptext33:
  6702                           	callstack 0
  6703  006508                     _LCD_String:
  6704                           	callstack 26
  6705  006508                     
  6706                           ;LCD_20x4.c: 53: void LCD_String(const char *msg);LCD_20x4.c: 54: {;LCD_20x4.c: 55:  whi
      +                          le((*msg)!=0)
  6707  006508  EF9A  F032         	goto	l2781
  6708  00650C                     l2777:
  6709                           
  6710                           ;LCD_20x4.c: 56:  {;LCD_20x4.c: 57:    LCD_Char(*msg);
  6711  00650C  C009  FFF6         	movff	LCD_String@msg,tblptrl
  6712  006510  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  6713  006514  6AF8               	clrf	tblptru,c
  6714  006516  0E07               	movlw	(high __ramtop+-1)
  6715  006518  64F7               	cpfsgt	tblptrh,c
  6716  00651A  D003               	bra	u2377
  6717  00651C  0008               	tblrd		*
  6718  00651E  50F5               	movf	tablat,w,c
  6719  006520  D005               	bra	u2370
  6720  006522                     u2377:
  6721  006522  CFF6 FFE9          	movff	tblptrl,fsr0l
  6722  006526  CFF7 FFEA          	movff	tblptrh,fsr0h
  6723  00652A  50EF               	movf	indf0,w,c
  6724  00652C                     u2370:
  6725  00652C  EC08  F032         	call	_LCD_Char
  6726  006530                     
  6727                           ;LCD_20x4.c: 58:    msg++;
  6728  006530  4A09               	infsnz	LCD_String@msg^0,f,c
  6729  006532  2A0A               	incf	(LCD_String@msg+1)^0,f,c
  6730  006534                     l2781:
  6731                           
  6732                           ;LCD_20x4.c: 55:  while((*msg)!=0)
  6733  006534  C009  FFF6         	movff	LCD_String@msg,tblptrl
  6734  006538  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
  6735  00653C  6AF8               	clrf	tblptru,c
  6736  00653E  0E07               	movlw	(high __ramtop+-1)
  6737  006540  64F7               	cpfsgt	tblptrh,c
  6738  006542  D003               	bra	u2387
  6739  006544  0008               	tblrd		*
  6740  006546  50F5               	movf	tablat,w,c
  6741  006548  D005               	bra	u2380
  6742  00654A                     u2387:
  6743  00654A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6744  00654E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6745  006552  50EF               	movf	indf0,w,c
  6746  006554                     u2380:
  6747  006554  0900               	iorlw	0
  6748  006556  A4D8               	btfss	status,2,c
  6749  006558  EFB0  F032         	goto	u2391
  6750  00655C  EFB2  F032         	goto	u2390
  6751  006560                     u2391:
  6752  006560  EF86  F032         	goto	l2777
  6753  006564                     u2390:
  6754  006564  0012               	return		;funcret
  6755  006566                     __end_of_LCD_String:
  6756                           	callstack 0
  6757                           
  6758 ;; *************** function _LCD_Char *****************
  6759 ;; Defined at:
  6760 ;;		line 39 in file "LCD_20x4.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  dat             1    wreg     unsigned char 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  dat             1    7[COMRAM] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6774 ;;      Params:         0       0       0       0       0       0       0       0       0
  6775 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6776 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6777 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6778 ;;Total ram usage:        2 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    1
  6781 ;; This function calls:
  6782 ;;		_MSdelay
  6783 ;; This function is called by:
  6784 ;;		_LCD_String
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text34
  6789  006410                     __ptext34:
  6790                           	callstack 0
  6791  006410                     _LCD_Char:
  6792                           	callstack 26
  6793                           
  6794                           ;incstack = 0
  6795                           ;LCD_Char@dat stored from wreg
  6796  006410  6E08               	movwf	LCD_Char@dat^0,c
  6797  006412                     
  6798                           ;LCD_20x4.c: 39: void LCD_Char(unsigned char dat);LCD_20x4.c: 40: {;LCD_20x4.c: 41:  LAT
      +                          C = (LATC & 0x0f) | (0xF0 & dat);
  6799  006412  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  6800  006416  0EF0               	movlw	240
  6801  006418  1607               	andwf	??_LCD_Char^0,f,c
  6802  00641A  508B               	movf	139,w,c	;volatile
  6803  00641C  0B0F               	andlw	15
  6804  00641E  1007               	iorwf	??_LCD_Char^0,w,c
  6805  006420  6E8B               	movwf	139,c	;volatile
  6806  006422                     
  6807                           ;LCD_20x4.c: 42:  LATC0 = 1;
  6808  006422  808B               	bsf	3979,0,c	;volatile
  6809  006424                     
  6810                           ;LCD_20x4.c: 43:  LATC1 = 1;
  6811  006424  828B               	bsf	3979,1,c	;volatile
  6812  006426                     
  6813                           ;LCD_20x4.c: 44:  __nop();
  6814  006426  F000               	nop	
  6815  006428                     
  6816                           ;LCD_20x4.c: 45:  LATC1 = 0;
  6817  006428  928B               	bcf	3979,1,c	;volatile
  6818  00642A                     
  6819                           ;LCD_20x4.c: 46:  MSdelay(1);
  6820  00642A  0E00               	movlw	0
  6821  00642C  6E02               	movwf	(MSdelay@val+1)^0,c
  6822  00642E  0E01               	movlw	1
  6823  006430  6E01               	movwf	MSdelay@val^0,c
  6824  006432  EC98  F031         	call	_MSdelay	;wreg free
  6825  006436                     
  6826                           ;LCD_20x4.c: 47:     LATC = (LATC & 0x0f) | (dat<<4);
  6827  006436  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
  6828  00643A  3A07               	swapf	??_LCD_Char^0,f,c
  6829  00643C  0EF0               	movlw	240
  6830  00643E  1607               	andwf	??_LCD_Char^0,f,c
  6831  006440  508B               	movf	139,w,c	;volatile
  6832  006442  0B0F               	andlw	15
  6833  006444  1007               	iorwf	??_LCD_Char^0,w,c
  6834  006446  6E8B               	movwf	139,c	;volatile
  6835  006448                     
  6836                           ;LCD_20x4.c: 48:  LATC1 = 1;
  6837  006448  828B               	bsf	3979,1,c	;volatile
  6838  00644A                     
  6839                           ;LCD_20x4.c: 49:  __nop();
  6840  00644A  F000               	nop	
  6841  00644C                     
  6842                           ;LCD_20x4.c: 50:  LATC1 = 0;
  6843  00644C  928B               	bcf	3979,1,c	;volatile
  6844                           
  6845                           ;LCD_20x4.c: 51:  MSdelay(3);
  6846  00644E  0E00               	movlw	0
  6847  006450  6E02               	movwf	(MSdelay@val+1)^0,c
  6848  006452  0E03               	movlw	3
  6849  006454  6E01               	movwf	MSdelay@val^0,c
  6850  006456  EC98  F031         	call	_MSdelay	;wreg free
  6851  00645A  0012               	return		;funcret
  6852  00645C                     __end_of_LCD_Char:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function _LCD_Init *****************
  6856 ;; Defined at:
  6857 ;;		line 8 in file "LCD_20x4.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;		None
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;		None
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      void 
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6871 ;;      Params:         0       0       0       0       0       0       0       0       0
  6872 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6874 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6875 ;;Total ram usage:        0 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    2
  6878 ;; This function calls:
  6879 ;;		_LCD_Command
  6880 ;;		_MSdelay
  6881 ;; This function is called by:
  6882 ;;		_main
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text35
  6887  0060D6                     __ptext35:
  6888                           	callstack 0
  6889  0060D6                     _LCD_Init:
  6890                           	callstack 28
  6891  0060D6                     
  6892                           ;LCD_20x4.c: 10:     TRISC = 0;
  6893  0060D6  0E00               	movlw	0
  6894  0060D8  6E94               	movwf	148,c	;volatile
  6895  0060DA                     
  6896                           ;LCD_20x4.c: 11:     MSdelay(20);
  6897  0060DA  0E00               	movlw	0
  6898  0060DC  6E02               	movwf	(MSdelay@val+1)^0,c
  6899  0060DE  0E14               	movlw	20
  6900  0060E0  6E01               	movwf	MSdelay@val^0,c
  6901  0060E2  EC98  F031         	call	_MSdelay	;wreg free
  6902  0060E6                     
  6903                           ;LCD_20x4.c: 12:     LCD_Command(0x02);
  6904  0060E6  0E02               	movlw	2
  6905  0060E8  ECE2  F031         	call	_LCD_Command
  6906  0060EC                     
  6907                           ;LCD_20x4.c: 14:     LCD_Command(0x28);
  6908  0060EC  0E28               	movlw	40
  6909  0060EE  ECE2  F031         	call	_LCD_Command
  6910  0060F2                     
  6911                           ;LCD_20x4.c: 16:  LCD_Command(0x01);
  6912  0060F2  0E01               	movlw	1
  6913  0060F4  ECE2  F031         	call	_LCD_Command
  6914  0060F8                     
  6915                           ;LCD_20x4.c: 17:     LCD_Command(0x0c);
  6916  0060F8  0E0C               	movlw	12
  6917  0060FA  ECE2  F031         	call	_LCD_Command
  6918  0060FE                     
  6919                           ;LCD_20x4.c: 18:  LCD_Command(0x06);
  6920  0060FE  0E06               	movlw	6
  6921  006100  ECE2  F031         	call	_LCD_Command
  6922  006104  0012               	return		;funcret
  6923  006106                     __end_of_LCD_Init:
  6924                           	callstack 0
  6925                           
  6926 ;; *************** function _LCD_Clear *****************
  6927 ;; Defined at:
  6928 ;;		line 91 in file "LCD_20x4.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      void 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0, cstack
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6942 ;;      Params:         0       0       0       0       0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    2
  6949 ;; This function calls:
  6950 ;;		_LCD_Command
  6951 ;;		_MSdelay
  6952 ;; This function is called by:
  6953 ;;		_main
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text36
  6958  005FC6                     __ptext36:
  6959                           	callstack 0
  6960  005FC6                     _LCD_Clear:
  6961                           	callstack 28
  6962  005FC6                     
  6963                           ;LCD_20x4.c: 93:     LCD_Command(0x01);
  6964  005FC6  0E01               	movlw	1
  6965  005FC8  ECE2  F031         	call	_LCD_Command
  6966                           
  6967                           ;LCD_20x4.c: 94:     MSdelay(3);
  6968  005FCC  0E00               	movlw	0
  6969  005FCE  6E02               	movwf	(MSdelay@val+1)^0,c
  6970  005FD0  0E03               	movlw	3
  6971  005FD2  6E01               	movwf	MSdelay@val^0,c
  6972  005FD4  EC98  F031         	call	_MSdelay	;wreg free
  6973  005FD8  0012               	return		;funcret
  6974  005FDA                     __end_of_LCD_Clear:
  6975                           	callstack 0
  6976                           
  6977 ;; *************** function _LCD_Command *****************
  6978 ;; Defined at:
  6979 ;;		line 21 in file "LCD_20x4.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;  cmd             1    wreg     unsigned char 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  cmd             1    7[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0
  6994 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6995 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6996 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6997 ;;Total ram usage:        2 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    1
  7000 ;; This function calls:
  7001 ;;		_MSdelay
  7002 ;; This function is called by:
  7003 ;;		_LCD_Init
  7004 ;;		_LCD_String_xy
  7005 ;;		_LCD_Clear
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text37
  7010  0063C4                     __ptext37:
  7011                           	callstack 0
  7012  0063C4                     _LCD_Command:
  7013                           	callstack 27
  7014                           
  7015                           ;incstack = 0
  7016                           ;LCD_Command@cmd stored from wreg
  7017  0063C4  6E08               	movwf	LCD_Command@cmd^0,c
  7018  0063C6                     
  7019                           ;LCD_20x4.c: 21: void LCD_Command(unsigned char cmd );LCD_20x4.c: 22: {;LCD_20x4.c: 23: 
      +                           LATC = (LATC & 0x0f) |(0xF0 & cmd);
  7020  0063C6  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  7021  0063CA  0EF0               	movlw	240
  7022  0063CC  1607               	andwf	??_LCD_Command^0,f,c
  7023  0063CE  508B               	movf	139,w,c	;volatile
  7024  0063D0  0B0F               	andlw	15
  7025  0063D2  1007               	iorwf	??_LCD_Command^0,w,c
  7026  0063D4  6E8B               	movwf	139,c	;volatile
  7027  0063D6                     
  7028                           ;LCD_20x4.c: 24:  LATC0 = 0;
  7029  0063D6  908B               	bcf	3979,0,c	;volatile
  7030  0063D8                     
  7031                           ;LCD_20x4.c: 25:  LATC1 = 1;
  7032  0063D8  828B               	bsf	3979,1,c	;volatile
  7033  0063DA                     
  7034                           ;LCD_20x4.c: 26:  __nop();
  7035  0063DA  F000               	nop	
  7036  0063DC                     
  7037                           ;LCD_20x4.c: 27:  LATC1 = 0;
  7038  0063DC  928B               	bcf	3979,1,c	;volatile
  7039  0063DE                     
  7040                           ;LCD_20x4.c: 28:  MSdelay(1);
  7041  0063DE  0E00               	movlw	0
  7042  0063E0  6E02               	movwf	(MSdelay@val+1)^0,c
  7043  0063E2  0E01               	movlw	1
  7044  0063E4  6E01               	movwf	MSdelay@val^0,c
  7045  0063E6  EC98  F031         	call	_MSdelay	;wreg free
  7046  0063EA                     
  7047                           ;LCD_20x4.c: 29:     LATC = (LATC & 0x0f) | (cmd<<4);
  7048  0063EA  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  7049  0063EE  3A07               	swapf	??_LCD_Command^0,f,c
  7050  0063F0  0EF0               	movlw	240
  7051  0063F2  1607               	andwf	??_LCD_Command^0,f,c
  7052  0063F4  508B               	movf	139,w,c	;volatile
  7053  0063F6  0B0F               	andlw	15
  7054  0063F8  1007               	iorwf	??_LCD_Command^0,w,c
  7055  0063FA  6E8B               	movwf	139,c	;volatile
  7056  0063FC                     
  7057                           ;LCD_20x4.c: 30:  LATC1 = 1;
  7058  0063FC  828B               	bsf	3979,1,c	;volatile
  7059  0063FE                     
  7060                           ;LCD_20x4.c: 31:  __nop();
  7061  0063FE  F000               	nop	
  7062  006400                     
  7063                           ;LCD_20x4.c: 32:  LATC1 = 0;
  7064  006400  928B               	bcf	3979,1,c	;volatile
  7065                           
  7066                           ;LCD_20x4.c: 33:  MSdelay(3);
  7067  006402  0E00               	movlw	0
  7068  006404  6E02               	movwf	(MSdelay@val+1)^0,c
  7069  006406  0E03               	movlw	3
  7070  006408  6E01               	movwf	MSdelay@val^0,c
  7071  00640A  EC98  F031         	call	_MSdelay	;wreg free
  7072  00640E  0012               	return		;funcret
  7073  006410                     __end_of_LCD_Command:
  7074                           	callstack 0
  7075                           
  7076 ;; *************** function _MSdelay *****************
  7077 ;; Defined at:
  7078 ;;		line 97 in file "LCD_20x4.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;  val             2    0[COMRAM] unsigned int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  j               2    4[COMRAM] unsigned int 
  7083 ;;  i               2    2[COMRAM] unsigned int 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7093 ;;      Params:         2       0       0       0       0       0       0       0       0
  7094 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7096 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7097 ;;Total ram usage:        6 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_keyfind
  7103 ;;		_main
  7104 ;;		_entregarproducto
  7105 ;;		_LCD_Init
  7106 ;;		_LCD_Command
  7107 ;;		_LCD_Char
  7108 ;;		_LCD_Clear
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text38
  7113  006330                     __ptext38:
  7114                           	callstack 0
  7115  006330                     _MSdelay:
  7116                           	callstack 29
  7117  006330                     
  7118                           ;LCD_20x4.c: 97: void MSdelay(unsigned int val);LCD_20x4.c: 98: {;LCD_20x4.c: 99:  unsig
      +                          ned int i,j;;LCD_20x4.c: 100:  for(i=0;i<val;i++)
  7119  006330  0E00               	movlw	0
  7120  006332  6E04               	movwf	(MSdelay@i+1)^0,c
  7121  006334  0E00               	movlw	0
  7122  006336  6E03               	movwf	MSdelay@i^0,c
  7123  006338  EFB1  F031         	goto	l2547
  7124  00633C                     l2535:
  7125                           
  7126                           ;LCD_20x4.c: 101:      for(j=0;j<165;j++);
  7127  00633C  0E00               	movlw	0
  7128  00633E  6E06               	movwf	(MSdelay@j+1)^0,c
  7129  006340  0E00               	movlw	0
  7130  006342  6E05               	movwf	MSdelay@j^0,c
  7131  006344                     l2541:
  7132  006344  4A05               	infsnz	MSdelay@j^0,f,c
  7133  006346  2A06               	incf	(MSdelay@j+1)^0,f,c
  7134  006348  5006               	movf	(MSdelay@j+1)^0,w,c
  7135  00634A  E109               	bnz	u1930
  7136  00634C  0EA5               	movlw	165
  7137  00634E  5C05               	subwf	MSdelay@j^0,w,c
  7138  006350  A0D8               	btfss	status,0,c
  7139  006352  EFAD  F031         	goto	u1931
  7140  006356  EFAF  F031         	goto	u1930
  7141  00635A                     u1931:
  7142  00635A  EFA2  F031         	goto	l2541
  7143  00635E                     u1930:
  7144  00635E  4A03               	infsnz	MSdelay@i^0,f,c
  7145  006360  2A04               	incf	(MSdelay@i+1)^0,f,c
  7146  006362                     l2547:
  7147  006362  5001               	movf	MSdelay@val^0,w,c
  7148  006364  5C03               	subwf	MSdelay@i^0,w,c
  7149  006366  5002               	movf	(MSdelay@val+1)^0,w,c
  7150  006368  5804               	subwfb	(MSdelay@i+1)^0,w,c
  7151  00636A  A0D8               	btfss	status,0,c
  7152  00636C  EFBA  F031         	goto	u1941
  7153  006370  EFBC  F031         	goto	u1940
  7154  006374                     u1941:
  7155  006374  EF9E  F031         	goto	l2535
  7156  006378                     u1940:
  7157  006378  0012               	return		;funcret
  7158  00637A                     __end_of_MSdelay:
  7159                           	callstack 0
  7160                           
  7161 ;; *************** function _I2C_Init *****************
  7162 ;; Defined at:
  7163 ;;		line 29 in file "I2C.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;		None
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7177 ;;      Params:         0       0       0       0       0       0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7180 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7181 ;;Total ram usage:        0 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_main
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text39
  7191  006016                     __ptext39:
  7192                           	callstack 0
  7193  006016                     _I2C_Init:
  7194                           	callstack 30
  7195  006016                     
  7196                           ;I2C.c: 31:     TRISB0=1;
  7197  006016  8093               	bsf	3987,0,c	;volatile
  7198                           
  7199                           ;I2C.c: 32:  TRISB1=1;
  7200  006018  8293               	bsf	3987,1,c	;volatile
  7201  00601A                     
  7202                           ;I2C.c: 33:  SSPSTAT=80;
  7203  00601A  0E50               	movlw	80
  7204  00601C  6EC7               	movwf	199,c	;volatile
  7205                           
  7206                           ;I2C.c: 34:     SSPCON1=0x28;
  7207  00601E  0E28               	movlw	40
  7208  006020  6EC6               	movwf	198,c	;volatile
  7209                           
  7210                           ;I2C.c: 36:  SSPCON2=0;
  7211  006022  0E00               	movlw	0
  7212  006024  6EC5               	movwf	197,c	;volatile
  7213                           
  7214                           ;I2C.c: 37:     SSPADD=((8000000/(4*100000))-1);
  7215  006026  0E13               	movlw	19
  7216  006028  6EC8               	movwf	200,c	;volatile
  7217  00602A                     
  7218                           ;I2C.c: 38:     SSPIE=1;
  7219  00602A  869D               	bsf	3997,3,c	;volatile
  7220  00602C                     
  7221                           ;I2C.c: 39:     SSPIF=0;
  7222  00602C  969E               	bcf	3998,3,c	;volatile
  7223  00602E  0012               	return		;funcret
  7224  006030                     __end_of_I2C_Init:
  7225                           	callstack 0
  7226                           
  7227                           	psect	rparam
  7228  0000                     
  7229                           	psect	idloc
  7230                           
  7231                           ;Config register IDLOC0 @ 0x200000
  7232                           ;	unspecified, using default values
  7233  200000                     	org	2097152
  7234  200000  FF                 	db	255
  7235                           
  7236                           ;Config register IDLOC1 @ 0x200001
  7237                           ;	unspecified, using default values
  7238  200001                     	org	2097153
  7239  200001  FF                 	db	255
  7240                           
  7241                           ;Config register IDLOC2 @ 0x200002
  7242                           ;	unspecified, using default values
  7243  200002                     	org	2097154
  7244  200002  FF                 	db	255
  7245                           
  7246                           ;Config register IDLOC3 @ 0x200003
  7247                           ;	unspecified, using default values
  7248  200003                     	org	2097155
  7249  200003  FF                 	db	255
  7250                           
  7251                           ;Config register IDLOC4 @ 0x200004
  7252                           ;	unspecified, using default values
  7253  200004                     	org	2097156
  7254  200004  FF                 	db	255
  7255                           
  7256                           ;Config register IDLOC5 @ 0x200005
  7257                           ;	unspecified, using default values
  7258  200005                     	org	2097157
  7259  200005  FF                 	db	255
  7260                           
  7261                           ;Config register IDLOC6 @ 0x200006
  7262                           ;	unspecified, using default values
  7263  200006                     	org	2097158
  7264  200006  FF                 	db	255
  7265                           
  7266                           ;Config register IDLOC7 @ 0x200007
  7267                           ;	unspecified, using default values
  7268  200007                     	org	2097159
  7269  200007  FF                 	db	255
  7270                           
  7271                           	psect	config
  7272                           
  7273                           ;Config register CONFIG1L @ 0x300000
  7274                           ;	PLL Prescaler Selection bits
  7275                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7276                           ;	System Clock Postscaler Selection bits
  7277                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7278                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7279                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7280  300000                     	org	3145728
  7281  300000  00                 	db	0
  7282                           
  7283                           ;Config register CONFIG1H @ 0x300001
  7284                           ;	Oscillator Selection bits
  7285                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7286                           ;	Fail-Safe Clock Monitor Enable bit
  7287                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7288                           ;	Internal/External Oscillator Switchover bit
  7289                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7290  300001                     	org	3145729
  7291  300001  09                 	db	9
  7292                           
  7293                           ;Config register CONFIG2L @ 0x300002
  7294                           ;	Power-up Timer Enable bit
  7295                           ;	PWRT = OFF, PWRT disabled
  7296                           ;	Brown-out Reset Enable bits
  7297                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7298                           ;	Brown-out Reset Voltage bits
  7299                           ;	BORV = 3, Minimum setting 2.05V
  7300                           ;	USB Voltage Regulator Enable bit
  7301                           ;	VREGEN = OFF, USB voltage regulator disabled
  7302  300002                     	org	3145730
  7303  300002  1F                 	db	31
  7304                           
  7305                           ;Config register CONFIG2H @ 0x300003
  7306                           ;	Watchdog Timer Enable bit
  7307                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7308                           ;	Watchdog Timer Postscale Select bits
  7309                           ;	WDTPS = 32768, 1:32768
  7310  300003                     	org	3145731
  7311  300003  1E                 	db	30
  7312                           
  7313                           ; Padding undefined space
  7314  300004                     	org	3145732
  7315  300004  FF                 	db	255
  7316                           
  7317                           ;Config register CONFIG3H @ 0x300005
  7318                           ;	CCP2 MUX bit
  7319                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7320                           ;	PORTB A/D Enable bit
  7321                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7322                           ;	Low-Power Timer 1 Oscillator Enable bit
  7323                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7324                           ;	MCLR Pin Enable bit
  7325                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7326  300005                     	org	3145733
  7327  300005  01                 	db	1
  7328                           
  7329                           ;Config register CONFIG4L @ 0x300006
  7330                           ;	Stack Full/Underflow Reset Enable bit
  7331                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7332                           ;	Single-Supply ICSP Enable bit
  7333                           ;	LVP = OFF, Single-Supply ICSP disabled
  7334                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7335                           ;	ICPRT = OFF, ICPORT disabled
  7336                           ;	Extended Instruction Set Enable bit
  7337                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7338                           ;	Background Debugger Enable bit
  7339                           ;	DEBUG = 0x1, unprogrammed default
  7340  300006                     	org	3145734
  7341  300006  81                 	db	129
  7342                           
  7343                           ; Padding undefined space
  7344  300007                     	org	3145735
  7345  300007  FF                 	db	255
  7346                           
  7347                           ;Config register CONFIG5L @ 0x300008
  7348                           ;	Code Protection bit
  7349                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7350                           ;	Code Protection bit
  7351                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7352                           ;	Code Protection bit
  7353                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7354                           ;	Code Protection bit
  7355                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7356  300008                     	org	3145736
  7357  300008  0F                 	db	15
  7358                           
  7359                           ;Config register CONFIG5H @ 0x300009
  7360                           ;	Boot Block Code Protection bit
  7361                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7362                           ;	Data EEPROM Code Protection bit
  7363                           ;	CPD = OFF, Data EEPROM is not code-protected
  7364  300009                     	org	3145737
  7365  300009  C0                 	db	192
  7366                           
  7367                           ;Config register CONFIG6L @ 0x30000A
  7368                           ;	Write Protection bit
  7369                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7370                           ;	Write Protection bit
  7371                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7372                           ;	Write Protection bit
  7373                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7374                           ;	Write Protection bit
  7375                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7376  30000A                     	org	3145738
  7377  30000A  0F                 	db	15
  7378                           
  7379                           ;Config register CONFIG6H @ 0x30000B
  7380                           ;	Configuration Register Write Protection bit
  7381                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7382                           ;	Boot Block Write Protection bit
  7383                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7384                           ;	Data EEPROM Write Protection bit
  7385                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7386  30000B                     	org	3145739
  7387  30000B  E0                 	db	224
  7388                           
  7389                           ;Config register CONFIG7L @ 0x30000C
  7390                           ;	Table Read Protection bit
  7391                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7392                           ;	Table Read Protection bit
  7393                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7394                           ;	Table Read Protection bit
  7395                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7396                           ;	Table Read Protection bit
  7397                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7398  30000C                     	org	3145740
  7399  30000C  0F                 	db	15
  7400                           
  7401                           ;Config register CONFIG7H @ 0x30000D
  7402                           ;	Boot Block Table Read Protection bit
  7403                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7404  30000D                     	org	3145741
  7405  30000D  40                 	db	64
  7406                           tosu	equ	0xFFF
  7407                           tosh	equ	0xFFE
  7408                           tosl	equ	0xFFD
  7409                           stkptr	equ	0xFFC
  7410                           pclatu	equ	0xFFB
  7411                           pclath	equ	0xFFA
  7412                           pcl	equ	0xFF9
  7413                           tblptru	equ	0xFF8
  7414                           tblptrh	equ	0xFF7
  7415                           tblptrl	equ	0xFF6
  7416                           tablat	equ	0xFF5
  7417                           prodh	equ	0xFF4
  7418                           prodl	equ	0xFF3
  7419                           indf0	equ	0xFEF
  7420                           postinc0	equ	0xFEE
  7421                           postdec0	equ	0xFED
  7422                           preinc0	equ	0xFEC
  7423                           plusw0	equ	0xFEB
  7424                           fsr0h	equ	0xFEA
  7425                           fsr0l	equ	0xFE9
  7426                           wreg	equ	0xFE8
  7427                           indf1	equ	0xFE7
  7428                           postinc1	equ	0xFE6
  7429                           postdec1	equ	0xFE5
  7430                           preinc1	equ	0xFE4
  7431                           plusw1	equ	0xFE3
  7432                           fsr1h	equ	0xFE2
  7433                           fsr1l	equ	0xFE1
  7434                           bsr	equ	0xFE0
  7435                           indf2	equ	0xFDF
  7436                           postinc2	equ	0xFDE
  7437                           postdec2	equ	0xFDD
  7438                           preinc2	equ	0xFDC
  7439                           plusw2	equ	0xFDB
  7440                           fsr2h	equ	0xFDA
  7441                           fsr2l	equ	0xFD9
  7442                           status	equ	0xFD8

Data Sizes:
    Strings     352
    Constant    0
    Data        39
    BSS         64
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    146     160
    BANK1           256      0      91
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Rtc@year(BANK0[10]), Rtc@month(BANK0[10]), Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), 
		 -> Rtc@mins(BANK0[10]), Rtc@secs(BANK0[10]), main@c1_402(BANK0[6]), main@c1(BANK0[6]), 
		 -> main@c(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_35(CODE[10]), STR_34(CODE[9]), 
		 -> STR_33(CODE[3]), STR_32(CODE[4]), STR_31(CODE[9]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_24(CODE[3]), STR_22(CODE[3]), STR_19(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_35(CODE[10]), STR_34(CODE[9]), 
		 -> STR_33(CODE[3]), STR_32(CODE[4]), STR_31(CODE[9]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_24(CODE[3]), STR_22(CODE[3]), STR_19(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_37(CODE[4]), STR_36(CODE[4]), STR_35(CODE[10]), STR_34(CODE[9]), 
		 -> STR_33(CODE[3]), STR_32(CODE[4]), STR_31(CODE[9]), STR_30(CODE[4]), 
		 -> STR_29(CODE[4]), STR_24(CODE[3]), STR_22(CODE[3]), STR_19(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> Rtc@year(BANK0[10]), Rtc@month(BANK0[10]), Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), 
		 -> Rtc@mins(BANK0[10]), Rtc@secs(BANK0[10]), main@c1_402(BANK0[6]), main@c1(BANK0[6]), 
		 -> main@c(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1089_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Rtc@year(BANK0[10]), Rtc@month(BANK0[10]), Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), 
		 -> Rtc@mins(BANK0[10]), Rtc@secs(BANK0[10]), main@c1_402(BANK0[6]), main@c1(BANK0[6]), 
		 -> main@c(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> Rtc@year(BANK0[10]), Rtc@month(BANK0[10]), Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), 
		 -> Rtc@mins(BANK0[10]), Rtc@secs(BANK0[10]), main@c1_402(BANK0[6]), main@c1(BANK0[6]), 
		 -> main@c(BANK0[6]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 21
		 -> Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), STR_28(CODE[3]), STR_27(CODE[3]), 
		 -> STR_26(CODE[20]), main@c1_402(BANK0[6]), STR_23(CODE[15]), main@c1(BANK0[6]), 
		 -> main@c(BANK0[6]), STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[14]), 
		 -> STR_6(CODE[14]), STR_5(CODE[16]), STR_4(CODE[19]), STR_3(CODE[13]), 
		 -> STR_2(CODE[21]), STR_1(CODE[13]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_44(CODE[4]), STR_43(CODE[4]), STR_42(CODE[4]), STR_41(CODE[4]), 
		 -> STR_40(CODE[4]), STR_39(CODE[4]), STR_38(CODE[4]), Rtc@year(BANK0[10]), 
		 -> Rtc@month(BANK0[10]), Rtc@date(BANK0[10]), Rtc@hours(BANK0[10]), Rtc@mins(BANK0[10]), 
		 -> Rtc@secs(BANK0[10]), STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[20]), 
		 -> STR_25(CODE[15]), main@c1_402(BANK0[6]), STR_23(CODE[15]), main@c1(BANK0[6]), 
		 -> STR_21(CODE[19]), STR_20(CODE[8]), main@c(BANK0[6]), STR_18(CODE[5]), 
		 -> STR_17(CODE[5]), STR_16(CODE[14]), STR_15(CODE[14]), STR_14(CODE[14]), 
		 -> STR_13(CODE[16]), STR_12(CODE[14]), STR_11(CODE[19]), STR_10(CODE[14]), 
		 -> STR_9(CODE[18]), STR_8(CODE[14]), STR_7(CODE[15]), STR_6(CODE[14]), 
		 -> STR_5(CODE[16]), STR_4(CODE[19]), STR_3(CODE[13]), STR_2(CODE[21]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _keyfind->_MSdelay
    _entregarproductos->_entregarproducto
    _entregarproducto->_MSdelay
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RTC_Read_Clock->_I2C_Read
    _RTC_Read_Clock->_I2C_Repeated_Start
    _RTC_Read_Clock->_I2C_Start
    _RTC_Read_Calendar->_I2C_Read
    _RTC_Read_Calendar->_I2C_Repeated_Start
    _RTC_Read_Calendar->_I2C_Start
    _I2C_Start->_I2C_Write
    _I2C_Repeated_Start->_I2C_Write
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_Rtc
    _Rtc->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   63028
                                             93 BANK0     53    53      0
                           _I2C_Init
                          _LCD_Clear
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            _MSdelay
                                _Rtc
                  _entregarproductos
                            _keyfind
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              0     0      0    1536
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _entregarproductos                                    2     2      0    1768
                                              8 COMRAM     2     2      0
                   _entregarproducto
 ---------------------------------------------------------------------------------
 (2) _entregarproducto                                     2     0      2    1700
                                              6 COMRAM     2     0      2
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _Rtc                                                 71    71      0   25582
                                             22 BANK0     71    71      0
                           _I2C_Stop
                         _LCD_String
                      _LCD_String_xy
                  _RTC_Read_Calendar
                     _RTC_Read_Clock
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   13032
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Clock                                       2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_Read_Calendar                                    2     2      0     177
                                              2 COMRAM     2     2      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMRAM     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      45
                                              0 COMRAM     2     2      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (4) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     1      3    8191
                                             10 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2    3525
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0    1580
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    3116
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0    3116
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0    1580
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2    1536
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _LCD_Clear
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _MSdelay
   _Rtc
     _I2C_Stop
     _LCD_String
       _LCD_Char
         _MSdelay
     _LCD_String_xy
       _LCD_Command
         _MSdelay
       _LCD_String
         _LCD_Char
           _MSdelay
     _RTC_Read_Calendar
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _RTC_Read_Clock
       _I2C_Read
         _I2C_Ack
         _I2C_Nack
         _I2C_Ready
       _I2C_Repeated_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Start
         _I2C_Write
           _I2C_Ready
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _entregarproductos
     _entregarproducto
       _MSdelay
   _keyfind
     _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5B       7       35.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     92      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      20        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Dec 14 23:37:14 2020

                    __size_of_I2C_Ready 0012                      __size_of_I2C_Start 002E  
                          ?_LCD_Command 0001                             _SSPSTATbits 000FC7  
                    __size_of_I2C_Write 0022                                      l42 6D2A  
                                    l34 6CA2                                      l29 6C5E  
                                    l38 6CE6                                      l48 6DC6  
                           ?_LCD_String 0009  RTC_Read_Calendar@read_calendar_address 0004  
                                   l204 7616                                     l320 640E  
                                   l216 6694                                     l401 61DE  
                                   l209 632E                                     l410 5FC2  
                                   l402 61E4                                     l323 645A  
                                   l411 5FC4                                     l405 602E  
                                   l317 6104                                     l350 6378  
                                   l342 5FD8                                     l182 63C2  
                                   l335 6716                                     l159 7A0E  
                                   l408 5FB4                                     l432 607E  
                                   l329 6564                                     l425 60AC  
                                   l441 6004                                     l185 6506  
                                   l434 608C                                     l339 6722  
                                   l427 60BA                                     l443 6012  
                                   l436 60A6                                     l453 5FDE  
                                   l429 60D4                                     l445 6014  
                                   l462 6000                                     l456 5FEC  
                                   l449 6050                                     l459 5FF2  
                                   l397 61B0                                     l399 61BE  
                                   l592 6A16                                     l579 6B9E  
              __end_of_entregarproducto 6696                                     _PEN 007E2A  
                                   _Day 0110                                     _Rtc 733C  
                                   _abs 6222                         __end_of_I2C_Ack 5FEE  
                                   _pad 6724                                     _min 00F6  
                                   _sec 00F8                                     prod 000FF3  
                                   wreg 000FE8                             LCD_Char@dat 0008  
                                  ?_Rtc 0001                                    ?_abs 0013  
                                  l1212 709A                                    l1221 7138  
                                  l1302 613A                                    l1214 70A2  
                                  l1207 78FA                                    l1143 64AC  
                                  l1312 65C2                                    l1307 65BA  
                                  l1235 72D6                                    l1244 7060  
                                  l3021 601A                                    l1261 6260  
                                  l1181 67E8                                    l1237 733A  
                                  l1253 661C                                    l3101 7544  
                                  l3013 6DB4                                    l3005 6D8C  
                                  l1270 6172                                    l1318 61AA  
                                  l1254 6624                                    l3023 602A  
                                  l3031 60E6                                    l3111 7594  
                                  l3103 7554                                    l3007 6D9E  
                                  l1176 676A                                    l1264 6220  
                                  l3025 602C                                    l3041 5FC6  
                                  l3033 60EC                                    l2401 612E  
                                  l3113 75A4                                    l3105 7564  
                                  l3201 7A8E                                    l1258 6258  
                                  l3019 6016                                    l3035 60F2  
                                  l3027 60D6                                    l2411 6A1C  
                                  l1179 67AC                                    l1187 76B8  
                                  l3107 7574                                    l3051 735E  
                                  l3043 733C                                    l3131 630E  
                                  l3123 62E8                                    l3211 7AC4  
                                  l3203 7A9A                                    l3037 60F8  
                                  l3029 60DA                                    l2421 6A7C  
                                  l2413 6A2A                                    l1285 68B2  
                                  l1293 62E6                                    l2501 678A  
                                  l1189 76C0                                    l2405 6174  
                                  l3109 7584                                    l3117 75B4  
                                  l3061 73AE                                    l3053 736E  
                                  l3045 7342                                    l3133 6312  
                                  l3301 7D22                                    l3221 7B06  
                                  l3205 7A9E                                    l3213 7AE2  
                                  l3141 792E                                    l3039 60FE  
                                  l2431 6AC6                                    l2423 6A80  
                                  l2415 6A4A                                    l2511 6222  
                                  l2503 678E                                    l3071 7424  
                                  l3063 73CA                                    l3055 737C  
                                  l3047 7354                                    l3311 7D80  
                                  l3303 7D3E                                    l3231 7B4A  
                                  l3223 7B20                                    l3215 7AE6  
                                  l3207 7AAA                                    l3151 793E  
                                  l3143 7930                                    l3135 78FC  
                                  l1296 5FB2                                    l2441 6B36  
                                  l2433 6AD4                                    l2425 6A8C  
                                  l2417 6A4E                                    l2409 6A18  
                                  l2513 623C                                    l2505 67BC  
                                  l2601 789C                                    l3081 7494  
                                  l3065 73E8                                    l3057 7392  
                                  l3073 7434                                    l3049 7358  
                                  l3129 62F0                                    l3321 7DD2  
                                  l3313 7D92                                    l3305 7D4E  
                                  l3241 7B98                                    l3233 7B56  
                                  l3225 7B2C                                    l3209 7AB8  
                                  l3217 7AF2                                    l3161 7976  
                                  l3153 794A                                    l3145 7934  
                                  l3137 790A                                    l2443 6B48  
                                  l2435 6AE6                                    l2427 6AAA  
                                  l2419 6A5C                                    l2507 67D0  
                                  l2603 78AE                                    l2515 613C  
                                  l2523 6566                                    l3091 74DA  
                                  l3083 74A6                                    l3075 743C  
                                  l3067 7406                                    l3059 73A4  
                                  l3323 7DDA                                    l3331 7E2C  
                                  l3315 7D9E                                    l3307 7D56  
                                  l3251 7BCE                                    l3243 7B98  
                                  l3227 7B30                                    l3235 7B74  
                                  l3219 7B06                                    l3171 79A6  
                                  l3163 797A                                    l3155 7954  
                                  l3147 7938                                    l3139 791C  
                                  l2541 6344                                    l2533 6330  
                                  l2701 6426                                    l2437 6B14  
                                  l2429 6AB2                                    l2445 6B4E  
                                  l2461 68EA                                    l2453 68B4  
                                  l2381 6836                                    l2373 67EA  
                                  l2605 78BA                                    l2621 70B8  
                                  l2613 7062                                    l3093 74F8  
                                  l3077 7458                                    l3085 74B2  
                                  l3069 7418                                    l3341 7E72  
                                  l3333 7E30                                    l3325 7DF8  
                                  l3317 7DC2                                    l3309 7D74  
                                  l3253 7BDC                                    l3245 7BB2  
                                  l3261 7C16                                    l3237 7B78  
                                  l3229 7B3C                                    l3181 79F0  
                                  l3173 79B2                                    l3165 7996  
                                  l3149 793A                                    l2543 6348  
                                  l2535 633C                                    l2711 644A  
                                  l2703 6428                                    l2447 6B5E  
                                  l2439 6B34                                    l2471 6952  
                                  l2463 68F8                                    l2455 68B8  
                                  l2383 686C                                    l2375 67FC  
                                  l2391 62C2                                    l2607 78C2  
                                  l2551 7618                                    l2519 61E6  
                                  l2527 659C                                    l2631 70F8  
                                  l2623 70C0                                    l2615 7072  
                                  l3095 7516                                    l3087 74B8  
                                  l3079 7476                                    l3343 7E84  
                                  l3335 7E34                                    l3327 7E0A  
                                  l3319 7DC6                                    l3271 7C54  
                                  l3263 7C2A                                    l3255 7BE8  
                                  l3247 7BBE                                    l3239 7B84  
                                  l3191 7A48                                    l3183 7A02  
                                  l3175 79C4                                    l3167 799E  
                                  l3159 795C                                    l2545 635E  
                                  l2713 644C                                    l2705 642A  
                                  l2449 6B7E                                    l2473 6960  
                                  l2481 69C6                                    l2465 6918  
                                  l2457 68C6                                    l2377 680E  
                                  l2393 62C6                                    l2609 78D2  
                                  l2561 7692                                    l2553 7638  
                                  l2529 65AE                                    l2641 716C  
                                  l2633 7100                                    l2625 70E0  
                                  l2617 7074                                    l2721 6DEC  
                                  l3097 7528                                    l3089 74BC  
                                  l3337 7E4A                                    l3329 7E1C  
                                  l3281 7C9C                                    l3273 7C60  
                                  l3265 7C2A                                    l3249 7BC2  
                                  l3257 7C06                                    l3193 7A5A  
                                  l3185 7A12                                    l3177 79D6  
                                  l3169 79A2                                    l2547 6362  
                                  l2707 6436                                    l2715 5FDA  
                                  l2811 61E2                                    l2803 61AE  
                                  l2483 69D6                                    l2475 698E  
                                  l2467 6936                                    l2459 68E6  
                                  l2379 6818                                    l2387 62A4  
                                  l2395 6106                                    l2491 6734  
                                  l2571 76EE                                    l2563 76AC  
                                  l2555 7660                                    l2643 717E  
                                  l2651 71DE                                    l2635 711C  
                                  l2627 70E8                                    l2619 708E  
                                  l2731 6E5A                                    l2723 6DFA  
                                  l3099 7534                                    l3339 7E66  
                                  l3291 7CD6                                    l3275 7C6E  
                                  l3267 7C44                                    l3283 7CA8  
                                  l3259 7C0A                                    l3195 7A62  
                                  l3187 7A24                                    l3179 79DE  
                                  l2821 63D8                                    l2709 6448  
                                  l2717 5FEE                                    l2549 5FB4  
                                  l2805 61C2                                    l2485 69F6  
                                  l2477 69AE                                    l2469 693E  
                                  l2389 62B0                                    l2397 6112  
                                  l2493 6748                                    l2581 778E  
                                  l2573 76F6                                    l2565 76C8  
                                  l2557 7680                                    l2661 7274  
                                  l2653 71EE                                    l2637 712C  
                                  l2629 70F2                                    l2741 6F22  
                                  l2733 6EA2                                    l2725 6E0C  
                                  l2901 663A                                    l3293 7CE8  
                                  l3285 7CB4                                    l3277 7C7A  
                                  l3269 7C50                                    l3197 7A74  
                                  l3189 7A36                                    l2831 63FC  
                                  l2823 63DA                                    l2807 61D2  
                                  l2815 6002                                    l2479 69C0  
                                  l2399 6116                                    l2495 6756  
                                  l2591 784A                                    l2583 7794  
                                  l2575 7700                                    l2567 76DA  
                                  l2559 7690                                    l2671 72EC  
                                  l2663 7292                                    l2655 71F4  
                                  l2647 71B8                                    l2743 6F38  
                                  l2751 6FBE                                    l2727 6E12  
                                  l2719 6DC8                                    l2911 666E  
                                  l2903 663E                                    l3295 7CFA  
                                  l3287 7CB8                                    l3279 7C98  
                                  l3199 7A74                                    l2833 63FE  
                                  l2825 63DC                                    l2817 63C6  
                                  l2809 61DA                                    l2681 6036  
                                  l2497 6762                                    l2489 6724  
                                  l2593 7864                                    l2577 7706  
                                  l2585 77F8                                    l2569 76E8  
                                  l2673 72FC                                    l2665 72AC  
                                  l2657 71FA                                    l2649 71CA  
                                  l2753 6FE2                                    l2761 7010  
                                  l2745 6F46                                    l2737 6EDA  
                                  l2729 6E36                                    l2841 65DA  
                                  l2913 6682                                    l2905 6652  
                                  l2921 6BA8                                    l3297 7D02  
                                  l3289 7CC4                                    l2835 6400  
                                  l2827 63DE                                    l2819 63D6  
                                  l2851 66C8                                    l2691 604E  
                                  l2683 603A                                    l2499 6776  
                                  l2587 7812                                    l2595 7874  
                                  l2579 7788                                    l2675 7312  
                                  l2667 72C6                                    l2659 7258  
                                  l2763 701E                                    l2755 6FF0  
                                  l2747 6F82                                    l2739 6EFE  
                                  l2843 6600                                    l2915 6686  
                                  l2907 6656                                    l2931 6BEA  
                                  l2923 6BB0                                    l3299 7D0E  
                                  l2829 63EA                                    l2781 6534  
                                  l2853 66D6                                    l2861 6716  
                                  l2845 6698                                    l2685 6048  
                                  l2597 7886                                    l2589 7830  
                                  l2669 72E6                                    l2757 7004  
                                  l2837 65C4                                    l2917 6692  
                                  l2909 666A                                    l2941 6C30  
                                  l2933 6BF2                                    l2925 6BC2  
                                  ?_pad 0011                                    l2695 6412  
                                  l2775 6508                                    l2855 66E8  
                                  l2847 66A8                                    l2679 6032  
                                  l2791 607C                                    l2783 60AA  
                                  l2599 7896                                    l2767 702A  
                                  l2839 65CC                                    l2871 649A  
                                  l2863 645C                                    l3399 75D8  
                                  l2951 6C58                                    l2943 6C34  
                                  l2935 6C04                                    l2927 6BDA  
                                  l2919 6BA0                                    l2697 6422  
                                  l2777 650C                                    l2857 66F6  
                                  l2849 66B6                                    l2881 63AE  
                                  l2769 704E                                    l2865 646E  
                                  l2961 6C94                                    l2953 6C74  
                                  l2945 6C3A                                    l2937 6C1C  
                                  l2929 6BE6                                    l2699 6424  
                                  l2779 6530                                    l2859 6708  
                                  l2795 60A0                                    l2787 60CE  
                                  l2891 64E2                                    l2883 63BE  
                                  l2875 637C                                    l2867 6476  
                                  l2971 6CC6                                    l2963 6C9C  
                                  l2955 6C78                                    l2947 6C3E  
                                  l2939 6C28                                    l2797 60A6  
                                  l2893 64F2                                    l2885 64B0  
                                  l2877 638E                                    l2869 647E  
                                  l2981 6D06                                    l2973 6CD8  
                                  l2965 6CB8                                    l2957 6C7E  
                                  l2949 6C50                                    l2895 6502  
                                  l2887 64C2                                    l2879 639E  
                                  l2991 6D4E                                    l2983 6D0A  
                                  l2975 6CE0                                    l2967 6CBC  
                                  l2959 6C82                                    l2889 64D2  
                                  l2897 6626                                    l2985 6D1C  
                                  l2977 6CFC                                    l2969 6CC2  
                                  l2899 6628                                    l2987 6D24  
                                  l2979 6D00                                    l2997 6D64  
                                  l2989 6D3C                                    l2999 6D76  
                                  STR_1 7F89                                    STR_2 7E9F  
                                  STR_3 7F96                                    STR_4 7EDB  
                                  STR_5 7F13                                    STR_6 7F51  
                                  STR_7 7F42                                    STR_8 7F5F  
                                  STR_9 7F01                                    u2000 76AC  
                                  u2001 76A8                                    u2010 76DA  
                                  u2011 76D6                                    u2100 78AE  
                                  u2020 76E8                                    u2101 78AA  
                                  u2021 76E4                                    u2030 7812  
                                  u2110 7072                                    u2031 780E  
                                  u2111 706E                                    u2040 7830  
                                  u2200 71CA                                    u2120 708E  
                                  u2041 782C                                    u2201 71C6  
                                  u2121 708A                                    u2050 784A  
                                  u2210 7232                                    u2130 70B8  
                                  u2051 7846                                    u2131 70B4  
                                  u2300 6000                                    u2060 7864  
                                  u2220 7274                                    u2140 711C  
                                  u2301 5FFC                                    u2061 7860  
                                  u2221 7270                                    u2141 7118  
                                  u2070 7874                                    u2230 7292  
                                  u2150 7166                                    u2310 6DEC  
                                  u2071 7870                                    u2231 728E  
                                  u2215 7220                                    u2151 7160  
                                  u2311 6DE8                                    _LATC 000F8B  
                                  u2400 60BA                                    u1600 67FC  
                                  u2080 7886                                    u2240 72AC  
                                  u2160 7168                                    u2320 6E36  
                                  _LATD 000F8C                                    u2401 60B6  
                                  u1601 67F8                                    u2081 7882  
                                  u2241 72A8                                    u2321 6E32  
                                  u2410 60CA                                    u1610 680E  
                                  u2090 7896                                    u2250 72C6  
                                  u2170 717E                                    u2330 6E5A  
                                  u2411 60C6                                    u1611 680A  
                                  u2091 7892                                    u2251 72C2  
                                  u2171 717A                                    u2331 6E56  
                                  u2500 66E8                                    u2420 608C  
                                  u1620 6836                                    u2260 72D6  
                                  u2180 71B2                                    u2340 6EFE  
                                  u2501 66E4                                    u2421 6088  
                                  u1701 6A86                                    u1621 6832  
                                  u2261 72D2                                    u2181 71AC  
                                  u2341 6EFA                                    u2510 6708  
                                  u2430 609C                                    u1710 6AAA  
                                  u1630 686C                                    u2270 72E6  
                                  u2190 71B4                                    u2350 6F22  
                                  u2511 6704                                    u2431 6098  
                                  u1711 6AA6                                    u1631 6868  
                                  u2271 72E2                                    u2351 6F1E  
                                  u2440 61BE                                    u2280 6048  
                                  u1720 6AD4                                    u1800 69D6  
                                  u1640 62E6                                    u2360 6FE2  
                                  u2520 663A                                    u2600 6C50  
                                  u2441 61BA                                    u2281 6044  
                                  u1721 6AD0                                    u1801 69D2  
                                  u1641 62E2                                    u2361 6FDE  
                                  u2521 6636                                    u2601 6C4C  
                                  u2370 652C                                    u2290 5FEC  
                                  u2450 61D2                                    u1730 6B14  
                                  u1650 612E                                    u1810 6734  
                                  u2530 6652                                    u2610 6C70  
                                  u2291 5FE8                                    u2451 61CE  
                                  u1731 6B10                                    u1651 612A  
                                  u1811 6730                                    u2531 664E  
                                  u2611 6C6C                                    u2380 6554  
                                  u2460 6012                                    u1740 6B5E  
                                  u1820 6756                                    u1660 61A4  
                                  u1900 6596                                    u2540 666A  
                                  u2700 6D9E                                    u2620 6C94  
                                  u2461 600E                                    u1741 6B5A  
                                  u1821 6752                                    u1661 619E  
                                  u1901 6590                                    u2541 6666  
                                  u2701 6D9A                                    u2621 6C90  
                                  u2390 6564                                    u1750 68C6  
                                  u1830 67AC                                    u1670 61A6  
                                  u1910 6598                                    u2470 661C  
                                  u2550 6682                                    u2630 6CB4  
                                  u2391 6560                                    u1751 68C2  
                                  u1831 67A8                                    u2471 6618  
                                  u2711 734C                                    u2551 667E  
                                  u2631 6CB0                                    u2480 66A8  
                                  u1680 6A2A                                    u1760 68F8  
                                  u1840 67BC                                    u1920 65AE  
                                  u2720 736E                                    u2640 6CD8  
                                  u2560 6BC2                                    u2800 7A74  
                                  u2377 6522                                    u2481 66A4  
                                  u1681 6A26                                    u1761 68F4  
                                  u1841 67B8                                    u1921 65AA  
                                  u2721 736A                                    u2641 6CD4  
                                  u2561 6BBE                                    u2801 7A70  
                                  u1930 635E                                    u2490 66C8  
                                  u1690 6A5C                                    u1770 6936  
                                  u1850 623C                                    u2730 737C  
                                  u2650 6CF8                                    u2570 6BDA  
                                  u2810 7A8E                                    u1931 635A  
                                  u2387 654A                                    u2491 66C4  
                                  u1691 6A58                                    u1771 6932  
                                  u1851 6238                                    u2731 7378  
                                  u2651 6CF4                                    u2571 6BD6  
                                  u2811 7A8A                                    u1940 6378  
                                  u1780 6960                                    u1860 616C  
                                  u2740 632E                                    u2660 6D1C  
                                  u2580 6C04                                    u2900 7DC2  
                                  u2820 7B06                                    u1941 6374  
                                  u1781 695C                                    u1861 6166  
                                  u2741 632A                                    u2661 6D18  
                                  u2581 6C00                                    u2901 7DBE  
                                  u2821 7B02                                    u1950 5FC2  
                                  u1790 698E                                    u1870 616E  
                                  u2670 6D3C                                    u2590 6C1C  
                                  u2830 7B20                                    u1951 5FBE  
                                  u1791 698A                                    u2671 6D38  
                                  u2591 6C18                                    u2831 7B1C  
                                  u2751 7914                                    u1960 7648  
                                  u1880 621A                                    u2680 6D4E  
                                  u2840 7B98                                    u1961 7642  
                                  u1881 6214                                    u2681 6D4A  
                                  u2841 7B94                                    u2761 7926  
                                  u1970 764A                                    u1890 621C  
                                  u2690 6D76                                    u2850 7BB2  
                                  u2770 7996                                    u2691 6D72  
                                  u2851 7BAE                                    u2771 7992  
                                  u1980 7660                                    u2860 7C2A  
                                  u2780 79F0                                    u1981 765C  
                                  u2861 7C26                                    u2781 79EC  
                                  u1990 7690                                    u2870 7C44  
                                  u2790 7A02                                    u1991 768C  
                                  u2871 7C40                                    u2791 79FE  
                                  u2880 7D22                                    u2881 7D1E  
                                  u2890 7D3E                                    u2891 7D3A  
                                  _RCEN 007E2B                                    _RDPU 007C27  
                                  _RSEN 007E29                                    _Date 010E  
                                  _Year 010A                                    abs@a 0013  
                                  _dbuf 0112                                    _main 78FC  
                                  _dtoa 7618                         ?_RTC_Read_Clock 0001  
                                  _hour 00F4                        __end_of_I2C_Nack 6002  
                    __size_of_LCD_Clear 0014                                    _prec 00F0  
                      __end_of_I2C_Init 6030                        __end_of_I2C_Read 61E6  
                                  _nout 0106                                    pad@i 0018  
                                  pad@p 0015                                    fsr0h 000FEA  
                                  fsr1h 000FE2                                    indf0 000FEF  
                                  fsr2h 000FDA                                    fsr0l 000FE9  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  pad@w 001A                                    fsr2l 000FD9  
                                  _xtoa 7062                        __end_of_I2C_Stop 6016  
                                  prodl 000FF3                                    start 0000  
                       __end_of_MSdelay 637A                           _LCD_String_xy 6696  
                          ___param_bank 000000                                   ??_Rtc 0076  
      RTC_Read_Clock@read_clock_address 0004                                   ??_abs 0015  
                                 ??_pad 0017                        __end_of_LCD_Char 645C  
                      __end_of_LCD_Init 6106                         __end_of___aodiv 6BA0  
                                 ?_main 0001                                   ?_dtoa 001C  
                       __end_of___aomod 6A18                                   _ACKEN 007E2C  
                                 _ACKDT 007E2D                                   STR_10 7F5F  
                                 STR_11 7EEE                                   STR_12 7F5F  
                                 STR_20 7FBF                                   STR_13 7F23  
                                 STR_21 7EC8                                   STR_30 7FB2  
                                 STR_22 7FF7                                   STR_14 7F5F  
                                 STR_31 7FAD                                   STR_15 7F7B  
                                 STR_23 7F33                                   STR_32 7FD1  
                                 STR_24 7FF7                                   STR_40 7FD9  
                                 STR_16 7F6D                                   STR_25 7F33  
                                 STR_33 7FFA                                   STR_41 7FD5  
                                 STR_17 7FC7                                   STR_42 7FED  
                                 STR_18 7FCC                                   STR_34 7FB6  
                                 STR_26 7EB4                                   STR_19 7FF7  
                                 STR_27 7FF4                                   STR_43 7FDD  
                                 STR_35 7FA3                                   STR_36 7FA9  
                                 STR_28 7FF1                                   STR_44 7FE9  
                                 STR_37 7FD1                                   STR_45 7FFD  
                                 STR_29 7FD1                                   STR_38 7FE5  
                                 STR_39 7FE1                                   ?_xtoa 001C  
                                 _LATA0 007C48                                   _LATA1 007C49  
                                 _LATA2 007C4A                                   _LATC0 007C58  
                                 _LATC1 007C59                            vfpfcnvrt@fmt 0045  
                          vfpfcnvrt@llu 0055                                   _PORTD 000F83  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _SSPIE 007CEB                                   _SSPIF 007CF3  
                                 _Month 010C                                   _flags 00F2  
                                 _fputc 67EA                         __end_of_isalpha 6222  
                       __end_of_keyfind 6DC8                                   _fputs 62A4  
                                 _saldo 0159                       __end_of_I2C_Ready 5FC6  
                                 pad@fp 0011                                   _width 0108  
                                 _putch 5FB2                                   main@a 00DB  
                                 main@c 00C0                                   main@i 00EE  
                                 dtoa@d 001E                                   dtoa@i 003E  
                                 dtoa@n 0036                                   main@z 00E1  
                                 dtoa@p 0030                                   dtoa@s 0034  
                                 dtoa@w 0032                         __end_of_islower 61AC  
                     __end_of_I2C_Start 60D6                       __end_of_I2C_Write 6052  
                       __end_of_isupper 6174                                   tablat 000FF5  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 status 000FD8                     __size_of_LCD_String 005E  
                       __end_of_sprintf 64AE                                   xtoa@c 0041  
                                 xtoa@d 001E                                   xtoa@i 003F  
                                 xtoa@n 0037                                   xtoa@p 0033  
                                 xtoa@w 0035                                   xtoa@x 0026  
                       __end_of_toupper 65C4                          ?_LCD_String_xy 000B  
                          _toupper$1273 000D                         __initialization 6262  
                          __end_of_main 7E9E                            __end_of_dtoa 78FC  
                          __end_of_xtoa 733C                               ??_I2C_Ack 0001  
                                ??_main 00BD                                  ??_dtoa 0026  
                                ??_xtoa 0027                       __end_of_LCD_Clear 5FDA  
                         __activetblptr 000002                                  ?_fputc 0001  
                                ?_fputs 000A                                  ?_putch 0001  
                      LCD_String_xy@msg 000C                        LCD_String_xy@pos 000B  
                      LCD_String_xy@row 000E                               ??_MSdelay 0003  
                                _OSCCON 000FD3                                  _SSPADD 000FC8  
                                _TRISB0 007C98                                  _TRISB1 007C99  
                                _SSPBUF 000FC9                            vfprintf@cfmt 005E  
                             ??___aodiv 0011                               ??___aomod 0011  
                                _keypad 0132                                  clear_0 6288  
                                clear_1 6294                      _I2C_Repeated_Start 607A  
                                pad@buf 0013                                  main@a1 00DD  
                                main@c1 00C6                                  _rowloc 00FC  
                  __size_of_LCD_Command 004C                                  dtoa@fp 001C  
                                _strlen 6106                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                             ?_I2C_Nack 0001                                  fputs@s 000A  
                             ??_isalpha 0003                               ??_keyfind 0007  
                             ?_I2C_Init 0001                               ?_I2C_Read 0001  
                             ?_I2C_Stop 0001                               ??_islower 0003  
                          __mediumconst 7E9E                                  tblptrh 000FF7  
                             ??_isupper 0003                                  tblptrl 000FF6  
                                tblptru 000FF8                     ?_I2C_Repeated_Start 0001  
                                putch@c 0001                        __end_of_vfprintf 6626  
                             ??_sprintf 0060                                  xtoa@fp 001C  
                             ??_toupper 0009                               ?_LCD_Char 0001  
                            __accesstop 0060                 __end_of__initialization 629A  
                             ?_LCD_Init 0001                         ??_LCD_String_xy 000E  
                         ___rparam_used 000001                    ??_I2C_Repeated_Start 0002  
                        __pcstackCOMRAM 0001                            __pidataBANK1 6053  
                         __end_of_fputc 68B4                           __end_of_fputs 62E8  
                         __end_of_putch 5FB4                            ??_LCD_String 000B  
                     ?_entregarproducto 0007                              ??_I2C_Nack 0001  
                            ??_I2C_Init 0001                              ??_I2C_Read 0001  
                            ??_I2C_Stop 0001                      ??_entregarproducto 0009  
                      ??_RTC_Read_Clock 0003                                 ??_fputc 0005  
                               ??_fputs 000E                                 ??_putch 0001  
                            __pbssBANK0 00F0                              __pbssBANK1 0100  
                            ??_LCD_Char 0007                              ??_LCD_Init 0009  
                    __end_of_LCD_String 6566                            I2C_Read@flag 0001  
                        I2C_Read@buffer 0002                                 _I2C_Ack 5FDA  
                               _ACKSTAT 007E2E                                 ?_strlen 0001  
                    __size_of_vfpfcnvrt 029A                                 _SSPCON1 000FC6  
                               _SSPCON2 000FC5                                 _SSPSTAT 000FC7  
                               _MSdelay 6330                               _I2C_Ready 5FB4  
                             _I2C_Start 60A8                               _I2C_Write 6030  
                               Rtc@date 007F                                 Rtc@days 0078  
                         LCD_String@msg 0009                                 Rtc@mins 00A7  
                               Rtc@secs 009D                                 Rtc@year 0093  
                               __Hparam 0000                                 __Lparam 0000  
                               ___aodiv 6A18                       _RTC_Read_Calendar 64AE  
                               ___aomod 68B4                               ?_vfprintf 0060  
                    ?_RTC_Read_Calendar 0001                                 __pcinit 6262  
                               __ramtop 0800                                 __ptext0 78FC  
                               __ptext1 6BA0                                 __ptext2 62E8  
                               __ptext3 6626                                 __ptext4 733C  
                               __ptext5 645C                                 __ptext6 65C4  
                               __ptext7 6DC8                                 __ptext8 7062  
                               __ptext9 6566                                 _col_loc 00FD  
                       __size_of_strlen 0036                            __size_of_Rtc 02DC  
                          __size_of_abs 0040                            __size_of_pad 00C6  
                               _isalpha 61E6                                 _keyfind 6BA0  
                   ??_RTC_Read_Calendar 0003                                 _islower 6174  
                               _isupper 613C                               _LCD_Clear 5FC6  
                               _sprintf 645C                                 main@key 00EB  
                               _toupper 6566                    end_of_initialization 629A  
                               fputc@fp 0003                          LCD_Command@cmd 0008  
                         __Lmediumconst 7E9E                                 fputs@fp 000C  
                            ?_I2C_Ready 0001                              ?_I2C_Start 0001  
                            ?_I2C_Write 0001               __end_of_RTC_Read_Calendar 6508  
                     __end_of_vfpfcnvrt 7062                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
                     entregarproducto@a 0007                              ??_vfprintf 005E  
                               strlen@a 0003                                 strlen@s 0001  
                            main@a1_401 00DF                              main@c1_402 00CC  
                            ?_LCD_Clear 0001                       __size_of_I2C_Nack 0014  
                     __size_of_I2C_Init 001A                       __size_of_I2C_Read 003A  
                     __size_of_I2C_Stop 0014                              main@compra 00EC  
                             _Data_read 00FA                       __size_of_LCD_Char 004C  
                     __size_of_LCD_Init 0030                           ??_LCD_Command 0007  
                           vfpfcnvrt@ap 0047                             vfpfcnvrt@fp 0043  
                           vfpfcnvrt@ll 004D                          __end_of_strlen 613C  
                   start_initialization 6262                             __end_of_Rtc 7618  
                           __end_of_abs 6262                             __end_of_pad 67EA  
  I2C_Repeated_Start@slave_read_address 0002                       _entregarproductos 62E8  
                    ?_entregarproductos 0001                             ??_I2C_Ready 0001  
             __size_of_entregarproducto 0070                             ??_I2C_Start 0002  
                           ??_I2C_Write 0001                   __end_of_LCD_String_xy 6724  
                  main@v_prodisponibles 00E3              __size_of_RTC_Read_Calendar 005A  
                   ??_entregarproductos 0009                             vfprintf@fmt 0062  
           __size_of_I2C_Repeated_Start 002E                             __pdataBANK1 0132  
                              ?_I2C_Ack 0001                                ??_strlen 0003  
                   __end_of_LCD_Command 6410                           __pcstackBANK0 0060  
                      ___aodiv@dividend 0001                             ??_LCD_Clear 0009  
             __end_of_entregarproductos 6330                                ?_MSdelay 0001  
                             __pnvBANK1 0159                               _dtoa$1177 002E  
                         __pmediumconst 7E9E                                ?___aodiv 0001  
                              ?___aomod 0001                        ___aodiv@quotient 0013  
                     __size_of_vfprintf 0062                                _I2C_Nack 5FEE  
                              ?_isalpha 0001                                ?_keyfind 0001  
                              _I2C_Init 6016                                _I2C_Read 61AC  
                              _I2C_Stop 6002                                ?_islower 0001  
                              ?_isupper 0001                                ?_sprintf 0066  
                        __size_of_fputc 00CA                          __size_of_fputs 0044  
                              ?_toupper 0007                          __size_of_putch 0002  
                              MSdelay@i 0003                                MSdelay@j 0005  
                              _LCD_Char 6410                                _LCD_Init 60D6  
               __size_of_RTC_Read_Clock 004A                               main@F3720 014A  
                             main@F3722 0142                             _LCD_Command 63C4  
                             _vfpfcnvrt 6DC8                               _xtoa$1188 002F  
                             _xtoa$1189 0031                        __size_of_I2C_Ack 0014  
                              Rtc@F3747 0152              __size_of_entregarproductos 0048  
                              Rtc@AM_PM 00BC                              vfpfcnvrt@c 005D  
                             copy_data0 6276            I2C_Start@slave_write_address 0002  
                      __size_of_MSdelay 004A                                Rtc@hours 00B1  
                      _entregarproducto 6626                                Rtc@month 0089  
                              __Hrparam 0000                        main@v_proprecios 00D3  
                            vfprintf@ap 0064                                __Lrparam 0000  
                            vfprintf@fp 0060                           I2C_Write@data 0001  
                      __size_of___aodiv 0188                        __size_of___aomod 0164  
                            ?_vfpfcnvrt 0043                         ___aodiv@divisor 0009  
                       ___aodiv@counter 0011                              sprintf@fmt 0068  
                      __size_of_isalpha 003C                        __size_of_keyfind 0228  
                      __size_of_islower 0038                                __ptext10 6174  
                              __ptext11 613C                                __ptext20 68B4  
                              __ptext12 61E6                                __ptext21 6A18  
                              __ptext13 7618                                __ptext30 5FEE  
                              __ptext22 637A                                __ptext14 6724  
                              __ptext31 5FDA                                __ptext23 64AE  
                              __ptext15 6106                                __ptext32 6696  
                              __ptext24 6002                                __ptext16 62A4  
                              __ptext33 6508                                __ptext25 60A8  
                              __ptext17 67EA                                __ptext34 6410  
                              __ptext26 607A                                __ptext18 5FB2  
                              __ptext35 60D6                                __ptext27 6030  
                              __ptext19 6222                                __ptext36 5FC6  
                              __ptext28 61AC                                __ptext37 63C4  
                              __ptext29 5FB4                                __ptext38 6330  
                              __ptext39 6016                        __size_of_isupper 0038  
                      __size_of_sprintf 0052                        __size_of_toupper 005E  
                         _v_proentregar 0100                           __size_of_main 05A2  
                         __size_of_dtoa 02E4                           __size_of_xtoa 02DA  
                            MSdelay@val 0001                                _temp_col 00FB  
                              _vfprintf 65C4                              _LCD_String 6508  
                      ___aomod@dividend 0001                                isalpha@c 0001  
                             sprintf@ap 006E                                islower@c 0001  
            __end_of_I2C_Repeated_Start 60A8                                isupper@c 0001  
                        _RTC_Read_Clock 637A                              _OSCCONbits 000FD3  
                       ___aomod@divisor 0009                             ??_vfpfcnvrt 0049  
                       ___aomod@counter 0011                      entregarproductos@i 0009  
                              sprintf@f 0070                                sprintf@s 0066  
                              toupper@c 0007                  __size_of_LCD_String_xy 008E  
                           _SSPCON1bits 000FC6                             _SSPCON2bits 000FC5  
                          ___aodiv@sign 0012                  __end_of_RTC_Read_Clock 63C4  
                          ___aomod@sign 0012  
